{"remainingRequest":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/babel-loader/lib/index.js!/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/src/views/student/ExamPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/src/views/student/ExamPage.vue","mtime":1648737495000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/babel.config.js","mtime":1648737495000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","data","examInfo","questionInfo","questionType","curIndex","bigImgDialog","bigImgUrl","userAnswer","loading","show","optionName","duration","mediaStreamTrack","takePhotoUrl","cameraOn","created","body","lock","text","spinner","window","setTimeout","times","item","mounted","_gap_time","localStorage","_beforeUnload_time","methods","getExamInfo","exam","getQuestionInfo","ids","question","showBigImg","url","checkSingleAnswer","index","selectedMultipleAnswer","String","join","getCamera","video","width","height","audio","promise","catch","message","type","takePhoto","ctx","formData","closeCamera","tracks","track","document","base64ToFile","urlData","fileName","ia","uploadExamToAdmin","reg","flag","confirmButtonText","cancelButtonText","then","title","watch","newVal"],"sourceRoot":"src/views/student","sources":["ExamPage.vue"],"sourcesContent":["<template>\n\n  <el-container v-if=\"show\">\n    <el-header style=\"margin-top: 60px\">\n      <el-row>\n        <el-col :span=\"18\" :offset=\"3\" style=\"border-bottom: 1px solid #f5f5f5\">\n          <span class=\"startExam\">开始考试</span>\n          <span class=\"examTitle\">距离考试结束还有：</span>\n          <span style=\"color: red;font-size: 18px;\">{{ duration | timeFormat }}</span>\n          <el-button type=\"warning\" round\n                     style=\"background-color: #ffd550;float: right;color: black;font-weight: 800\"\n                     @click=\"uploadExamToAdmin\">提交试卷\n          </el-button>\n        </el-col>\n      </el-row>\n    </el-header>\n\n    <el-main>\n      <el-row>\n        <el-col :span=\"18\" :offset=\"3\">\n          <el-col :span=\"16\">\n            <el-card style=\"min-height: 500px\">\n              <!--题目信息-->\n              <div>\n                <i class=\"num\">{{ curIndex + 1 }}</i>\n                <span v-if=\"questionInfo[curIndex].questionType === 1\">【单选题】</span>\n                <span v-else-if=\"questionInfo[curIndex].questionType === 2\">【多选题】</span>\n                <span v-else-if=\"questionInfo[curIndex].questionType === 3\">【判断题】</span>\n                <span v-else>【简答题】</span>\n                <span>{{ questionInfo[curIndex].questionContent }}:</span>\n              </div>\n              <!--题目中的配图-->\n              <img v-for=\"url in questionInfo[curIndex].images\" :src=\"url\" title=\"点击查看大图\" alt=\"题目图片\"\n                   style=\"width: 100px;height: 100px;cursor: pointer\" @click=\"showBigImg(url)\">\n\n              <!--单选 和 判断 的答案列表-->\n              <div style=\"margin-top: 25px\"\n                   v-show=\"questionInfo[curIndex].questionType === 1 || questionInfo[curIndex].questionType === 3\">\n                <div class=\"el-radio-group\">\n                  <label v-for=\"(item,index) in questionInfo[curIndex].answer\"\n                         @click=\"checkSingleAnswer(index)\"\n                         :class=\"index === userAnswer[curIndex] ? 'active' : ''\">\n                    <span>{{ optionName[index] + '、' + item.answer }}</span>\n                    <img style=\"position: absolute;left:100%;top:50%;transform: translateY(-50%);\n                  width: 40px;height: 40px;float: right;cursor: pointer;\" title=\"点击查看大图\"\n                         v-if=\"item.images !== null\"\n                         v-for=\"i2 in item.images\" :src=\"i2\" alt=\"\" @mouseover=\"showBigImg(i2)\">\n                  </label>\n                </div>\n              </div>\n\n              <!--多选的答案列表-->\n              <div style=\"margin-top: 25px\" v-show=\"questionInfo[curIndex].questionType === 2\">\n                <div class=\"el-radio-group\">\n                  <label v-for=\"(item,index) in questionInfo[curIndex].answer\"\n                         @click=\"selectedMultipleAnswer(index)\"\n                         :class=\"(userAnswer[curIndex]+'').indexOf(index+'') !== -1? 'active' : ''\">\n                    <span>{{ optionName[index] + '、' + item.answer }}</span>\n                    <img style=\"position: absolute;left:100%;top:50%;transform: translateY(-50%);\n                  width: 40px;height: 40px;float: right;cursor: pointer;\" title=\"点击查看大图\"\n                         v-if=\"item.images !== null\"\n                         v-for=\"i2 in item.images\" :src=\"i2\" alt=\"\" @mouseover=\"showBigImg(i2)\">\n                  </label>\n                </div>\n              </div>\n\n              <!--简答题的答案-->\n              <div style=\"margin-top: 25px\" v-show=\"questionInfo[curIndex].questionType === 4\">\n                <el-input\n                  type=\"textarea\"\n                  :rows=\"8\"\n                  placeholder=\"请输入答案\"\n                  v-model=\"userAnswer[curIndex]\">\n                </el-input>\n              </div>\n\n              <!--上一题 下一题-->\n              <div style=\"margin-top: 25px\">\n                <el-button type=\"primary\" icon=\"el-icon-back\" :disabled=\"curIndex<1\" @click=\"curIndex--\">上一题</el-button>\n                <el-button type=\"primary\" icon=\"el-icon-right\" :disabled=\"curIndex>=questionInfo.length-1\"\n                           @click=\"curIndex++\">下一题\n                </el-button>\n              </div>\n\n            </el-card>\n          </el-col>\n\n          <el-col :span=\"7\" :offset=\"1\">\n            <!--答题卡卡片-->\n            <el-card>\n              <div>\n                <p style=\"font-size: 18px;\">答题卡</p>\n                <div style=\"margin-top: 25px\">\n                  <span\n                    style=\"background-color: rgb(238,238,238);padding: 5px 10px 5px 10px;margin-left: 15px\">未作答</span>\n                  <span style=\"background-color: rgb(87,148,247);color: white;\n                padding: 5px 10px 5px 10px;margin-left: 15px\">已作答</span>\n                </div>\n              </div>\n\n              <!--单选的答题卡-->\n              <div style=\"margin-top: 25px\">\n                <p style=\"font-size: 18px;\">单选题</p>\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\n                           v-show=\"questionInfo[item-1].questionType === 1\"\n                           :class=\"questionInfo[item-1].questionType === 1 && userAnswer[item-1] !== undefined ?\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\n                </el-button>\n              </div>\n\n              <!--多选的答题卡-->\n              <div style=\"margin-top: 25px\">\n                <p style=\"font-size: 18px;\">多选题</p>\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\n                           v-show=\"questionInfo[item-1].questionType === 2\"\n                           :class=\"questionInfo[item-1].questionType === 2 && userAnswer[item-1] !== undefined ?\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\n                </el-button>\n              </div>\n\n              <!--判断的答题卡-->\n              <div style=\"margin-top: 25px\">\n                <p style=\"font-size: 18px;\">判断题</p>\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\n                           v-show=\"questionInfo[item-1].questionType === 3\"\n                           :class=\"questionInfo[item-1].questionType === 3 && userAnswer[item-1] !== undefined ?\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\n                </el-button>\n              </div>\n\n              <!--简答的答题卡-->\n              <div style=\"margin-top: 25px\">\n                <p style=\"font-size: 18px;\">简答题</p>\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\n                           v-show=\"questionInfo[item-1].questionType === 4\"\n                           :class=\"questionInfo[item-1].questionType === 4 && userAnswer[item-1] !== undefined ?\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\n                </el-button>\n              </div>\n            </el-card>\n          </el-col>\n\n        </el-col>\n      </el-row>\n      <video id=\"video\" muted=\"muted\" style=\"float:right;position: fixed;top: 80%;left: 85%\" width=\"200px\"\n             height=\"200px\" autoplay=\"autoplay\"></video>\n      <canvas id=\"canvas\" hidden width=\"200px\" height=\"200px\"></canvas>\n    </el-main>\n    <!--图片回显-->\n    <el-dialog :visible.sync=\"bigImgDialog\" @close=\"bigImgDialog = false\">\n      <img style=\"width: 100%\" :src=\"bigImgUrl\">\n    </el-dialog>\n  </el-container>\n\n</template>\n\n<script>\n\nimport exam from '@/api/exam'\nimport question from '@/api/question'\n\nexport default {\n  name: 'ExamPage',\n  data () {\n    return {\n      //当前考试的信息\n      examInfo: {},\n      //当前的考试题目\n      questionInfo: [\n        {\n          questionType: ''\n        }\n      ],\n      //当前题目的索引值\n      curIndex: 0,\n      //控制大图的对话框\n      bigImgDialog: false,\n      //当前要展示的大图的url\n      bigImgUrl: '',\n      //用户选择的答案\n      userAnswer: [],\n      //页面数据加载\n      loading: {},\n      //页面绘制是否开始\n      show: false,\n      //答案的选项名abcd数据\n      optionName: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n      //考试总时长\n      duration: 0,\n      //摄像头对象\n      mediaStreamTrack: null,\n      //诚信照片的url\n      takePhotoUrl: [],\n      //摄像头是否开启\n      cameraOn: false,\n    }\n  },\n  created () {\n    this.getExamInfo()\n    //页面数据加载的等待状态栏\n    this.loading = this.$Loading.service({\n      body: true,\n      lock: true,\n      text: '数据拼命加载中,(*╹▽╹*)',\n      spinner: 'el-icon-loading',\n    })\n    //开启摄像头\n    window.onload = () => {\n      setTimeout(() => {\n        this.getCamera()\n      }, 1000)\n\n      //生成3次时间点截图\n      let times = []\n      for (let i = 0; i < 2; i++) {\n        times.push(Math.ceil(Math.random() * this.duration * 1000))\n      }\n      times.push(10000)\n      //一次考试最多3次随机的诚信截图\n      times.forEach(item => {\n        window.setTimeout(() => {\n          this.takePhoto()\n        }, item)\n      })\n    }\n  },\n  mounted () {\n    //关闭浏览器窗口的时候移除 localstorage的时长\n    var userAgent = navigator.userAgent //取得浏览器的userAgent字符串\n    var isOpera = userAgent.indexOf('Opera') > -1 //判断是否Opera浏览器\n    var isIE = userAgent.indexOf('compatible') > -1 && userAgent.indexOf('MSIE') > -1 && !isOpera //判断是否IE浏览器\n    var isIE11 = userAgent.indexOf('rv:11.0') > -1 //判断是否是IE11浏览器\n    var isEdge = userAgent.indexOf('Edge') > -1 && !isIE //判断是否IE的Edge浏览器\n    if (!isIE && !isEdge && !isIE11) {//兼容chrome和firefox\n      var _beforeUnload_time = 0, _gap_time = 0\n      var is_fireFox = navigator.userAgent.indexOf('Firefox') > -1//是否是火狐浏览器\n      window.onunload = function () {\n        _gap_time = new Date().getTime() - _beforeUnload_time\n        if (_gap_time <= 5) {\n          localStorage.removeItem('examDuration' + this.examInfo.examId)\n        } else {//谷歌浏览器刷新\n        }\n      }\n      window.onbeforeunload = function () {\n        _beforeUnload_time = new Date().getTime()\n        if (is_fireFox) {//火狐关闭执行\n\n        } else {//火狐浏览器刷新\n        }\n      }\n    }\n  },\n  methods: {\n    //查询当前考试的信息\n    getExamInfo () {\n      exam.getExamInfoById(this.$route.params).then((resp) => {\n        if (resp.code === 200) {\n          this.examInfo = resp.data\n          //设置定时(秒)\n          if (localStorage.getItem('examDuration' + this.examInfo.examId) === '0') localStorage.removeItem('examDuration' + this.examInfo.examId)\n          this.duration = localStorage.getItem('examDuration' + this.examInfo.examId) || resp.data.examDuration * 60\n          //考试剩余时间定时器\n          this.timer = window.setInterval(() => {\n            if (this.duration > 0) this.duration--\n          }, 1000)\n          this.getQuestionInfo(resp.data.questionIds.split(','))\n        }\n      })\n    },\n    //查询考试的题目信息\n    async getQuestionInfo (ids) {\n      await ids.forEach((item, index) => {\n        question.getQuestionById(item).then((resp) => {\n          if (index === 0) this.questionInfo = []\n          if (resp.code === 200) {\n            this.questionInfo.push(resp.data)\n            //重置问题的顺序 单选 多选 判断 简答\n            this.questionInfo = this.questionInfo.sort(function (a, b) {\n              return a.questionType - b.questionType\n            })\n          }\n        })\n      })\n      this.loading.close()\n      this.show = true\n    },\n    //点击展示高清大图\n    showBigImg (url) {\n      this.bigImgUrl = url\n      this.bigImgDialog = true\n    },\n    //检验单选题的用户选择的答案\n    checkSingleAnswer (index) {\n      this.$set(this.userAnswer, this.curIndex, index)\n    },\n    //多选题用户的答案选中\n    selectedMultipleAnswer (index) {\n      if (this.userAnswer[this.curIndex] === undefined) {//当前是多选的第一个答案\n        this.$set(this.userAnswer, this.curIndex, index)\n      } else if (String(this.userAnswer[this.curIndex]).split(',').includes(index + '')) {//取消选中\n        let newArr = []\n        String(this.userAnswer[this.curIndex]).split(',').forEach(item => {\n          if (item !== '' + index) newArr.push(item)\n        })\n        if (newArr.length === 0) {\n          this.$set(this.userAnswer, this.curIndex, undefined)\n        } else {\n          this.$set(this.userAnswer, this.curIndex, newArr.join(','))\n          //答案格式化顺序DBAC -> ABCD\n          this.userAnswer[this.curIndex] = String(this.userAnswer[this.curIndex]).split(',').sort(function (a, b) {\n            return a - b\n          }).join(',')\n        }\n      } else if (!((this.userAnswer[this.curIndex] + '').split(',').includes(index + ''))) {//第n个答案\n        this.$set(this.userAnswer, this.curIndex, this.userAnswer[this.curIndex] += ',' + index)\n        //答案格式化顺序DBAC -> ABCD\n        this.userAnswer[this.curIndex] = String(this.userAnswer[this.curIndex]).split(',').sort(function (a, b) {\n          return a - b\n        }).join(',')\n      }\n    },\n    //调用摄像头\n    getCamera () {\n      let constraints = {\n        video: {\n          width: 200,\n          height: 200\n        },\n        audio: false\n      }\n      //获得video摄像头\n      let video = document.getElementById('video')\n      let promise = navigator.mediaDevices.getUserMedia(constraints)\n      promise.then((mediaStream) => {\n        this.mediaStreamTrack = typeof mediaStream.stop === 'function' ? mediaStream : mediaStream.getTracks()[1]\n        video.srcObject = mediaStream\n        video.play()\n        this.cameraOn = true\n      }).catch((back) => {\n        this.$message({\n          duration: 1500,\n          message: '请开启摄像头权限o(╥﹏╥)o!',\n          type: 'error'\n        })\n      })\n    },\n    //拍照\n    takePhoto () {\n      if (this.cameraOn) {//摄像头是否开启 开启了才执行上传信用图片\n        //获得Canvas对象\n        let video = document.getElementById('video')\n        let canvas = document.getElementById('canvas')\n        let ctx = canvas.getContext('2d')\n        ctx.drawImage(video, 0, 0, 200, 200)\n        // toDataURL  ---  可传入'image/png'---默认, 'image/jpeg'\n        let img = document.getElementById('canvas').toDataURL()\n\n        //构造post的form表单\n        let formData = new FormData()\n        //convertBase64UrlToBlob函数是将base64编码转换为Blob\n        formData.append('file', this.base64ToFile(img, 'examTakePhoto.png'))\n        //上传阿里云OSS\n        this.$http.post(this.API.uploadQuestionImage, formData).then((resp) => {\n          if (resp.data.code === 200) this.takePhotoUrl.push(resp.data.data)\n        })\n      }\n    },\n    //关闭摄像头\n    closeCamera () {\n      let stream = document.getElementById('video').srcObject\n      let tracks = stream.getTracks()\n      tracks.forEach(function (track) {\n        track.stop()\n      })\n      document.getElementById('video').srcObject = null\n    },\n    //将摄像头截图的base64串转化为file提交后台\n    base64ToFile (urlData, fileName) {\n      let arr = urlData.split(',')\n      let mime = arr[0].match(/:(.*?);/)[1]\n      let bytes = atob(arr[1]) // 解码base64\n      let n = bytes.length\n      let ia = new Uint8Array(n)\n      while (n--) {\n        ia[n] = bytes.charCodeAt(n)\n      }\n      return new File([ia], fileName, { type: mime })\n    },\n    //上传用户考试信息进入后台\n    async uploadExamToAdmin () {\n      if (this.cameraOn) await this.takePhoto()//结束的时候拍照上传一张\n      // 正则\n      var reg = new RegExp('-', 'g')\n      // 去掉用户输入的非法分割符号(-),保证后端接受数据处理不报错\n      this.userAnswer.forEach((item, index) => {\n        if (this.questionInfo[index].questionType === 4) {//简答题答案处理\n          this.userAnswer[index] = item.replace(reg, ' ')\n        }\n      })\n\n      // 标记题目是否全部做完\n      let flag = true\n      for (let i = 0; i < this.userAnswer.length; i++) {// 检测用户是否题目全部做完\n        if (this.userAnswer[i] === undefined) {\n          flag = false\n        }\n      }\n      // 如果用户所有答案的数组长度小于题目长度,这个时候也要将标志位置为false\n      if (this.userAnswer.length < this.questionInfo.length) {\n        flag = false\n      }\n      //题目未做完\n      if (!flag) {\n        // if (this.userAnswer.some((item) => item === undefined)) {\n        this.$confirm('当前试题暂未做完, 是否继续提交o(╥﹏╥)o ?', 'Tips', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          let data = {}\n          data.questionIds = []\n          data.userAnswers = this.userAnswer.join('-')\n          this.questionInfo.forEach((item, index) => {\n            data.questionIds.push(item.questionId)\n            //当前数据不完整,用户回答不完整(我们自动补充空答案,防止业务出错)\n            if (index > (this.userAnswer.length - 1)) {\n              data.userAnswers += '- '\n            }\n          })\n          //如果所有题目全部未答\n          if (this.userAnswer.length === 0) {\n            this.questionInfo.forEach(item => {\n              data.userAnswers += ' -'\n            })\n            data.userAnswers.split(0, data.userAnswers.length - 1)\n          }\n          data.examId = parseInt(this.$route.params.examId)\n          data.questionIds = data.questionIds.join(',')\n          data.creditImgUrl = this.takePhotoUrl.join(',')\n          exam.addExamRecord(data).then((resp) => {\n            if (resp.code === 200) {\n              this.$notify({\n                title: 'Tips',\n                message: '考试结束 *^▽^*',\n                type: 'success',\n                duration: 2000\n              })\n              this.$router.push('/examResult/' + resp.data)\n            }\n          })\n        }).catch(() => {\n          this.$notify({\n            title: 'Tips',\n            message: '继续加油! *^▽^*',\n            type: 'success',\n            duration: 2000\n          })\n        })\n      } else {//当前题目做完了\n        if (this.cameraOn) {\n          //结束的时候拍照上传一张\n          this.takePhoto()\n          this.closeCamera()\n        }\n        let data = {}\n        data.questionIds = []\n        data.userAnswers = this.userAnswer.join('-')\n        data.examId = parseInt(this.$route.params.examId)\n        data.creditImgUrl = this.takePhotoUrl.join(',')\n        this.questionInfo.forEach((item, index) => {\n          data.questionIds.push(item.questionId)\n        })\n        data.questionIds = data.questionIds.join(',')\n        exam.addExamRecord(data).then((resp) => {\n          if (resp.code === 200) {\n            this.$notify({\n              title: 'Tips',\n              message: '考试结束 *^▽^*',\n              type: 'success',\n              duration: 2000\n            })\n            this.$router.push('/examResult/' + resp.data)\n          }\n        })\n      }\n    }\n  },\n  watch: {\n    //监控考试的剩余时间\n    duration (newVal) {\n      localStorage.setItem('examDuration' + this.examInfo.examId, newVal)\n      //摄像头数据\n      let constraints = {\n        video: {\n          width: 200,\n          height: 200\n        },\n        audio: false\n      }\n      //通过调用摄像头判断用户是否中途关闭摄像头\n      let promise = navigator.mediaDevices.getUserMedia(constraints)\n      promise.catch((back) => {\n        this.cameraOn = false\n      })\n      if (!this.cameraOn) {//如果摄像头未开启,就再次调用开启\n        this.getCamera()\n      }\n      //考试时间结束了提交试卷\n      if (newVal < 1) {\n        if (this.cameraOn) {\n          //结束的时候拍照上传一张\n          this.takePhoto()\n          this.closeCamera()\n        }\n        let data = {}\n        data.questionIds = []\n        data.userAnswers = this.userAnswer.join('-')\n        this.questionInfo.forEach((item, index) => {\n          data.questionIds.push(item.questionId)\n          //当前数据不完整,用户回答不完整(我们自动补充空答案,防止业务出错)\n          if (index > this.userAnswer.length) {\n            data.userAnswers += ' -'\n          }\n        })\n        //如果所有题目全部未答\n        if (data.userAnswers === '') {\n          this.questionInfo.forEach(item => {\n            data.userAnswers += ' -'\n          })\n          data.userAnswers.split(0, data.userAnswers.length - 1)\n        }\n        data.examId = parseInt(this.$route.params.examId)\n\n        data.questionIds = data.questionIds.join(',')\n        data.creditImgUrl = this.takePhotoUrl.join(',')\n        exam.addExamRecord(data).then((resp) => {\n          if (resp.code === 200) {\n            this.$notify({\n              title: 'Tips',\n              message: '考试时间结束,已为您自动提交 *^▽^*',\n              type: 'success',\n              duration: 2000\n            })\n            this.$router.push('/examResult/' + resp.data)\n          }\n        })\n      }\n    },\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../../assets/css/student/examPage\";\n</style>\n"]}]}