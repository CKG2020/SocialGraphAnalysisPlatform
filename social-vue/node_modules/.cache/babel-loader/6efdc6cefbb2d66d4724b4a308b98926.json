{"remainingRequest":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/babel-loader/lib/index.js!/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/src/api/question.js","dependencies":[{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/src/api/question.js","mtime":1648737495000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/babel.config.js","mtime":1648737495000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHJlcXVlc3QgZnJvbSAnQC91dGlscy9yZXF1ZXN0JzsKZXhwb3J0IGRlZmF1bHQgewogIGdldFF1ZXN0aW9uQnlJZDogZnVuY3Rpb24gZ2V0UXVlc3Rpb25CeUlkKHF1ZXN0aW9uSWQpIHsKICAgIHJldHVybiByZXF1ZXN0KHsKICAgICAgdXJsOiAiL3N0dWRlbnQvZ2V0UXVlc3Rpb25CeUlkLyIuY29uY2F0KHF1ZXN0aW9uSWQpLAogICAgICBtZXRob2Q6ICdnZXQnCiAgICB9KTsKICB9LAogIGdldFF1ZXN0aW9uOiBmdW5jdGlvbiBnZXRRdWVzdGlvbihxdWVyeUluZm8pIHsKICAgIHJldHVybiByZXF1ZXN0KHsKICAgICAgdXJsOiAnL3RlYWNoZXIvZ2V0UXVlc3Rpb24nLAogICAgICBtZXRob2Q6ICdnZXQnLAogICAgICBwYXJhbXM6IHF1ZXJ5SW5mbwogICAgfSk7CiAgfSwKICBkZWxldGVRdWVzdGlvbjogZnVuY3Rpb24gZGVsZXRlUXVlc3Rpb24ocXVlc3Rpb25JZHMpIHsKICAgIHJldHVybiByZXF1ZXN0KHsKICAgICAgdXJsOiAnL3RlYWNoZXIvZGVsZXRlUXVlc3Rpb24nLAogICAgICBtZXRob2Q6ICdnZXQnLAogICAgICBwYXJhbXM6IHF1ZXN0aW9uSWRzCiAgICB9KTsKICB9LAogIGFkZFF1ZXN0aW9uOiBmdW5jdGlvbiBhZGRRdWVzdGlvbihxdWVzdGlvbikgewogICAgcmV0dXJuIHJlcXVlc3QoewogICAgICB1cmw6ICcvdGVhY2hlci9hZGRRdWVzdGlvbicsCiAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICBkYXRhOiBxdWVzdGlvbgogICAgfSk7CiAgfSwKICB1cGRhdGVRdWVzdGlvbjogZnVuY3Rpb24gdXBkYXRlUXVlc3Rpb24ocXVlc3Rpb24pIHsKICAgIHJldHVybiByZXF1ZXN0KHsKICAgICAgdXJsOiAnL3RlYWNoZXIvdXBkYXRlUXVlc3Rpb24nLAogICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgZGF0YTogcXVlc3Rpb24KICAgIH0pOwogIH0sCiAgZ2V0UXVlc3Rpb25CeUJhbmtJZEFuZFR5cGU6IGZ1bmN0aW9uIGdldFF1ZXN0aW9uQnlCYW5rSWRBbmRUeXBlKHBhcmFtcykgewogICAgcmV0dXJuIHJlcXVlc3QoewogICAgICB1cmw6ICcvcHVibGljL2dldFF1ZXN0aW9uQnlCYW5rSWRBbmRUeXBlJywKICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgcGFyYW1zOiBwYXJhbXMKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/src/api/question.js"],"names":["request","getQuestionById","questionId","url","method","getQuestion","queryInfo","params","deleteQuestion","questionIds","addQuestion","question","data","updateQuestion","getQuestionByBankIdAndType"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,eAAe;AACbC,EAAAA,eADa,2BACIC,UADJ,EACgB;AAC3B,WAAOF,OAAO,CAAC;AACbG,MAAAA,GAAG,qCAA8BD,UAA9B,CADU;AAEbE,MAAAA,MAAM,EAAE;AAFK,KAAD,CAAd;AAID,GANY;AAObC,EAAAA,WAPa,uBAOAC,SAPA,EAOW;AACtB,WAAON,OAAO,CAAC;AACbG,MAAAA,GAAG,EAAE,sBADQ;AAEbC,MAAAA,MAAM,EAAE,KAFK;AAGbG,MAAAA,MAAM,EAAED;AAHK,KAAD,CAAd;AAKD,GAbY;AAcbE,EAAAA,cAda,0BAcGC,WAdH,EAcgB;AAC3B,WAAOT,OAAO,CAAC;AACbG,MAAAA,GAAG,EAAE,yBADQ;AAEbC,MAAAA,MAAM,EAAE,KAFK;AAGbG,MAAAA,MAAM,EAAEE;AAHK,KAAD,CAAd;AAKD,GApBY;AAqBbC,EAAAA,WArBa,uBAqBAC,QArBA,EAqBU;AACrB,WAAOX,OAAO,CAAC;AACbG,MAAAA,GAAG,EAAE,sBADQ;AAEbC,MAAAA,MAAM,EAAE,MAFK;AAGbQ,MAAAA,IAAI,EAAED;AAHO,KAAD,CAAd;AAKD,GA3BY;AA4BbE,EAAAA,cA5Ba,0BA4BGF,QA5BH,EA4Ba;AACxB,WAAOX,OAAO,CAAC;AACbG,MAAAA,GAAG,EAAE,yBADQ;AAEbC,MAAAA,MAAM,EAAE,MAFK;AAGbQ,MAAAA,IAAI,EAAED;AAHO,KAAD,CAAd;AAKD,GAlCY;AAmCbG,EAAAA,0BAnCa,sCAmCcP,MAnCd,EAmCqB;AAChC,WAAOP,OAAO,CAAC;AACbG,MAAAA,GAAG,EAAE,oCADQ;AAEbC,MAAAA,MAAM,EAAE,KAFK;AAGbG,MAAAA,MAAM,EAAEA;AAHK,KAAD,CAAd;AAKD;AAzCY,CAAf","sourcesContent":["import request from '@/utils/request'\n\nexport default {\n  getQuestionById (questionId) {\n    return request({\n      url: `/student/getQuestionById/${questionId}`,\n      method: 'get'\n    })\n  },\n  getQuestion (queryInfo) {\n    return request({\n      url: '/teacher/getQuestion',\n      method: 'get',\n      params: queryInfo\n    })\n  },\n  deleteQuestion (questionIds) {\n    return request({\n      url: '/teacher/deleteQuestion',\n      method: 'get',\n      params: questionIds\n    })\n  },\n  addQuestion (question) {\n    return request({\n      url: '/teacher/addQuestion',\n      method: 'post',\n      data: question\n    })\n  },\n  updateQuestion (question) {\n    return request({\n      url: '/teacher/updateQuestion',\n      method: 'post',\n      data: question\n    })\n  },\n  getQuestionByBankIdAndType(params){\n    return request({\n      url: '/public/getQuestionByBankIdAndType',\n      method: 'get',\n      params: params\n    })\n  }\n}\n"]}]}