{"remainingRequest":"/home/ckg/A毕设/exam-vue/node_modules/babel-loader/lib/index.js!/home/ckg/A毕设/exam-vue/src/utils/request.js","dependencies":[{"path":"/home/ckg/A毕设/exam-vue/src/utils/request.js","mtime":1649253392000},{"path":"/home/ckg/A毕设/exam-vue/babel.config.js","mtime":1648737495000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8vIGltcG9ydCBheGlvcyBmcm9tICdheGlvcycKLy8gaW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknCi8vCi8vIC8vIOWIm+W7umF4aW9z5a6e5L6LCi8vIGNvbnN0IHNlcnZpY2UgPSBheGlvcy5jcmVhdGUoewovLyAgIGJhc2VVUkw6ICdodHRwOi8vbG9jYWxob3N0Ojg4ODkvJywgLy8gYXBpIOeahCBiYXNlX3VybAovLyAgIHRpbWVvdXQ6IDUwMDAgLy8g6K+35rGC6LaF5pe25pe26Ze0Ci8vIH0pCi8vIHNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGNvbmZpZyA9PiB7Ci8vICAgY29uc3QgdG9rZW4gPSB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2F1dGhvcml6YXRpb24nKQovLyAgIGlmICh0b2tlbikgeyAgLy8g5Yik5pat5piv5ZCm5a2Y5ZyodG9rZW7vvIzlpoLmnpzlrZjlnKjnmoTor53vvIzliJnmr4/kuKpodHRwIGhlYWRlcumDveWKoOS4inRva2VuCi8vICAgICBjb25maWcuaGVhZGVycy5hdXRob3JpemF0aW9uID0gdG9rZW4KLy8gICB9Ci8vICAgcmV0dXJuIGNvbmZpZwovLyB9LCBlcnJvciA9PiB7Ci8vICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKQovLyB9KSwKLy8gcmVzcG9uc2Ug5oum5oiq5ZmoCi8vIHNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZSgKLy8gICByZXNwb25zZSA9PiB7Ci8vICAgICAvKioKLy8gICAgICAqIGNvZGXkuLrpnZ4yMDDmmK/mipvplJkg5Y+v57uT5ZCI6Ieq5bex5Lia5Yqh6L+b6KGM5L+u5pS5Ci8vICAgICAgKi8KLy8gICAgIGNvbnN0IHJlcyA9IHJlc3BvbnNlLmRhdGEKLy8gICAgIGlmIChyZXMuY29kZSAhPT0gMjAwKSB7Ci8vICAgICAgIE1lc3NhZ2UoewovLyAgICAgICAgIG1lc3NhZ2U6IHJlcy5tZXNzYWdlLAovLyAgICAgICAgIHR5cGU6ICdlcnJvcicsCi8vICAgICAgICAgZHVyYXRpb246IDUgKiAxMDAwCi8vICAgICAgIH0pCi8vICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnZXJyb3InKQovLyAgICAgfSBlbHNlIHsKLy8gICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGEKLy8gICAgIH0KLy8gICB9LAovLyAgIGVycm9yID0+IHsKLy8gICAgIGNvbnNvbGUubG9nKCdlcnInICsgZXJyb3IpIC8vIGZvciBkZWJ1ZwovLyAgICAgTWVzc2FnZSh7Ci8vICAgICAgIG1lc3NhZ2U6IGVycm9yLnJlc3BvbnNlLmRhdGEuZXJyTXNnLAovLyAgICAgICB0eXBlOiAnZXJyb3InLAovLyAgICAgICBkdXJhdGlvbjogNSAqIDEwMDAKLy8gICAgIH0pCi8vICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpCi8vICAgfQovLyApCi8vIGV4cG9ydCBkZWZhdWx0IHNlcnZpY2UKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUnOwppbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ0AvdXRpbHMvdXRpbHMnOyAvLyAxLuWIm+W7umF4aW9z5a6e5L6LCgp2YXIgc2VydmljZSA9IGF4aW9zLmNyZWF0ZSh7CiAgLy8g5YWs5YWx5o6l5Y+jLS3ov5nph4zms6jmhI/lkI7pnaLkvJrorrIsdXJsID0gYmFzZSB1cmwgKyByZXF1ZXN0IHVybAogIGJhc2VVUkw6ICdodHRwOi8vbG9jYWxob3N0Ojg4ODkvJywKICAvLyBiYXNlVVJMOiAnaHR0cHM6Ly9hcGkuZXhhbXBsZS5jb20nLAogIC8vIOi2heaXtuaXtumXtCDljZXkvY3mmK9tc++8jOi/memHjOiuvue9ruS6hjVz55qE6LaF5pe25pe26Ze0CiAgdGltZW91dDogNSAqIDEwMDAKfSk7IC8vIDIu6K+35rGC5oum5oiq5ZmocmVxdWVzdCBpbnRlcmNlcHRvcgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIC8vIOWPkeivt+axguWJjeWBmueahOS4gOS6m+WkhOeQhu+8jOaVsOaNrui9rOWMlu+8jOmFjee9ruivt+axguWktO+8jOiuvue9rnRva2VuLOiuvue9rmxvYWRpbmfnrYnvvIzmoLnmja7pnIDmsYLljrvmt7vliqAKICAvLyDms6jmhI/kvb/nlKh0b2tlbueahOaXtuWAmemcgOimgeW8leWFpWNvb2tpZeaWueazleaIluiAheeUqOacrOWcsGxvY2FsU3RvcmFnZeetieaWueazle+8jOaOqOiNkGpzLWNvb2tpZQogIGlmIChzdG9yZS5nZXR0ZXJzLnRva2VuKSB7CiAgICAvLyBjb25maWcucGFyYW1zID0geyd0b2tlbic6IHRva2VufSAgICAvLyDlpoLmnpzopoHmsYLmkLrluKblnKjlj4LmlbDkuK0KICAgIC8vIGNvbmZpZy5oZWFkZXJzLnRva2VuID0gdG9rZW47ICAgICAgIC8vIOWmguaenOimgeaxguaQuuW4puWcqOivt+axguWktOS4rQogICAgLy8gYmVhcmVy77yadzNj6KeE6IyDCiAgICBjb25maWcuaGVhZGVyc1snQXV0aG9yaXphdGlvbiddID0gJ0JlYXJlciAnICsgZ2V0VG9rZW4oKTsKICB9CgogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIC8vIGRvIHNvbWV0aGluZyB3aXRoIHJlcXVlc3QgZXJyb3IKICAvLyBjb25zb2xlLmxvZyhlcnJvcikgLy8gZm9yIGRlYnVnICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsgLy8g6K6+572uY3Jvc3Pot6jln58g5bm26K6+572u6K6/6Zeu5p2D6ZmQIOWFgeiuuOi3qOWfn+aQuuW4pmNvb2tpZeS/oeaBryzkvb/nlKhKV1Tlj6/lhbPpl60KCnNlcnZpY2UuZGVmYXVsdHMud2l0aENyZWRlbnRpYWxzID0gZmFsc2U7IC8vIHNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZSgKLy8gICAvLyDmjqXmlLbliLDlk43lupTmlbDmja7lubbmiJDlip/lkI7nmoTkuIDkupvlhbHmnInnmoTlpITnkIbvvIzlhbPpl61sb2FkaW5n562JCi8vICAgcmVzcG9uc2UgPT4gewovLyAgICAgY29uc3QgcmVzID0gcmVzcG9uc2UuZGF0YQovLyAgICAgLy8g5aaC5p6c6Ieq5a6a5LmJ5Luj56CB5LiN5pivMjAw77yM5YiZ5bCG5YW25Yik5pat5Li66ZSZ6K+v44CCCi8vICAgICBpZiAocmVzLmNvZGUgIT09IDIwMCkgewovLyAgICAgICAvLyA1MDAwODog6Z2e5rOVVG9rZW47IDUwMDEyOiDlvILlnLDnmbvlvZU7IDUwMDE0OiBUb2tlbuWkseaViDsKLy8gICAgICAgaWYgKHJlcy5jb2RlID09PSA0MDEgfHwgcmVzLmNvZGUgPT09IDUwMDEyIHx8IHJlcy5jb2RlID09PSA1MDAxNCkgewovLyAgICAgICAgIC8vIOmHjeaWsOeZu+W9lQovLyAgICAgICAgIE1lc3NhZ2VCb3guY29uZmlybSgn5Lya6K+d5aSx5pWI77yM5oKo5Y+v5Lul55WZ5Zyo5b2T5YmN6aG16Z2i77yM5oiW6YeN5paw55m75b2VJywgJ+adg+mZkOS4jei2sycsIHsKLy8gICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKLy8gICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAovLyAgICAgICAgICAgdHlwZTogJ3dhcm5pbmcnLAovLyAgICAgICAgICAgY2VudGVyOiB0cnVlCi8vICAgICAgICAgfSkudGhlbigoKSA9PiB7Ci8vICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcjL2xvZ2luJwovLyAgICAgICAgIH0pCi8vICAgICAgIH0gZWxzZSB7IC8vIOWFtuS7luW8guW4uOebtOaOpeaPkOekugovLyAgICAgICAgIE1lc3NhZ2UoewovLyAgICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLAovLyAgICAgICAgICAgbWVzc2FnZTogJ+KaoCcgKyByZXMubWVzc2FnZSB8fCAnRXJyb3InLAovLyAgICAgICAgICAgdHlwZTogJ2Vycm9yJywKLy8gICAgICAgICAgIGR1cmF0aW9uOiAzICogMTAwMAovLyAgICAgICAgIH0pCi8vICAgICAgIH0KLy8gICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihyZXMubWVzc2FnZSB8fCAnRXJyb3InKSkKLy8gICAgIH0gZWxzZSB7Ci8vICAgICAgIHJldHVybiByZXMKLy8gICAgIH0KLy8gICB9LAovLyAgIGVycm9yID0+IHsKLy8gICAgIC8qKiAqKiog5o6l5pS25Yiw5byC5bi45ZON5bqU55qE5aSE55CG5byA5aeLICoqKioqLwovLyAgICAgLy8gY29uc29sZS5sb2coJ2VycicgKyBlcnJvcikgLy8gZm9yIGRlYnVnCi8vICAgICBNZXNzYWdlKHsKLy8gICAgICAgc2hvd0Nsb3NlOiB0cnVlLAovLyAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLAovLyAgICAgICB0eXBlOiAnZXJyb3InLAovLyAgICAgICBkdXJhdGlvbjogNSAqIDEwMDAKLy8gICAgIH0pCi8vICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpCi8vICAgfQovLyApCgpleHBvcnQgZGVmYXVsdCBzZXJ2aWNlOw=="},{"version":3,"sources":["/home/ckg/A毕设/exam-vue/src/utils/request.js"],"names":["axios","store","getToken","service","create","baseURL","timeout","interceptors","request","use","config","getters","token","headers","error","Promise","reject","defaults","withCredentials"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,eAAzB,C,CAEA;;AACA,IAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC3B;AACAC,EAAAA,OAAO,EAAE,wBAFkB;AAI3B;AACA;AACAC,EAAAA,OAAO,EAAE,IAAI;AANc,CAAb,CAAhB,C,CASA;;AACAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACR;AACA;AACA,MAAIT,KAAK,CAACU,OAAN,CAAcC,KAAlB,EAAyB;AACvB;AACA;AACA;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAe,eAAf,IAAkC,YAAYX,QAAQ,EAAtD;AACD;;AACD,SAAOQ,MAAP;AACD,CAXH,EAYE,UAAAI,KAAK,EAAI;AACP;AACA;AAEA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAjBH,E,CAoBA;;AACAX,OAAO,CAACc,QAAR,CAAiBC,eAAjB,GAAmC,KAAnC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAef,OAAf","sourcesContent":["// import axios from 'axios'\n// import { Message } from 'element-ui'\n//\n// // 创建axios实例\n// const service = axios.create({\n//   baseURL: 'http://localhost:8889/', // api 的 base_url\n//   timeout: 5000 // 请求超时时间\n// })\n\n// service.interceptors.request.use(config => {\n//   const token = window.localStorage.getItem('authorization')\n//   if (token) {  // 判断是否存在token，如果存在的话，则每个http header都加上token\n//     config.headers.authorization = token\n//   }\n//   return config\n// }, error => {\n//   return Promise.reject(error)\n// }),\n\n// response 拦截器\n// service.interceptors.response.use(\n//   response => {\n//     /**\n//      * code为非200是抛错 可结合自己业务进行修改\n//      */\n//     const res = response.data\n//     if (res.code !== 200) {\n//       Message({\n//         message: res.message,\n//         type: 'error',\n//         duration: 5 * 1000\n//       })\n//       return Promise.reject('error')\n//     } else {\n//       return response.data\n//     }\n//   },\n//   error => {\n//     console.log('err' + error) // for debug\n//     Message({\n//       message: error.response.data.errMsg,\n//       type: 'error',\n//       duration: 5 * 1000\n//     })\n//     return Promise.reject(error)\n//   }\n// )\n\n// export default service\nimport axios from 'axios'\nimport { Message, MessageBox } from 'element-ui'\nimport store from '@/store'\nimport { getToken } from '@/utils/utils'\n\n// 1.创建axios实例\nconst service = axios.create({\n  // 公共接口--这里注意后面会讲,url = base url + request url\n  baseURL: 'http://localhost:8889/',\n\n  // baseURL: 'https://api.example.com',\n  // 超时时间 单位是ms，这里设置了5s的超时时间\n  timeout: 5 * 1000\n})\n\n// 2.请求拦截器request interceptor\nservice.interceptors.request.use(\n  config => {\n    // 发请求前做的一些处理，数据转化，配置请求头，设置token,设置loading等，根据需求去添加\n    // 注意使用token的时候需要引入cookie方法或者用本地localStorage等方法，推荐js-cookie\n    if (store.getters.token) {\n      // config.params = {'token': token}    // 如果要求携带在参数中\n      // config.headers.token = token;       // 如果要求携带在请求头中\n      // bearer：w3c规范\n      config.headers['Authorization'] = 'Bearer ' + getToken()\n    }\n    return config\n  },\n  error => {\n    // do something with request error\n    // console.log(error) // for debug        .then((response) => {\n\n    return Promise.reject(error)\n  }\n)\n\n// 设置cross跨域 并设置访问权限 允许跨域携带cookie信息,使用JWT可关闭\nservice.defaults.withCredentials = false\n\n// service.interceptors.response.use(\n//   // 接收到响应数据并成功后的一些共有的处理，关闭loading等\n//   response => {\n//     const res = response.data\n//     // 如果自定义代码不是200，则将其判断为错误。\n//     if (res.code !== 200) {\n//       // 50008: 非法Token; 50012: 异地登录; 50014: Token失效;\n//       if (res.code === 401 || res.code === 50012 || res.code === 50014) {\n//         // 重新登录\n//         MessageBox.confirm('会话失效，您可以留在当前页面，或重新登录', '权限不足', {\n//           confirmButtonText: '确定',\n//           cancelButtonText: '取消',\n//           type: 'warning',\n//           center: true\n//         }).then(() => {\n//           window.location.href = '#/login'\n//         })\n//       } else { // 其他异常直接提示\n//         Message({\n//           showClose: true,\n//           message: '⚠' + res.message || 'Error',\n//           type: 'error',\n//           duration: 3 * 1000\n//         })\n//       }\n//       return Promise.reject(new Error(res.message || 'Error'))\n//     } else {\n//       return res\n//     }\n//   },\n//   error => {\n//     /** *** 接收到异常响应的处理开始 *****/\n//     // console.log('err' + error) // for debug\n//     Message({\n//       showClose: true,\n//       message: error.message,\n//       type: 'error',\n//       duration: 5 * 1000\n//     })\n//     return Promise.reject(error)\n//   }\n// )\nexport default service\n"]}]}