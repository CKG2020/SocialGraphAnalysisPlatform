{"remainingRequest":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/babel-loader/lib/index.js!/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/src/views/teacher/QuestionManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/src/views/teacher/QuestionManage.vue","mtime":1648737495000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/babel.config.js","mtime":1648737495000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","data","queryInfo","questionType","id","allBank","questionInfo","loading","selectionTable","optionInfo","operation","total","addTableVisible","removeTableVisible","addQuTableVisible","addForm","bankId","removeForm","addFormRules","required","message","trigger","removeFormRules","addQuForm","questionLevel","questionContent","images","analysis","createPerson","answer","addQuFormRules","updateQuFormRules","backShowImgVisible","backShowImgUrl","updateQuForm","questionId","updateQuTableVisible","created","methods","getQuestionBankInfo","questionBank","typeChange","val","bankChange","contentChange","getQuestionInfo","question","handleTableSectionChange","operationChange","questionIds","title","type","duration","handleSizeChange","handleCurrentChange","resetAddForm","resetRemoveForm","resetAddQuForm","addBank","utils","then","removeBank","uploadPreview","file","handleRemove","fileList","handleUpdateRemove","beforeAvatarUpload","uploadImgSuccess","response","updateUploadImgSuccess","addAnswer","isTrue","addUpdateAnswer","delAnswer","delUpdateAnswer","uploadAnswerImgSuccess","uploadUpdateAnswerImgSuccess","handleAnswerRemove","handleUpdateAnswerRemove","checkAnswer","checked","item","checkUpdateAnswer","addQuestion","updateQu","resp","updateQuestion","computed","headers","authorization"],"sourceRoot":"src/views/teacher","sources":["QuestionManage.vue"],"sourcesContent":["<template>\n  <el-container>\n\n    <el-header height=\"220\">\n      <el-row>\n        <el-select @change=\"typeChange\" clearable v-model=\"queryInfo.questionType\" placeholder=\"请选择题目类型\">\n          <el-option\n            v-for=\"item in questionType\"\n            :key=\"item.id\"\n            :label=\"item.name\"\n            :value=\"item.id\">\n          </el-option>\n        </el-select>\n\n        <el-select @change=\"bankChange\" clearable v-model=\"queryInfo.questionBank\" placeholder=\"请选择题库\"\n                   style=\"margin-left: 5px\">\n          <el-option\n            v-for=\"item in allBank\"\n            :key=\"item.id\"\n            :label=\"item.bankName\"\n            :value=\"item.bankName\">\n          </el-option>\n        </el-select>\n\n        <el-input v-model=\"queryInfo.questionContent\" @blur=\"contentChange\" placeholder=\"题目内容\"\n                  style=\"margin-left: 5px;width: 220px\"\n                  prefix-icon=\"el-icon-search\"></el-input>\n      </el-row>\n\n      <el-row style=\"margin-top: 10px\">\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"addQuTableVisible = true\">添加</el-button>\n      </el-row>\n    </el-header>\n\n    <el-main>\n      <!--操作的下拉框-->\n      <el-select @change=\"operationChange\" clearable v-if=\"selectionTable.length !== 0\" v-model=\"operation\"\n                 :placeholder=\"'已选择' + selectionTable.length + '项'\" style=\"margin-bottom: 25px;\">\n\n        <el-option v-for=\"(item,index) in optionInfo\" :key=\"index\" :value=\"item.desc\">\n          <span style=\"float: left\">{{ item.label }}</span>\n          <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.desc }}</span>\n        </el-option>\n\n      </el-select>\n\n      <el-table\n        ref=\"questionTable\"\n        highlight-current-row\n        v-loading=\"loading\"\n        :border=\"true\"\n        :data=\"questionInfo\"\n        tooltip-effect=\"dark\"\n        style=\"width: 100%;\" @selection-change=\"handleTableSectionChange\">\n\n        <el-table-column align=\"center\"\n                         type=\"selection\"\n                         width=\"55\">\n        </el-table-column>\n\n        <el-table-column align=\"center\"\n                         label=\"题目类型\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.quType === 1\">单选题</span>\n            <span v-else-if=\"scope.row.quType === 2\">多选题</span>\n            <span v-else-if=\"scope.row.quType === 3\">判断题</span>\n            <span v-else-if=\"scope.row.quType === 4\">简答题</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column align=\"center\" label=\"题目内容\">\n          <template slot-scope=\"scope\">\n            <span class=\"quContent\" @click=\"updateQu(scope.row.id)\">{{ scope.row.quContent }}</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column align=\"center\"\n                         label=\"难度\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.level === 1\">简单</span>\n            <span v-if=\"scope.row.level === 2\">中等</span>\n            <span v-if=\"scope.row.level === 3\">困难</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column align=\"center\"\n                         prop=\"quBankName\"\n                         label=\"所属题库\">\n        </el-table-column>\n\n        <el-table-column align=\"center\"\n                         prop=\"createPerson\"\n                         label=\"创建人\">\n        </el-table-column>\n\n        <el-table-column align=\"center\"\n                         label=\"创建时间\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.createTime }}\n          </template>\n        </el-table-column>\n\n\n      </el-table>\n\n      <!--分页-->\n      <el-pagination style=\"margin-top: 25px\"\n                     @size-change=\"handleSizeChange\"\n                     @current-change=\"handleCurrentChange\"\n                     :current-page=\"queryInfo.pageNo\"\n                     :page-sizes=\"[10, 20, 30, 50]\"\n                     :page-size=\"queryInfo.pageSize\"\n                     layout=\"total, sizes, prev, pager, next, jumper\"\n                     :total=\"total\">\n      </el-pagination>\n\n    </el-main>\n\n    <el-dialog title=\"更新题目\" :visible.sync=\"updateQuTableVisible\" width=\"50%\" center>\n      <el-card>\n\n        <el-form :model=\"updateQuForm\" ref=\"updateQuForm\" :rules=\"updateQuFormRules\">\n\n          <el-form-item label=\"题目类型\" label-width=\"120px\" prop=\"questionType\">\n            <el-select v-model=\"updateQuForm.questionType\" disabled @change=\"updateQuForm.answer =  []\"\n                       placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in questionType\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"难度等级\" label-width=\"120px\" prop=\"questionLevel\">\n            <el-select v-model=\"updateQuForm.questionLevel\" placeholder=\"请选择\">\n              <el-option :value=\"parseInt(1)\" label=\"简单\"></el-option>\n              <el-option :value=\"parseInt(2)\" label=\"中等\"></el-option>\n              <el-option :value=\"parseInt(3)\" label=\"困难\"></el-option>\n            </el-select>\n          </el-form-item>\n\n\n          <el-form-item label=\"归属题库\" label-width=\"120px\" prop=\"bankId\">\n            <el-select multiple v-model=\"updateQuForm.bankId\" placeholder=\"请选择\">\n              <el-option v-for=\"item in allBank\" :key=\"item.bankId\"\n                         :label=\"item.bankName\" :value=\"item.bankId\"></el-option>\n            </el-select>\n          </el-form-item>\n\n\n          <el-form-item label=\"题目内容\" label-width=\"120px\" prop=\"questionContent\">\n            <el-input v-model=\"updateQuForm.questionContent\" style=\"margin-left: 5px\" type=\"textarea\"\n                      :rows=\"2\"></el-input>\n          </el-form-item>\n\n          <el-form-item label=\"题目图片\" label-width=\"120px\">\n            <el-upload\n              action=\"http://localhost:8888/teacher/uploadQuestionImage\"\n              :on-preview=\"uploadPreview\"\n              :on-remove=\"handleUpdateRemove\"\n              :headers=\"headers\"\n              :before-upload=\"beforeAvatarUpload\"\n              list-type=\"picture\"\n              :on-success=\"updateUploadImgSuccess\"\n              name=\"file\">\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n              <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过10M</div>\n            </el-upload>\n          </el-form-item>\n\n          <el-form-item label=\"整题解析\" label-width=\"120px\" prop=\"analysis\">\n            <el-input v-model=\"updateQuForm.analysis\" style=\"margin-left: 5px\" type=\"textarea\"\n                      :rows=\"2\"></el-input>\n          </el-form-item>\n\n          <el-button v-if=\"updateQuForm.questionType!==4\" type=\"primary\" plain size=\"small\" icon=\"el-icon-plus\"\n                     style=\"margin-left: 40px\" @click=\"addUpdateAnswer\">\n            添加\n          </el-button>\n\n          <!--存放答案表单的信息-->\n          <el-form-item prop=\"answer\" v-if=\"updateQuForm.questionType !== 4\">\n            <el-table :data=\"updateQuForm.answer\" border style=\"width: 96%;margin-left: 40px;margin-top: 10px\">\n\n              <el-table-column label=\"是否答案\" width=\"80\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  <el-checkbox v-model=\"scope.row.isTrue\" @change=\"checked=>checkUpdateAnswer(checked,scope.row.id)\">答案\n                  </el-checkbox>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"答案图片\">\n                <template slot-scope=\"scope\">\n                  <el-upload id=\"answerUpload\" :limit=\"1\"\n                             action=\"http://localhost:8888/teacher/uploadQuestionImage\"\n                             :on-preview=\"uploadPreview\"\n                             :on-remove=\"handleUpdateAnswerRemove\"\n                             :headers=\"headers\"\n                             :before-upload=\"beforeAvatarUpload\"\n                             list-type=\"picture\"\n                             :on-success=\"(res) => { return uploadUpdateAnswerImgSuccess(res,scope.row.id)}\"\n                             name=\"file\">\n                    <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n                  </el-upload>\n                </template>\n\n              </el-table-column>\n\n              <el-table-column label=\"答案内容\">\n                <template slot-scope=\"scope\">\n                  <el-input v-model=\"scope.row.answer\" style=\"margin-left: 5px\" type=\"textarea\"\n                            :rows=\"2\"></el-input>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"答案解析\">\n                <template slot-scope=\"scope\">\n                  <el-input v-model=\"scope.row.analysis\" style=\"margin-left: 5px\" type=\"textarea\"\n                            :rows=\"2\"></el-input>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"操作\" width=\"80\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"danger\" icon=\"el-icon-delete\" circle\n                             @click=\"delUpdateAnswer(scope.row.id)\"></el-button>\n                </template>\n              </el-table-column>\n\n            </el-table>\n          </el-form-item>\n\n        </el-form>\n\n      </el-card>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"updateQuTableVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"updateQuestion\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"新增题目\" :visible.sync=\"addQuTableVisible\" width=\"50%\" @close=\"resetAddQuForm\" center>\n\n      <el-card>\n\n        <el-form :model=\"addQuForm\" ref=\"addQuForm\" :rules=\"addQuFormRules\">\n\n          <el-form-item label=\"题目类型\" label-width=\"120px\" prop=\"questionType\">\n            <el-select v-model=\"addQuForm.questionType\" @change=\"addQuForm.answer =  []\" placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in questionType\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"难度等级\" label-width=\"120px\" prop=\"questionLevel\">\n            <el-select v-model=\"addQuForm.questionLevel\" placeholder=\"请选择\">\n              <el-option :value=\"parseInt(1)\" label=\"简单\"></el-option>\n              <el-option :value=\"parseInt(2)\" label=\"中等\"></el-option>\n              <el-option :value=\"parseInt(3)\" label=\"困难\"></el-option>\n            </el-select>\n          </el-form-item>\n\n\n          <el-form-item label=\"归属题库\" label-width=\"120px\" prop=\"bankId\">\n            <el-select multiple v-model=\"addQuForm.bankId\" placeholder=\"请选择\">\n              <el-option v-for=\"item in allBank\" :key=\"item.bankId\"\n                         :label=\"item.bankName\" :value=\"item.bankId\"></el-option>\n            </el-select>\n          </el-form-item>\n\n\n          <el-form-item label=\"题目内容\" label-width=\"120px\" prop=\"questionContent\">\n            <el-input v-model=\"addQuForm.questionContent\" style=\"margin-left: 5px\" type=\"textarea\"\n                      :rows=\"2\"></el-input>\n          </el-form-item>\n\n          <el-form-item label=\"题目图片\" label-width=\"120px\" prop=\"image\">\n            <el-upload\n              action=\"http://localhost:8888/teacher/uploadQuestionImage\"\n              :on-preview=\"uploadPreview\"\n              :on-remove=\"handleRemove\"\n              :headers=\"headers\"\n              :before-upload=\"beforeAvatarUpload\"\n              list-type=\"picture\"\n              :on-success=\"uploadImgSuccess\"\n              name=\"file\">\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n              <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过10M</div>\n            </el-upload>\n          </el-form-item>\n\n          <el-form-item label=\"整题解析\" label-width=\"120px\" prop=\"analysis\">\n            <el-input v-model=\"addQuForm.analysis\" style=\"margin-left: 5px\" type=\"textarea\"\n                      :rows=\"2\"></el-input>\n          </el-form-item>\n\n          <el-button v-if=\"addQuForm.questionType!==4\" type=\"primary\" plain size=\"small\" icon=\"el-icon-plus\"\n                     style=\"margin-left: 40px\" @click=\"addAnswer\">\n            添加\n          </el-button>\n\n          <!--存放答案表单的信息-->\n          <el-form-item prop=\"answer\" v-if=\"addQuForm.questionType!==4\">\n            <el-table :data=\"addQuForm.answer\" border style=\"width: 96%;margin-left: 40px;margin-top: 10px\">\n\n              <el-table-column label=\"是否答案\" width=\"80\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  <el-checkbox v-model=\"scope.row.isTrue\" @change=\"checked=>checkAnswer(checked,scope.row.id)\">答案\n                  </el-checkbox>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"答案图片\">\n                <template slot-scope=\"scope\">\n                  <el-upload :limit=\"1\"\n                             action=\"http://localhost:8888/teacher/uploadQuestionImage\"\n                             :on-preview=\"uploadPreview\"\n                             :on-remove=\"handleAnswerRemove\"\n                             :headers=\"headers\"\n                             :before-upload=\"beforeAvatarUpload\"\n                             list-type=\"picture\"\n                             :on-success=\"(res) => { return uploadAnswerImgSuccess(res,scope.row.id)}\"\n                             name=\"file\">\n                    <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n                  </el-upload>\n                </template>\n\n              </el-table-column>\n\n              <el-table-column label=\"答案内容\">\n                <template slot-scope=\"scope\">\n                  <el-input v-model=\"scope.row.answer\" style=\"margin-left: 5px\" type=\"textarea\"\n                            :rows=\"2\"></el-input>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"答案解析\">\n                <template slot-scope=\"scope\">\n                  <el-input v-model=\"scope.row.analysis\" style=\"margin-left: 5px\" type=\"textarea\"\n                            :rows=\"2\"></el-input>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"操作\" width=\"80\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"delAnswer(scope.row.id)\"></el-button>\n                </template>\n              </el-table-column>\n\n            </el-table>\n          </el-form-item>\n\n        </el-form>\n\n      </el-card>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addQuTableVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addQuestion\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"加入题库\" :visible.sync=\"addTableVisible\" width=\"30%\" @close=\"resetAddForm\"\n               center>\n\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addForm\">\n\n        <el-form-item label=\"题库名称\" label-width=\"120px\" prop=\"bankId\">\n\n          <el-select multiple v-model=\"addForm.bankId\" placeholder=\"请选择题库\">\n            <el-option v-for=\"item in allBank\" :key=\"item.bankId\"\n                       :label=\"item.bankName\" :value=\"item.bankId\"></el-option>\n          </el-select>\n\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addTableVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addBank\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"从题库中移除\" :visible.sync=\"removeTableVisible\" width=\"30%\" @close=\"resetRemoveForm\"\n               center>\n\n      <el-form :model=\"removeForm\" :rules=\"removeFormRules\" ref=\"removeForm\">\n\n        <el-form-item label=\"题库名称\" label-width=\"120px\" prop=\"bankId\">\n\n          <el-select multiple v-model=\"removeForm.bankId\" placeholder=\"请选择题库\">\n\n            <el-option v-for=\"item in allBank\" :key=\"item.bankId\"\n                       :label=\"item.bankName\" :value=\"item.bankId\"></el-option>\n          </el-select>\n\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"removeTableVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"removeBank\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <!--图片回显-->\n    <el-dialog :visible.sync=\"backShowImgVisible\" @close=\"backShowImgVisible = false\">\n      <img style=\"width: 100%\" :src=\"backShowImgUrl\" alt=\"\">\n    </el-dialog>\n\n  </el-container>\n\n</template>\n\n<script>\nimport questionBank from '@/api/questionBank'\nimport question from '@/api/question'\nimport utils from '@/utils/utils'\n\nexport default {\n  name: 'QuestionManage',\n  data () {\n    return {\n      //查询用户的参数\n      queryInfo: {\n        //题目类型下拉款所选的内容\n        'questionType': '',\n        'questionBank': '',\n        'questionContent': '',\n        'pageNo': 1,\n        'pageSize': 10\n      },\n      //题目类型\n      questionType: [\n        {\n          id: 1,\n          name: '单选题',\n        },\n        {\n          id: 2,\n          name: '多选题',\n        },\n        {\n          id: 3,\n          name: '判断题',\n        },\n        {\n          id: 4,\n          name: '简答题',\n        },\n      ],\n      //题库信息\n      allBank: [],\n      //题目信息\n      questionInfo: [],\n      //题目信息表格是否加载\n      loading: true,\n      //表格被选中的所有行\n      selectionTable: [],\n      //表格行被选中后的所有操作方式的数据\n      optionInfo: [\n        {\n          'label': '删除',\n          'desc': 'delete'\n        },\n        {\n          'label': '加入题库',\n          'desc': 'add'\n        },\n        {\n          'label': '题库中移除',\n          'desc': 'remove'\n        }\n      ],\n      //表格行被选中后的数据\n      operation: '',\n      //题目总数\n      total: 0,\n      //是否显示加入题库对话框\n      addTableVisible: false,\n      //是否显示移除题库对话框\n      removeTableVisible: false,\n      //是否显示添加题目的对话框\n      addQuTableVisible: false,\n      //添加题库的表单信息\n      addForm: {\n        bankId: ''\n      },\n      removeForm: {\n        bankId: ''\n      },\n      //添加题库表单的验证\n      addFormRules: {\n        bankId: [\n          {\n            required: true,\n            message: '请选择需要添加进的题库',\n            trigger: 'blur'\n          }\n        ]\n      },\n      //移除题库表单的验证\n      removeFormRules: {\n        bankId: [\n          {\n            required: true,\n            message: '请选择需要移除的题库',\n            trigger: 'blur'\n          }\n        ]\n      },\n      //添加题目的表单信息\n      addQuForm: {\n        questionType: 1,\n        questionLevel: 1,\n        bankId: '',\n        questionContent: '',\n        images: [],\n        analysis: '',\n        createPerson: localStorage.getItem('username'),\n        //答案对象\n        answer: []\n      },\n      //添加题目表单的验证规则\n      addQuFormRules: {\n        questionType: [\n          {\n            required: true,\n            message: '请选择问题类型',\n            trigger: 'blur'\n          }\n        ],\n        questionLevel: [\n          {\n            required: true,\n            message: '请选择问题难度',\n            trigger: 'blur'\n          }\n        ],\n        bankId: [\n          {\n            required: true,\n            message: '请选择题库',\n            trigger: 'blur'\n          }\n        ],\n        questionContent: [\n          {\n            required: true,\n            message: '请输入题库内容',\n            trigger: 'blur'\n          }\n        ],\n      },\n      //更新题目表单的验证规则\n      updateQuFormRules: {\n        questionType: [\n          {\n            required: true,\n            message: '请选择问题类型',\n            trigger: 'blur'\n          }\n        ],\n        questionLevel: [\n          {\n            required: true,\n            message: '请选择问题难度',\n            trigger: 'blur'\n          }\n        ],\n        bankId: [\n          {\n            required: true,\n            message: '请选择题库',\n            trigger: 'blur'\n          }\n        ],\n        questionContent: [\n          {\n            required: true,\n            message: '请输入题库内容',\n            trigger: 'blur'\n          }\n        ],\n      },\n      //图片回显的样式\n      backShowImgVisible: false,\n      //图片回显的图片地址\n      backShowImgUrl: '',\n      //更新题目的数据信息\n      updateQuForm: {\n        questionId: '',\n        questionType: 1,\n        questionLevel: 1,\n        bankId: '',\n        questionContent: '',\n        images: [],\n        analysis: '',\n        createPerson: localStorage.getItem('username'),\n        //答案对象\n        answer: []\n      },\n      //是否显示更新题目的对话框\n      updateQuTableVisible: false,\n    }\n  },\n  created () {\n    this.getQuestionBankInfo()\n    this.getQuestionInfo()\n  },\n  methods: {\n    //获取所有的题库信息\n    getQuestionBankInfo () {\n      questionBank.getQuestionBank().then((resp) => {\n        if (resp.code === 200) {\n          this.allBank = resp.data\n        }\n      })\n    },\n    //题目类型变化\n    typeChange (val) {\n      this.queryInfo.questionType = val\n      this.getQuestionInfo()\n    },\n    //题库变化\n    bankChange (val) {\n      this.queryInfo.questionBank = val\n      this.getQuestionInfo()\n    },\n    //题目名字筛选\n    contentChange () {\n      //发送查询题目总数的请求\n      this.getQuestionInfo()\n    },\n    //获取题目信息\n    getQuestionInfo () {\n      question.getQuestion(this.queryInfo).then((resp) => {\n        if (resp.code === 200) {\n          this.questionInfo = resp.data.data\n          this.total = resp.data.total\n          this.loading = false\n        }\n      })\n    },\n    //处理表格被选中\n    handleTableSectionChange (val) {\n      this.selectionTable = val\n    },\n    //处理操作选择框的变化\n    operationChange (val) {\n      //清空上一次的选择\n      this.operation = ''\n\n      let questionIds = []\n      if (val === 'delete') {\n        this.selectionTable.map(item => {\n          questionIds.push(item.id)\n        })\n        //发起删除请求\n        question.deleteQuestion({ 'questionIds': questionIds.join(',') }).then(resp => {\n          if (resp.code === 200) {\n            this.$notify({\n              title: 'Tips',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getQuestionInfo()\n          }\n        })\n      } else if (val === 'add') {\n        this.addTableVisible = true\n      } else if (val === 'remove') {\n        this.removeTableVisible = true\n      }\n    },\n    //分页页面大小改变\n    handleSizeChange (val) {\n      this.queryInfo.pageSize = val\n      this.getQuestionInfo()\n    },\n    //分页插件的页数\n    handleCurrentChange (val) {\n      this.queryInfo.pageNo = val\n      this.getQuestionInfo()\n    },\n    //表单信息重置\n    resetAddForm () {\n      //清空表格数据\n      this.$refs['addForm'].resetFields()\n    },\n    resetRemoveForm () {\n      //清空表格数据\n      this.$refs['removeForm'].resetFields()\n    },\n    resetAddQuForm () {\n      this.$refs['addQuForm'].resetFields()\n    },\n    //提交加入题库的表单信息\n    addBank () {\n      utils.validFormAndInvoke(this.$refs['addForm'], () => {\n        let questionIds = []\n        let banks = this.addForm.bankId\n        //将表格选中的数据中的问题id加入进去\n        this.selectionTable.map(item => {\n          questionIds.push(item.id)\n        })\n        questionBank.addBankQuestion({\n          'questionIds': questionIds.join(','),\n          'banks': banks.join(',')\n        }).then((resp) => {\n          if (resp.code === 200) {\n            this.getQuestionInfo()\n            this.$notify({\n              title: 'Tips',\n              message: resp.message,\n              type: 'success',\n              duration: 2000\n            })\n          }\n          this.addTableVisible = false\n        })\n      }, '请选择需要加入进的题库')\n    },\n    //提交移除题库的表单信息\n    removeBank () {\n      utils.validFormAndInvoke(this.$refs['removeForm'], () => {\n        let questionIds = []\n        let banks = this.removeForm.bankId\n        //将表格选中的数据中的问题id加入进去\n        this.selectionTable.map(item => {\n          questionIds.push(item.id)\n        })\n        //发起移除请求\n        questionBank.removeBankQuestion({\n          'questionIds': questionIds.join(','),\n          'banks': banks.join(',')\n        }).then((resp) => {\n          if (resp.code === 200) {\n            this.getQuestionInfo()\n            this.$notify({\n              title: 'Tips',\n              message: resp.message,\n              type: 'success',\n              duration: 2000\n            })\n          }\n          this.removeTableVisible = false\n        })\n      }, '请选择需要移除的题库')\n    },\n    //新增题目上传后 点击图片的回显\n    uploadPreview (file) {\n      this.backShowImgUrl = file.response.data\n      this.backShowImgVisible = true\n    },\n    //新增题目中的上传图片的移除\n    handleRemove (file, fileList) {\n      this.addQuForm.images.map((item, index) => {//移除图片在表单中的数据\n        if (item === file.response.data) this.addQuForm.images.splice(index, 1)\n      })\n    },\n    //更新题目中的上传图片的移除\n    handleUpdateRemove (file, fileList) {\n      this.updateQuForm.images.map((item, index) => {//移除图片在表单中的数据\n        if (item === file.response.data) this.updateQuForm.images.splice(index, 1)\n      })\n    },\n    //新增题目中的上传图片的格式大小限制\n    beforeAvatarUpload (file) {\n      const isImg = file.type === 'image/jpeg' ||\n        file.type === 'image/png' ||\n        file.type === 'image/jpg'\n      const isLt = file.size / 1024 / 1024 < 10\n\n      if (!isImg) {\n        this.$message.error('上传图片只能是 JPG/PNG 格式!')\n      }\n\n      if (!isLt) {\n        this.$message.error('上传头像图片大小不能超过 10MB!')\n      }\n      return isImg && isLt\n    },\n    //新增题目中的上传图片成功后的钩子函数\n    uploadImgSuccess (response, file, fileList) {\n      this.addQuForm.images.push(response.data)\n    },\n    //更新题目中的上传图片成功后的钩子函数\n    updateUploadImgSuccess (response, file, fileList) {\n      this.updateQuForm.images.push(response.data)\n    },\n    //新增题目中的新增答案填写框\n    addAnswer () {\n      this.addQuForm.answer.push({\n        id: this.addQuForm.answer.length,\n        isTrue: false,\n        answer: '',\n        images: [],\n        analysis: ''\n      })\n    },\n    //更新时新增题目中的新增答案填写框\n    addUpdateAnswer () {\n      this.updateQuForm.answer.push({\n        id: this.updateQuForm.answer.length,\n        isTrue: false,\n        answer: '',\n        images: [],\n        analysis: ''\n      })\n    },\n    //新增题目中的删除答案填写框\n    delAnswer (id) {//当前答案的id\n      this.addQuForm.answer.map((item, index) => {\n        if (item.id === id) this.addQuForm.answer.splice(index, 1)\n      })\n    },\n    //新增题目中的删除答案填写框\n    delUpdateAnswer (id) {//当前答案的id\n      this.updateQuForm.answer.map((item, index) => {\n        if (item.id === id) this.updateQuForm.answer.splice(index, 1)\n      })\n    },\n    //答案上传照片了\n    uploadAnswerImgSuccess (response, id) {\n      this.addQuForm.answer[id].images.push(response.data)\n    },\n    //更新的答案上传图片了\n    uploadUpdateAnswerImgSuccess (response, id) {\n      this.updateQuForm.answer[id].images.push(response.data)\n    },\n    //答案上传成功后删除\n    handleAnswerRemove (file) {\n      this.addQuForm.answer.images.map((item, index) => {//移除图片在表单中的数据\n        if (item === file.response.data) this.addQuForm.images.splice(index, 1)\n      })\n    },\n    //更新的时候答案上传成功后删除\n    handleUpdateAnswerRemove (file) {\n      this.updateQuForm.answer.images.map((item, index) => {//移除图片在表单中的数据\n        if (item === file.response.data) this.updateQuForm.images.splice(index, 1)\n      })\n    },\n    //选择正确答案的按钮变化事件\n    checkAnswer (checked, id) {\n      if (checked) {\n        if (this.addQuForm.questionType === 1 || this.addQuForm.questionType === 3) {//单选或者判断\n          //当前已经有一个正确的选择了\n          this.addQuForm.answer.map(item => {\n            item.isTrue = false\n          })\n          this.addQuForm.answer.map(item => {\n            if (item.id === id) item.isTrue = true\n          })\n        } else {//多选 可以有多个答案\n          this.addQuForm.answer.map(item => {\n            if (item.id === id) item.isTrue = true\n          })\n        }\n      } else {\n        this.addQuForm.answer.map(item => {\n          if (item.id === id) item.isTrue = false\n        })\n      }\n    },\n    //更新时选择正确答案的按钮变化事件\n    checkUpdateAnswer (checked, id) {\n      if (checked) {\n        if (this.updateQuForm.questionType === 1 || this.updateQuForm.questionType === 3) {//单选或者判断\n          //当前已经有一个正确的选择了\n          this.updateQuForm.answer.map(item => {\n            item.isTrue = false\n          })\n          this.updateQuForm.answer.map(item => {\n            if (item.id === id) item.isTrue = true\n          })\n        } else {//多选 可以有多个答案\n          this.updateQuForm.answer.map(item => {\n            if (item.id === id) item.isTrue = true\n          })\n        }\n      } else {\n        this.updateQuForm.answer.map(item => {\n          if (item.id === id) item.isTrue = false\n        })\n      }\n    },\n    //新增题目\n    addQuestion () {\n      this.$refs['addQuForm'].validate((valid) => {\n        if (valid && this.addQuForm.answer.some(item => item.isTrue) && this.addQuForm.questionType !== 4) {//单选或者多选或者判断\n          question.addQuestion(this.addQuForm).then((resp) => {\n            if (resp.code === 200) {\n              this.addQuTableVisible = false\n              this.getQuestionInfo()\n              this.$notify({\n                title: 'Tips',\n                message: '新增题目成功',\n                type: 'success',\n                duration: 2000\n              })\n            }\n          })\n        } else if (valid && !this.addQuForm.answer.some(item => item.isTrue) && this.addQuForm.questionType !== 4) {//无答案\n          this.$message.error('必须有一个答案')\n          return false\n        } else if (valid && this.addQuForm.questionType === 4) {//简答题 无标准答案直接发请求\n          //当是简答题的时候需要清除answer\n          this.addQuForm.answer = []\n          question.addQuestion(this.addQuForm).then((resp) => {\n            if (resp.code === 200) {\n              this.addQuTableVisible = false\n              this.getQuestionInfo()\n              this.$notify({\n                title: 'Tips',\n                message: '新增题目成功',\n                type: 'success',\n                duration: 2000\n              })\n            }\n          })\n        } else if (!valid) {\n          this.$message.error('请填写必要信息')\n          return false\n        }\n      })\n    },\n    //更新题目\n    updateQu (id) {\n      question.getQuestionById(id).then((resp) => {\n        if (resp.code === 200) {\n          if (resp.data.questionType !== 4) {\n            resp.data.answer.map(item => {\n              item.isTrue = item.isTrue === 'true'\n            })\n          }\n          this.updateQuForm = resp.data\n          //处理图片那个参数是个数组\n          if (this.updateQuForm.images === null) this.updateQuForm.images = []\n\n          if (resp.data.questionType !== 4) {\n            this.updateQuForm.answer.map(item => {\n              if (item.images === null) {\n                item.images = []\n              }\n            })\n          }\n\n        }\n      })\n      this.updateQuTableVisible = true\n    },\n    //提交更新表单\n    updateQuestion () {\n      this.$refs['updateQuForm'].validate((valid) => {\n        if (valid && this.updateQuForm.questionType !== 4 && this.updateQuForm.answer.some(item => item.isTrue)) {//单选或者多选或者判断\n          //保证答案的图片只有一张\n          this.updateQuForm.answer.map(item => {\n            if (item.images.length > 1) {\n              item.images.splice(0, item.images.length - 1)\n            }\n          })\n          question.updateQuestion(this.updateQuForm).then((resp) => {\n            if (resp.code === 200) {\n              this.updateQuTableVisible = false\n              this.getQuestionInfo()\n              this.$notify({\n                title: 'Tips',\n                message: '更新题目成功',\n                type: 'success',\n                duration: 2000\n              })\n            }\n          })\n        } else if (valid && this.updateQuForm.questionType !== 4 && !this.updateQuForm.answer.some(item => item.isTrue)) {//无答案\n          this.$message.error('必须有一个答案')\n          return false\n        } else if (valid && this.updateQuForm.questionType === 4) {//简答题 无标准答案直接发请求\n          //当是简答题的时候需要清除answer\n          this.addQuForm.answer = []\n          question.updateQuestion(this.updateQuForm).then((resp) => {\n            if (resp.code === 200) {\n              this.updateQuTableVisible = false\n              this.getQuestionInfo()\n              this.$notify({\n                title: 'Tips',\n                message: '更新题目成功',\n                type: 'success',\n                duration: 2000\n              })\n            }\n          })\n        } else if (!valid) {\n          this.$message.error('请填写必要信息')\n          return false\n        }\n      })\n    },\n  },\n  computed: {\n    //监测头部信息的token变化\n    headers () {\n      return {\n        authorization: localStorage.getItem('authorization') || ''\n      }\n    },\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../../assets/css/teacher/questionManage\";\n</style>\n"]}]}