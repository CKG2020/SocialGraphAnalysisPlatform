{"remainingRequest":"/home/ckg/A毕设/exam-vue/node_modules/babel-loader/lib/index.js!/home/ckg/A毕设/exam-vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ckg/A毕设/exam-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ckg/A毕设/exam-vue/src/views/student/ExamPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ckg/A毕设/exam-vue/src/views/student/ExamPage.vue","mtime":1648737495000},{"path":"/home/ckg/A毕设/exam-vue/babel.config.js","mtime":1648737495000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2NrZy9BXHU2QkQ1XHU4QkJFL2V4YW0tdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5hdG9iLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1leGNlcHRpb24uY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWV4Y2VwdGlvbi5zdGFjay5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tZXhjZXB0aW9uLnRvLXN0cmluZy10YWcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50OC1hcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmF0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuY29weS13aXRoaW4uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGwuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmRleC1vZi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lmxhc3QtaW5kZXgtb2YuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UtcmlnaHQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnN1YmFycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5kb3QtYWxsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnN0aWNreS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBleGFtIGZyb20gJ0AvYXBpL2V4YW0nOwppbXBvcnQgcXVlc3Rpb24gZnJvbSAnQC9hcGkvcXVlc3Rpb24nOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0V4YW1QYWdlJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy/lvZPliY3ogIPor5XnmoTkv6Hmga8KICAgICAgZXhhbUluZm86IHt9LAogICAgICAvL+W9k+WJjeeahOiAg+ivlemimOebrgogICAgICBxdWVzdGlvbkluZm86IFt7CiAgICAgICAgcXVlc3Rpb25UeXBlOiAnJwogICAgICB9XSwKICAgICAgLy/lvZPliY3popjnm67nmoTntKLlvJXlgLwKICAgICAgY3VySW5kZXg6IDAsCiAgICAgIC8v5o6n5Yi25aSn5Zu+55qE5a+56K+d5qGGCiAgICAgIGJpZ0ltZ0RpYWxvZzogZmFsc2UsCiAgICAgIC8v5b2T5YmN6KaB5bGV56S655qE5aSn5Zu+55qEdXJsCiAgICAgIGJpZ0ltZ1VybDogJycsCiAgICAgIC8v55So5oi36YCJ5oup55qE562U5qGICiAgICAgIHVzZXJBbnN3ZXI6IFtdLAogICAgICAvL+mhtemdouaVsOaNruWKoOi9vQogICAgICBsb2FkaW5nOiB7fSwKICAgICAgLy/pobXpnaLnu5jliLbmmK/lkKblvIDlp4sKICAgICAgc2hvdzogZmFsc2UsCiAgICAgIC8v562U5qGI55qE6YCJ6aG55ZCNYWJjZOaVsOaNrgogICAgICBvcHRpb25OYW1lOiBbJ0EnLCAnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddLAogICAgICAvL+iAg+ivleaAu+aXtumVvwogICAgICBkdXJhdGlvbjogMCwKICAgICAgLy/mkYTlg4/lpLTlr7nosaEKICAgICAgbWVkaWFTdHJlYW1UcmFjazogbnVsbCwKICAgICAgLy/or5rkv6HnhafniYfnmoR1cmwKICAgICAgdGFrZVBob3RvVXJsOiBbXSwKICAgICAgLy/mkYTlg4/lpLTmmK/lkKblvIDlkK8KICAgICAgY2FtZXJhT246IGZhbHNlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdGhpcy5nZXRFeGFtSW5mbygpOyAvL+mhtemdouaVsOaNruWKoOi9veeahOetieW+heeKtuaAgeagjwoKICAgIHRoaXMubG9hZGluZyA9IHRoaXMuJExvYWRpbmcuc2VydmljZSh7CiAgICAgIGJvZHk6IHRydWUsCiAgICAgIGxvY2s6IHRydWUsCiAgICAgIHRleHQ6ICfmlbDmja7mi7zlkb3liqDovb3kuK0sKCrilbnilr3ilbkqKScsCiAgICAgIHNwaW5uZXI6ICdlbC1pY29uLWxvYWRpbmcnCiAgICB9KTsgLy/lvIDlkK/mkYTlg4/lpLQKCiAgICB3aW5kb3cub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5nZXRDYW1lcmEoKTsKICAgICAgfSwgMTAwMCk7IC8v55Sf5oiQM+asoeaXtumXtOeCueaIquWbvgoKICAgICAgdmFyIHRpbWVzID0gW107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDI7IGkrKykgewogICAgICAgIHRpbWVzLnB1c2goTWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiBfdGhpcy5kdXJhdGlvbiAqIDEwMDApKTsKICAgICAgfQoKICAgICAgdGltZXMucHVzaCgxMDAwMCk7IC8v5LiA5qyh6ICD6K+V5pyA5aSaM+asoemaj+acuueahOivmuS/oeaIquWbvgoKICAgICAgdGltZXMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzLnRha2VQaG90bygpOwogICAgICAgIH0sIGl0ZW0pOwogICAgICB9KTsKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLy/lhbPpl63mtY/op4jlmajnqpflj6PnmoTml7blgJnnp7vpmaQgbG9jYWxzdG9yYWdl55qE5pe26ZW/CiAgICB2YXIgdXNlckFnZW50ID0gbmF2aWdhdG9yLnVzZXJBZ2VudDsgLy/lj5blvpfmtY/op4jlmajnmoR1c2VyQWdlbnTlrZfnrKbkuLIKCiAgICB2YXIgaXNPcGVyYSA9IHVzZXJBZ2VudC5pbmRleE9mKCdPcGVyYScpID4gLTE7IC8v5Yik5pat5piv5ZCmT3BlcmHmtY/op4jlmagKCiAgICB2YXIgaXNJRSA9IHVzZXJBZ2VudC5pbmRleE9mKCdjb21wYXRpYmxlJykgPiAtMSAmJiB1c2VyQWdlbnQuaW5kZXhPZignTVNJRScpID4gLTEgJiYgIWlzT3BlcmE7IC8v5Yik5pat5piv5ZCmSUXmtY/op4jlmagKCiAgICB2YXIgaXNJRTExID0gdXNlckFnZW50LmluZGV4T2YoJ3J2OjExLjAnKSA+IC0xOyAvL+WIpOaWreaYr+WQpuaYr0lFMTHmtY/op4jlmagKCiAgICB2YXIgaXNFZGdlID0gdXNlckFnZW50LmluZGV4T2YoJ0VkZ2UnKSA+IC0xICYmICFpc0lFOyAvL+WIpOaWreaYr+WQpklF55qERWRnZea1j+iniOWZqAoKICAgIGlmICghaXNJRSAmJiAhaXNFZGdlICYmICFpc0lFMTEpIHsKICAgICAgLy/lhbzlrrljaHJvbWXlkoxmaXJlZm94CiAgICAgIHZhciBfYmVmb3JlVW5sb2FkX3RpbWUgPSAwLAogICAgICAgICAgX2dhcF90aW1lID0gMDsKICAgICAgdmFyIGlzX2ZpcmVGb3ggPSBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0ZpcmVmb3gnKSA+IC0xOyAvL+aYr+WQpuaYr+eBq+eLkOa1j+iniOWZqAoKICAgICAgd2luZG93Lm9udW5sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgIF9nYXBfdGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gX2JlZm9yZVVubG9hZF90aW1lOwoKICAgICAgICBpZiAoX2dhcF90aW1lIDw9IDUpIHsKICAgICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdleGFtRHVyYXRpb24nICsgdGhpcy5leGFtSW5mby5leGFtSWQpOwogICAgICAgIH0gZWxzZSB7Ly/osLfmrYzmtY/op4jlmajliLfmlrAKICAgICAgICB9CiAgICAgIH07CgogICAgICB3aW5kb3cub25iZWZvcmV1bmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgX2JlZm9yZVVubG9hZF90aW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7CgogICAgICAgIGlmIChpc19maXJlRm94KSB7Ly/ngavni5DlhbPpl63miafooYwKICAgICAgICB9IGVsc2Ugey8v54Gr54uQ5rWP6KeI5Zmo5Yi35pawCiAgICAgICAgfQogICAgICB9OwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy/mn6Xor6LlvZPliY3ogIPor5XnmoTkv6Hmga8KICAgIGdldEV4YW1JbmZvOiBmdW5jdGlvbiBnZXRFeGFtSW5mbygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBleGFtLmdldEV4YW1JbmZvQnlJZCh0aGlzLiRyb3V0ZS5wYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgICBpZiAocmVzcC5jb2RlID09PSAyMDApIHsKICAgICAgICAgIF90aGlzMi5leGFtSW5mbyA9IHJlc3AuZGF0YTsgLy/orr7nva7lrprml7Yo56eSKQoKICAgICAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZXhhbUR1cmF0aW9uJyArIF90aGlzMi5leGFtSW5mby5leGFtSWQpID09PSAnMCcpIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdleGFtRHVyYXRpb24nICsgX3RoaXMyLmV4YW1JbmZvLmV4YW1JZCk7CiAgICAgICAgICBfdGhpczIuZHVyYXRpb24gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZXhhbUR1cmF0aW9uJyArIF90aGlzMi5leGFtSW5mby5leGFtSWQpIHx8IHJlc3AuZGF0YS5leGFtRHVyYXRpb24gKiA2MDsgLy/ogIPor5XliankvZnml7bpl7Tlrprml7blmagKCiAgICAgICAgICBfdGhpczIudGltZXIgPSB3aW5kb3cuc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAoX3RoaXMyLmR1cmF0aW9uID4gMCkgX3RoaXMyLmR1cmF0aW9uLS07CiAgICAgICAgICB9LCAxMDAwKTsKCiAgICAgICAgICBfdGhpczIuZ2V0UXVlc3Rpb25JbmZvKHJlc3AuZGF0YS5xdWVzdGlvbklkcy5zcGxpdCgnLCcpKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8v5p+l6K+i6ICD6K+V55qE6aKY55uu5L+h5oGvCiAgICBnZXRRdWVzdGlvbkluZm86IGZ1bmN0aW9uIGdldFF1ZXN0aW9uSW5mbyhpZHMpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGlkcy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgICAgICAgICAgICBxdWVzdGlvbi5nZXRRdWVzdGlvbkJ5SWQoaXRlbSkudGhlbihmdW5jdGlvbiAocmVzcCkgewogICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCA9PT0gMCkgX3RoaXMzLnF1ZXN0aW9uSW5mbyA9IFtdOwoKICAgICAgICAgICAgICAgICAgICBpZiAocmVzcC5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgICAgIF90aGlzMy5xdWVzdGlvbkluZm8ucHVzaChyZXNwLmRhdGEpOyAvL+mHjee9rumXrumimOeahOmhuuW6jyDljZXpgIkg5aSa6YCJIOWIpOaWrSDnroDnrZQKCgogICAgICAgICAgICAgICAgICAgICAgLy/ph43nva7pl67popjnmoTpobrluo8g5Y2V6YCJIOWkmumAiSDliKTmlq0g566A562UCiAgICAgICAgICAgICAgICAgICAgICBfdGhpczMucXVlc3Rpb25JbmZvID0gX3RoaXMzLnF1ZXN0aW9uSW5mby5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhLnF1ZXN0aW9uVHlwZSAtIGIucXVlc3Rpb25UeXBlOwogICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpczMubG9hZGluZy5jbG9zZSgpOwoKICAgICAgICAgICAgICAgIF90aGlzMy5zaG93ID0gdHJ1ZTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8v54K55Ye75bGV56S66auY5riF5aSn5Zu+CiAgICBzaG93QmlnSW1nOiBmdW5jdGlvbiBzaG93QmlnSW1nKHVybCkgewogICAgICB0aGlzLmJpZ0ltZ1VybCA9IHVybDsKICAgICAgdGhpcy5iaWdJbWdEaWFsb2cgPSB0cnVlOwogICAgfSwKICAgIC8v5qOA6aqM5Y2V6YCJ6aKY55qE55So5oi36YCJ5oup55qE562U5qGICiAgICBjaGVja1NpbmdsZUFuc3dlcjogZnVuY3Rpb24gY2hlY2tTaW5nbGVBbnN3ZXIoaW5kZXgpIHsKICAgICAgdGhpcy4kc2V0KHRoaXMudXNlckFuc3dlciwgdGhpcy5jdXJJbmRleCwgaW5kZXgpOwogICAgfSwKICAgIC8v5aSa6YCJ6aKY55So5oi355qE562U5qGI6YCJ5LitCiAgICBzZWxlY3RlZE11bHRpcGxlQW5zd2VyOiBmdW5jdGlvbiBzZWxlY3RlZE11bHRpcGxlQW5zd2VyKGluZGV4KSB7CiAgICAgIGlmICh0aGlzLnVzZXJBbnN3ZXJbdGhpcy5jdXJJbmRleF0gPT09IHVuZGVmaW5lZCkgewogICAgICAgIC8v5b2T5YmN5piv5aSa6YCJ55qE56ys5LiA5Liq562U5qGICiAgICAgICAgdGhpcy4kc2V0KHRoaXMudXNlckFuc3dlciwgdGhpcy5jdXJJbmRleCwgaW5kZXgpOwogICAgICB9IGVsc2UgaWYgKFN0cmluZyh0aGlzLnVzZXJBbnN3ZXJbdGhpcy5jdXJJbmRleF0pLnNwbGl0KCcsJykuaW5jbHVkZXMoaW5kZXggKyAnJykpIHsKICAgICAgICAvL+WPlua2iOmAieS4rQogICAgICAgIHZhciBuZXdBcnIgPSBbXTsKICAgICAgICBTdHJpbmcodGhpcy51c2VyQW5zd2VyW3RoaXMuY3VySW5kZXhdKS5zcGxpdCgnLCcpLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIGlmIChpdGVtICE9PSAnJyArIGluZGV4KSBuZXdBcnIucHVzaChpdGVtKTsKICAgICAgICB9KTsKCiAgICAgICAgaWYgKG5ld0Fyci5sZW5ndGggPT09IDApIHsKICAgICAgICAgIHRoaXMuJHNldCh0aGlzLnVzZXJBbnN3ZXIsIHRoaXMuY3VySW5kZXgsIHVuZGVmaW5lZCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJHNldCh0aGlzLnVzZXJBbnN3ZXIsIHRoaXMuY3VySW5kZXgsIG5ld0Fyci5qb2luKCcsJykpOyAvL+etlOahiOagvOW8j+WMlumhuuW6j0RCQUMgLT4gQUJDRAoKICAgICAgICAgIHRoaXMudXNlckFuc3dlclt0aGlzLmN1ckluZGV4XSA9IFN0cmluZyh0aGlzLnVzZXJBbnN3ZXJbdGhpcy5jdXJJbmRleF0pLnNwbGl0KCcsJykuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgICAgICByZXR1cm4gYSAtIGI7CiAgICAgICAgICB9KS5qb2luKCcsJyk7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKCEodGhpcy51c2VyQW5zd2VyW3RoaXMuY3VySW5kZXhdICsgJycpLnNwbGl0KCcsJykuaW5jbHVkZXMoaW5kZXggKyAnJykpIHsKICAgICAgICAvL+esrG7kuKrnrZTmoYgKICAgICAgICB0aGlzLiRzZXQodGhpcy51c2VyQW5zd2VyLCB0aGlzLmN1ckluZGV4LCB0aGlzLnVzZXJBbnN3ZXJbdGhpcy5jdXJJbmRleF0gKz0gJywnICsgaW5kZXgpOyAvL+etlOahiOagvOW8j+WMlumhuuW6j0RCQUMgLT4gQUJDRAoKICAgICAgICB0aGlzLnVzZXJBbnN3ZXJbdGhpcy5jdXJJbmRleF0gPSBTdHJpbmcodGhpcy51c2VyQW5zd2VyW3RoaXMuY3VySW5kZXhdKS5zcGxpdCgnLCcpLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgIHJldHVybiBhIC0gYjsKICAgICAgICB9KS5qb2luKCcsJyk7CiAgICAgIH0KICAgIH0sCiAgICAvL+iwg+eUqOaRhOWDj+WktAogICAgZ2V0Q2FtZXJhOiBmdW5jdGlvbiBnZXRDYW1lcmEoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdmFyIGNvbnN0cmFpbnRzID0gewogICAgICAgIHZpZGVvOiB7CiAgICAgICAgICB3aWR0aDogMjAwLAogICAgICAgICAgaGVpZ2h0OiAyMDAKICAgICAgICB9LAogICAgICAgIGF1ZGlvOiBmYWxzZQogICAgICB9OyAvL+iOt+W+l3ZpZGVv5pGE5YOP5aS0CgogICAgICB2YXIgdmlkZW8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmlkZW8nKTsKICAgICAgdmFyIHByb21pc2UgPSBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYShjb25zdHJhaW50cyk7CiAgICAgIHByb21pc2UudGhlbihmdW5jdGlvbiAobWVkaWFTdHJlYW0pIHsKICAgICAgICBfdGhpczQubWVkaWFTdHJlYW1UcmFjayA9IHR5cGVvZiBtZWRpYVN0cmVhbS5zdG9wID09PSAnZnVuY3Rpb24nID8gbWVkaWFTdHJlYW0gOiBtZWRpYVN0cmVhbS5nZXRUcmFja3MoKVsxXTsKICAgICAgICB2aWRlby5zcmNPYmplY3QgPSBtZWRpYVN0cmVhbTsKICAgICAgICB2aWRlby5wbGF5KCk7CiAgICAgICAgX3RoaXM0LmNhbWVyYU9uID0gdHJ1ZTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGJhY2spIHsKICAgICAgICBfdGhpczQuJG1lc3NhZ2UoewogICAgICAgICAgZHVyYXRpb246IDE1MDAsCiAgICAgICAgICBtZXNzYWdlOiAn6K+35byA5ZCv5pGE5YOP5aS05p2D6ZmQbyjilaXvuY/ilaUpbyEnLAogICAgICAgICAgdHlwZTogJ2Vycm9yJwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICAvL+aLjeeFpwogICAgdGFrZVBob3RvOiBmdW5jdGlvbiB0YWtlUGhvdG8oKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuY2FtZXJhT24pIHsKICAgICAgICAvL+aRhOWDj+WktOaYr+WQpuW8gOWQryDlvIDlkK/kuobmiY3miafooYzkuIrkvKDkv6HnlKjlm77niYcKICAgICAgICAvL+iOt+W+l0NhbnZhc+WvueixoQogICAgICAgIHZhciB2aWRlbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2aWRlbycpOwogICAgICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FudmFzJyk7CiAgICAgICAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpOwogICAgICAgIGN0eC5kcmF3SW1hZ2UodmlkZW8sIDAsIDAsIDIwMCwgMjAwKTsgLy8gdG9EYXRhVVJMICAtLS0gIOWPr+S8oOWFpSdpbWFnZS9wbmcnLS0t6buY6K6kLCAnaW1hZ2UvanBlZycKCiAgICAgICAgdmFyIGltZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYW52YXMnKS50b0RhdGFVUkwoKTsgLy/mnoTpgKBwb3N055qEZm9ybeihqOWNlQoKICAgICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsgLy9jb252ZXJ0QmFzZTY0VXJsVG9CbG9i5Ye95pWw5piv5bCGYmFzZTY057yW56CB6L2s5o2i5Li6QmxvYgoKICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCB0aGlzLmJhc2U2NFRvRmlsZShpbWcsICdleGFtVGFrZVBob3RvLnBuZycpKTsgLy/kuIrkvKDpmL/ph4zkupFPU1MKCiAgICAgICAgdGhpcy4kaHR0cC5wb3N0KHRoaXMuQVBJLnVwbG9hZFF1ZXN0aW9uSW1hZ2UsIGZvcm1EYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgICBpZiAocmVzcC5kYXRhLmNvZGUgPT09IDIwMCkgX3RoaXM1LnRha2VQaG90b1VybC5wdXNoKHJlc3AuZGF0YS5kYXRhKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIC8v5YWz6Zet5pGE5YOP5aS0CiAgICBjbG9zZUNhbWVyYTogZnVuY3Rpb24gY2xvc2VDYW1lcmEoKSB7CiAgICAgIHZhciBzdHJlYW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmlkZW8nKS5zcmNPYmplY3Q7CiAgICAgIHZhciB0cmFja3MgPSBzdHJlYW0uZ2V0VHJhY2tzKCk7CiAgICAgIHRyYWNrcy5mb3JFYWNoKGZ1bmN0aW9uICh0cmFjaykgewogICAgICAgIHRyYWNrLnN0b3AoKTsKICAgICAgfSk7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2aWRlbycpLnNyY09iamVjdCA9IG51bGw7CiAgICB9LAogICAgLy/lsIbmkYTlg4/lpLTmiKrlm77nmoRiYXNlNjTkuLLovazljJbkuLpmaWxl5o+Q5Lqk5ZCO5Y+wCiAgICBiYXNlNjRUb0ZpbGU6IGZ1bmN0aW9uIGJhc2U2NFRvRmlsZSh1cmxEYXRhLCBmaWxlTmFtZSkgewogICAgICB2YXIgYXJyID0gdXJsRGF0YS5zcGxpdCgnLCcpOwogICAgICB2YXIgbWltZSA9IGFyclswXS5tYXRjaCgvOiguKj8pOy8pWzFdOwogICAgICB2YXIgYnl0ZXMgPSBhdG9iKGFyclsxXSk7IC8vIOino+eggWJhc2U2NAoKICAgICAgdmFyIG4gPSBieXRlcy5sZW5ndGg7CiAgICAgIHZhciBpYSA9IG5ldyBVaW50OEFycmF5KG4pOwoKICAgICAgd2hpbGUgKG4tLSkgewogICAgICAgIGlhW25dID0gYnl0ZXMuY2hhckNvZGVBdChuKTsKICAgICAgfQoKICAgICAgcmV0dXJuIG5ldyBGaWxlKFtpYV0sIGZpbGVOYW1lLCB7CiAgICAgICAgdHlwZTogbWltZQogICAgICB9KTsKICAgIH0sCiAgICAvL+S4iuS8oOeUqOaIt+iAg+ivleS/oeaBr+i/m+WFpeWQjuWPsAogICAgdXBsb2FkRXhhbVRvQWRtaW46IGZ1bmN0aW9uIHVwbG9hZEV4YW1Ub0FkbWluKCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciByZWcsIGZsYWcsIGksIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmICghX3RoaXM2LmNhbWVyYU9uKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNi50YWtlUGhvdG8oKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgLy/nu5PmnZ/nmoTml7blgJnmi43nhafkuIrkvKDkuIDlvKAKICAgICAgICAgICAgICAgIC8vIOato+WImQogICAgICAgICAgICAgICAgcmVnID0gbmV3IFJlZ0V4cCgnLScsICdnJyk7IC8vIOWOu+aOieeUqOaIt+i+k+WFpeeahOmdnuazleWIhuWJsuespuWPtygtKSzkv53or4HlkI7nq6/mjqXlj5fmlbDmja7lpITnkIbkuI3miqXplJkKCiAgICAgICAgICAgICAgICBfdGhpczYudXNlckFuc3dlci5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgICAgICAgICAgICBpZiAoX3RoaXM2LnF1ZXN0aW9uSW5mb1tpbmRleF0ucXVlc3Rpb25UeXBlID09PSA0KSB7CiAgICAgICAgICAgICAgICAgICAgLy/nroDnrZTpopjnrZTmoYjlpITnkIYKICAgICAgICAgICAgICAgICAgICBfdGhpczYudXNlckFuc3dlcltpbmRleF0gPSBpdGVtLnJlcGxhY2UocmVnLCAnICcpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsgLy8g5qCH6K6w6aKY55uu5piv5ZCm5YWo6YOo5YGa5a6MCgoKICAgICAgICAgICAgICAgIGZsYWcgPSB0cnVlOwoKICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBfdGhpczYudXNlckFuc3dlci5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAvLyDmo4DmtYvnlKjmiLfmmK/lkKbpopjnm67lhajpg6jlgZrlrowKICAgICAgICAgICAgICAgICAgaWYgKF90aGlzNi51c2VyQW5zd2VyW2ldID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgICAgICBmbGFnID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gLy8g5aaC5p6c55So5oi35omA5pyJ562U5qGI55qE5pWw57uE6ZW/5bqm5bCP5LqO6aKY55uu6ZW/5bqmLOi/meS4quaXtuWAmeS5n+imgeWwhuagh+W/l+S9jee9ruS4umZhbHNlCgoKICAgICAgICAgICAgICAgIGlmIChfdGhpczYudXNlckFuc3dlci5sZW5ndGggPCBfdGhpczYucXVlc3Rpb25JbmZvLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICBmbGFnID0gZmFsc2U7CiAgICAgICAgICAgICAgICB9IC8v6aKY55uu5pyq5YGa5a6MCgoKICAgICAgICAgICAgICAgIGlmICghZmxhZykgewogICAgICAgICAgICAgICAgICAvLyBpZiAodGhpcy51c2VyQW5zd2VyLnNvbWUoKGl0ZW0pID0+IGl0ZW0gPT09IHVuZGVmaW5lZCkpIHsKICAgICAgICAgICAgICAgICAgX3RoaXM2LiRjb25maXJtKCflvZPliY3or5XpopjmmoLmnKrlgZrlrowsIOaYr+WQpue7p+e7reaPkOS6pG8o4pWl77mP4pWlKW8gPycsICdUaXBzJywgewogICAgICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICAgICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICAgICAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGEgPSB7fTsKICAgICAgICAgICAgICAgICAgICBkYXRhLnF1ZXN0aW9uSWRzID0gW107CiAgICAgICAgICAgICAgICAgICAgZGF0YS51c2VyQW5zd2VycyA9IF90aGlzNi51c2VyQW5zd2VyLmpvaW4oJy0nKTsKCiAgICAgICAgICAgICAgICAgICAgX3RoaXM2LnF1ZXN0aW9uSW5mby5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgICAgICAgICAgICAgICAgZGF0YS5xdWVzdGlvbklkcy5wdXNoKGl0ZW0ucXVlc3Rpb25JZCk7IC8v5b2T5YmN5pWw5o2u5LiN5a6M5pW0LOeUqOaIt+WbnuetlOS4jeWujOaVtCjmiJHku6zoh6rliqjooaXlhYXnqbrnrZTmoYgs6Ziy5q2i5Lia5Yqh5Ye66ZSZKQoKICAgICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCA+IF90aGlzNi51c2VyQW5zd2VyLmxlbmd0aCAtIDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS51c2VyQW5zd2VycyArPSAnLSAnOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pOyAvL+WmguaenOaJgOaciemimOebruWFqOmDqOacquetlAoKCiAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzNi51c2VyQW5zd2VyLmxlbmd0aCA9PT0gMCkgewogICAgICAgICAgICAgICAgICAgICAgX3RoaXM2LnF1ZXN0aW9uSW5mby5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEudXNlckFuc3dlcnMgKz0gJyAtJzsKICAgICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICAgIGRhdGEudXNlckFuc3dlcnMuc3BsaXQoMCwgZGF0YS51c2VyQW5zd2Vycy5sZW5ndGggLSAxKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGRhdGEuZXhhbUlkID0gcGFyc2VJbnQoX3RoaXM2LiRyb3V0ZS5wYXJhbXMuZXhhbUlkKTsKICAgICAgICAgICAgICAgICAgICBkYXRhLnF1ZXN0aW9uSWRzID0gZGF0YS5xdWVzdGlvbklkcy5qb2luKCcsJyk7CiAgICAgICAgICAgICAgICAgICAgZGF0YS5jcmVkaXRJbWdVcmwgPSBfdGhpczYudGFrZVBob3RvVXJsLmpvaW4oJywnKTsKICAgICAgICAgICAgICAgICAgICBleGFtLmFkZEV4YW1SZWNvcmQoZGF0YSkudGhlbihmdW5jdGlvbiAocmVzcCkgewogICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3AuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzNi4kbm90aWZ5KHsKICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ1RpcHMnLAogICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICfogIPor5Xnu5PmnZ8gKl7ilr1eKicsCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXM2LiRyb3V0ZXIucHVzaCgnL2V4YW1SZXN1bHQvJyArIHJlc3AuZGF0YSk7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczYuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ1RpcHMnLAogICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+e7p+e7reWKoOayuSEgKl7ilr1eKicsCiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIC8v5b2T5YmN6aKY55uu5YGa5a6M5LqGCiAgICAgICAgICAgICAgICAgIGlmIChfdGhpczYuY2FtZXJhT24pIHsKICAgICAgICAgICAgICAgICAgICAvL+e7k+adn+eahOaXtuWAmeaLjeeFp+S4iuS8oOS4gOW8oAogICAgICAgICAgICAgICAgICAgIF90aGlzNi50YWtlUGhvdG8oKTsKCiAgICAgICAgICAgICAgICAgICAgX3RoaXM2LmNsb3NlQ2FtZXJhKCk7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIGRhdGEgPSB7fTsKICAgICAgICAgICAgICAgICAgZGF0YS5xdWVzdGlvbklkcyA9IFtdOwogICAgICAgICAgICAgICAgICBkYXRhLnVzZXJBbnN3ZXJzID0gX3RoaXM2LnVzZXJBbnN3ZXIuam9pbignLScpOwogICAgICAgICAgICAgICAgICBkYXRhLmV4YW1JZCA9IHBhcnNlSW50KF90aGlzNi4kcm91dGUucGFyYW1zLmV4YW1JZCk7CiAgICAgICAgICAgICAgICAgIGRhdGEuY3JlZGl0SW1nVXJsID0gX3RoaXM2LnRha2VQaG90b1VybC5qb2luKCcsJyk7CgogICAgICAgICAgICAgICAgICBfdGhpczYucXVlc3Rpb25JbmZvLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7CiAgICAgICAgICAgICAgICAgICAgZGF0YS5xdWVzdGlvbklkcy5wdXNoKGl0ZW0ucXVlc3Rpb25JZCk7CiAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgZGF0YS5xdWVzdGlvbklkcyA9IGRhdGEucXVlc3Rpb25JZHMuam9pbignLCcpOwogICAgICAgICAgICAgICAgICBleGFtLmFkZEV4YW1SZWNvcmQoZGF0YSkudGhlbihmdW5jdGlvbiAocmVzcCkgewogICAgICAgICAgICAgICAgICAgIGlmIChyZXNwLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICAgICAgX3RoaXM2LiRub3RpZnkoewogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ1RpcHMnLAogICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAn6ICD6K+V57uT5p2fICpe4pa9XionLAogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgICBfdGhpczYuJHJvdXRlci5wdXNoKCcvZXhhbVJlc3VsdC8nICsgcmVzcC5kYXRhKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAvL+ebkeaOp+iAg+ivleeahOWJqeS9meaXtumXtAogICAgZHVyYXRpb246IGZ1bmN0aW9uIGR1cmF0aW9uKG5ld1ZhbCkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdleGFtRHVyYXRpb24nICsgdGhpcy5leGFtSW5mby5leGFtSWQsIG5ld1ZhbCk7IC8v5pGE5YOP5aS05pWw5o2uCgogICAgICB2YXIgY29uc3RyYWludHMgPSB7CiAgICAgICAgdmlkZW86IHsKICAgICAgICAgIHdpZHRoOiAyMDAsCiAgICAgICAgICBoZWlnaHQ6IDIwMAogICAgICAgIH0sCiAgICAgICAgYXVkaW86IGZhbHNlCiAgICAgIH07IC8v6YCa6L+H6LCD55So5pGE5YOP5aS05Yik5pat55So5oi35piv5ZCm5Lit6YCU5YWz6Zet5pGE5YOP5aS0CgogICAgICB2YXIgcHJvbWlzZSA9IG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKGNvbnN0cmFpbnRzKTsKICAgICAgcHJvbWlzZS5jYXRjaChmdW5jdGlvbiAoYmFjaykgewogICAgICAgIF90aGlzNy5jYW1lcmFPbiA9IGZhbHNlOwogICAgICB9KTsKCiAgICAgIGlmICghdGhpcy5jYW1lcmFPbikgewogICAgICAgIC8v5aaC5p6c5pGE5YOP5aS05pyq5byA5ZCvLOWwseWGjeasoeiwg+eUqOW8gOWQrwogICAgICAgIHRoaXMuZ2V0Q2FtZXJhKCk7CiAgICAgIH0gLy/ogIPor5Xml7bpl7Tnu5PmnZ/kuobmj5DkuqTor5XljbcKCgogICAgICBpZiAobmV3VmFsIDwgMSkgewogICAgICAgIGlmICh0aGlzLmNhbWVyYU9uKSB7CiAgICAgICAgICAvL+e7k+adn+eahOaXtuWAmeaLjeeFp+S4iuS8oOS4gOW8oAogICAgICAgICAgdGhpcy50YWtlUGhvdG8oKTsKICAgICAgICAgIHRoaXMuY2xvc2VDYW1lcmEoKTsKICAgICAgICB9CgogICAgICAgIHZhciBkYXRhID0ge307CiAgICAgICAgZGF0YS5xdWVzdGlvbklkcyA9IFtdOwogICAgICAgIGRhdGEudXNlckFuc3dlcnMgPSB0aGlzLnVzZXJBbnN3ZXIuam9pbignLScpOwogICAgICAgIHRoaXMucXVlc3Rpb25JbmZvLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7CiAgICAgICAgICBkYXRhLnF1ZXN0aW9uSWRzLnB1c2goaXRlbS5xdWVzdGlvbklkKTsgLy/lvZPliY3mlbDmja7kuI3lrozmlbQs55So5oi35Zue562U5LiN5a6M5pW0KOaIkeS7rOiHquWKqOihpeWFheepuuetlOahiCzpmLLmraLkuJrliqHlh7rplJkpCgogICAgICAgICAgaWYgKGluZGV4ID4gX3RoaXM3LnVzZXJBbnN3ZXIubGVuZ3RoKSB7CiAgICAgICAgICAgIGRhdGEudXNlckFuc3dlcnMgKz0gJyAtJzsKICAgICAgICAgIH0KICAgICAgICB9KTsgLy/lpoLmnpzmiYDmnInpopjnm67lhajpg6jmnKrnrZQKCiAgICAgICAgaWYgKGRhdGEudXNlckFuc3dlcnMgPT09ICcnKSB7CiAgICAgICAgICB0aGlzLnF1ZXN0aW9uSW5mby5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIGRhdGEudXNlckFuc3dlcnMgKz0gJyAtJzsKICAgICAgICAgIH0pOwogICAgICAgICAgZGF0YS51c2VyQW5zd2Vycy5zcGxpdCgwLCBkYXRhLnVzZXJBbnN3ZXJzLmxlbmd0aCAtIDEpOwogICAgICAgIH0KCiAgICAgICAgZGF0YS5leGFtSWQgPSBwYXJzZUludCh0aGlzLiRyb3V0ZS5wYXJhbXMuZXhhbUlkKTsKICAgICAgICBkYXRhLnF1ZXN0aW9uSWRzID0gZGF0YS5xdWVzdGlvbklkcy5qb2luKCcsJyk7CiAgICAgICAgZGF0YS5jcmVkaXRJbWdVcmwgPSB0aGlzLnRha2VQaG90b1VybC5qb2luKCcsJyk7CiAgICAgICAgZXhhbS5hZGRFeGFtUmVjb3JkKGRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgICAgIGlmIChyZXNwLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICBfdGhpczcuJG5vdGlmeSh7CiAgICAgICAgICAgICAgdGl0bGU6ICdUaXBzJywKICAgICAgICAgICAgICBtZXNzYWdlOiAn6ICD6K+V5pe26Ze057uT5p2fLOW3suS4uuaCqOiHquWKqOaPkOS6pCAqXuKWvV4qJywKICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBfdGhpczcuJHJvdXRlci5wdXNoKCcvZXhhbVJlc3VsdC8nICsgcmVzcC5kYXRhKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"mappings":"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","names":["name","data","examInfo","questionInfo","questionType","curIndex","bigImgDialog","bigImgUrl","userAnswer","loading","show","optionName","duration","mediaStreamTrack","takePhotoUrl","cameraOn","created","body","lock","text","spinner","window","setTimeout","times","item","mounted","_gap_time","localStorage","_beforeUnload_time","methods","getExamInfo","exam","getQuestionInfo","ids","question","showBigImg","url","checkSingleAnswer","index","selectedMultipleAnswer","String","join","getCamera","video","width","height","audio","promise","catch","message","type","takePhoto","ctx","formData","closeCamera","tracks","track","document","base64ToFile","urlData","fileName","ia","uploadExamToAdmin","reg","flag","confirmButtonText","cancelButtonText","then","title","watch","newVal"],"sourceRoot":"src/views/student","sources":["ExamPage.vue"],"sourcesContent":["<template>\n\n  <el-container v-if=\"show\">\n    <el-header style=\"margin-top: 60px\">\n      <el-row>\n        <el-col :span=\"18\" :offset=\"3\" style=\"border-bottom: 1px solid #f5f5f5\">\n          <span class=\"startExam\">开始考试</span>\n          <span class=\"examTitle\">距离考试结束还有：</span>\n          <span style=\"color: red;font-size: 18px;\">{{ duration | timeFormat }}</span>\n          <el-button type=\"warning\" round\n                     style=\"background-color: #ffd550;float: right;color: black;font-weight: 800\"\n                     @click=\"uploadExamToAdmin\">提交试卷\n          </el-button>\n        </el-col>\n      </el-row>\n    </el-header>\n\n    <el-main>\n      <el-row>\n        <el-col :span=\"18\" :offset=\"3\">\n          <el-col :span=\"16\">\n            <el-card style=\"min-height: 500px\">\n              <!--题目信息-->\n              <div>\n                <i class=\"num\">{{ curIndex + 1 }}</i>\n                <span v-if=\"questionInfo[curIndex].questionType === 1\">【单选题】</span>\n                <span v-else-if=\"questionInfo[curIndex].questionType === 2\">【多选题】</span>\n                <span v-else-if=\"questionInfo[curIndex].questionType === 3\">【判断题】</span>\n                <span v-else>【简答题】</span>\n                <span>{{ questionInfo[curIndex].questionContent }}:</span>\n              </div>\n              <!--题目中的配图-->\n              <img v-for=\"url in questionInfo[curIndex].images\" :src=\"url\" title=\"点击查看大图\" alt=\"题目图片\"\n                   style=\"width: 100px;height: 100px;cursor: pointer\" @click=\"showBigImg(url)\">\n\n              <!--单选 和 判断 的答案列表-->\n              <div style=\"margin-top: 25px\"\n                   v-show=\"questionInfo[curIndex].questionType === 1 || questionInfo[curIndex].questionType === 3\">\n                <div class=\"el-radio-group\">\n                  <label v-for=\"(item,index) in questionInfo[curIndex].answer\"\n                         @click=\"checkSingleAnswer(index)\"\n                         :class=\"index === userAnswer[curIndex] ? 'active' : ''\">\n                    <span>{{ optionName[index] + '、' + item.answer }}</span>\n                    <img style=\"position: absolute;left:100%;top:50%;transform: translateY(-50%);\n                  width: 40px;height: 40px;float: right;cursor: pointer;\" title=\"点击查看大图\"\n                         v-if=\"item.images !== null\"\n                         v-for=\"i2 in item.images\" :src=\"i2\" alt=\"\" @mouseover=\"showBigImg(i2)\">\n                  </label>\n                </div>\n              </div>\n\n              <!--多选的答案列表-->\n              <div style=\"margin-top: 25px\" v-show=\"questionInfo[curIndex].questionType === 2\">\n                <div class=\"el-radio-group\">\n                  <label v-for=\"(item,index) in questionInfo[curIndex].answer\"\n                         @click=\"selectedMultipleAnswer(index)\"\n                         :class=\"(userAnswer[curIndex]+'').indexOf(index+'') !== -1? 'active' : ''\">\n                    <span>{{ optionName[index] + '、' + item.answer }}</span>\n                    <img style=\"position: absolute;left:100%;top:50%;transform: translateY(-50%);\n                  width: 40px;height: 40px;float: right;cursor: pointer;\" title=\"点击查看大图\"\n                         v-if=\"item.images !== null\"\n                         v-for=\"i2 in item.images\" :src=\"i2\" alt=\"\" @mouseover=\"showBigImg(i2)\">\n                  </label>\n                </div>\n              </div>\n\n              <!--简答题的答案-->\n              <div style=\"margin-top: 25px\" v-show=\"questionInfo[curIndex].questionType === 4\">\n                <el-input\n                  type=\"textarea\"\n                  :rows=\"8\"\n                  placeholder=\"请输入答案\"\n                  v-model=\"userAnswer[curIndex]\">\n                </el-input>\n              </div>\n\n              <!--上一题 下一题-->\n              <div style=\"margin-top: 25px\">\n                <el-button type=\"primary\" icon=\"el-icon-back\" :disabled=\"curIndex<1\" @click=\"curIndex--\">上一题</el-button>\n                <el-button type=\"primary\" icon=\"el-icon-right\" :disabled=\"curIndex>=questionInfo.length-1\"\n                           @click=\"curIndex++\">下一题\n                </el-button>\n              </div>\n\n            </el-card>\n          </el-col>\n\n          <el-col :span=\"7\" :offset=\"1\">\n            <!--答题卡卡片-->\n            <el-card>\n              <div>\n                <p style=\"font-size: 18px;\">答题卡</p>\n                <div style=\"margin-top: 25px\">\n                  <span\n                    style=\"background-color: rgb(238,238,238);padding: 5px 10px 5px 10px;margin-left: 15px\">未作答</span>\n                  <span style=\"background-color: rgb(87,148,247);color: white;\n                padding: 5px 10px 5px 10px;margin-left: 15px\">已作答</span>\n                </div>\n              </div>\n\n              <!--单选的答题卡-->\n              <div style=\"margin-top: 25px\">\n                <p style=\"font-size: 18px;\">单选题</p>\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\n                           v-show=\"questionInfo[item-1].questionType === 1\"\n                           :class=\"questionInfo[item-1].questionType === 1 && userAnswer[item-1] !== undefined ?\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\n                </el-button>\n              </div>\n\n              <!--多选的答题卡-->\n              <div style=\"margin-top: 25px\">\n                <p style=\"font-size: 18px;\">多选题</p>\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\n                           v-show=\"questionInfo[item-1].questionType === 2\"\n                           :class=\"questionInfo[item-1].questionType === 2 && userAnswer[item-1] !== undefined ?\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\n                </el-button>\n              </div>\n\n              <!--判断的答题卡-->\n              <div style=\"margin-top: 25px\">\n                <p style=\"font-size: 18px;\">判断题</p>\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\n                           v-show=\"questionInfo[item-1].questionType === 3\"\n                           :class=\"questionInfo[item-1].questionType === 3 && userAnswer[item-1] !== undefined ?\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\n                </el-button>\n              </div>\n\n              <!--简答的答题卡-->\n              <div style=\"margin-top: 25px\">\n                <p style=\"font-size: 18px;\">简答题</p>\n                <el-button style=\"margin-top: 10px;margin-left: 15px\" size=\"mini\"\n                           v-show=\"questionInfo[item-1].questionType === 4\"\n                           :class=\"questionInfo[item-1].questionType === 4 && userAnswer[item-1] !== undefined ?\n                            'done' : userAnswer[item-1] === undefined ? curIndex === (item-1) ? 'orange' : 'noAnswer' : 'noAnswer'\"\n                           v-for=\"item in questionInfo.length\" :key=\"item\" @click=\"curIndex = item-1\">{{ item }}\n                </el-button>\n              </div>\n            </el-card>\n          </el-col>\n\n        </el-col>\n      </el-row>\n      <video id=\"video\" muted=\"muted\" style=\"float:right;position: fixed;top: 80%;left: 85%\" width=\"200px\"\n             height=\"200px\" autoplay=\"autoplay\"></video>\n      <canvas id=\"canvas\" hidden width=\"200px\" height=\"200px\"></canvas>\n    </el-main>\n    <!--图片回显-->\n    <el-dialog :visible.sync=\"bigImgDialog\" @close=\"bigImgDialog = false\">\n      <img style=\"width: 100%\" :src=\"bigImgUrl\">\n    </el-dialog>\n  </el-container>\n\n</template>\n\n<script>\n\nimport exam from '@/api/exam'\nimport question from '@/api/question'\n\nexport default {\n  name: 'ExamPage',\n  data () {\n    return {\n      //当前考试的信息\n      examInfo: {},\n      //当前的考试题目\n      questionInfo: [\n        {\n          questionType: ''\n        }\n      ],\n      //当前题目的索引值\n      curIndex: 0,\n      //控制大图的对话框\n      bigImgDialog: false,\n      //当前要展示的大图的url\n      bigImgUrl: '',\n      //用户选择的答案\n      userAnswer: [],\n      //页面数据加载\n      loading: {},\n      //页面绘制是否开始\n      show: false,\n      //答案的选项名abcd数据\n      optionName: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n      //考试总时长\n      duration: 0,\n      //摄像头对象\n      mediaStreamTrack: null,\n      //诚信照片的url\n      takePhotoUrl: [],\n      //摄像头是否开启\n      cameraOn: false,\n    }\n  },\n  created () {\n    this.getExamInfo()\n    //页面数据加载的等待状态栏\n    this.loading = this.$Loading.service({\n      body: true,\n      lock: true,\n      text: '数据拼命加载中,(*╹▽╹*)',\n      spinner: 'el-icon-loading',\n    })\n    //开启摄像头\n    window.onload = () => {\n      setTimeout(() => {\n        this.getCamera()\n      }, 1000)\n\n      //生成3次时间点截图\n      let times = []\n      for (let i = 0; i < 2; i++) {\n        times.push(Math.ceil(Math.random() * this.duration * 1000))\n      }\n      times.push(10000)\n      //一次考试最多3次随机的诚信截图\n      times.forEach(item => {\n        window.setTimeout(() => {\n          this.takePhoto()\n        }, item)\n      })\n    }\n  },\n  mounted () {\n    //关闭浏览器窗口的时候移除 localstorage的时长\n    var userAgent = navigator.userAgent //取得浏览器的userAgent字符串\n    var isOpera = userAgent.indexOf('Opera') > -1 //判断是否Opera浏览器\n    var isIE = userAgent.indexOf('compatible') > -1 && userAgent.indexOf('MSIE') > -1 && !isOpera //判断是否IE浏览器\n    var isIE11 = userAgent.indexOf('rv:11.0') > -1 //判断是否是IE11浏览器\n    var isEdge = userAgent.indexOf('Edge') > -1 && !isIE //判断是否IE的Edge浏览器\n    if (!isIE && !isEdge && !isIE11) {//兼容chrome和firefox\n      var _beforeUnload_time = 0, _gap_time = 0\n      var is_fireFox = navigator.userAgent.indexOf('Firefox') > -1//是否是火狐浏览器\n      window.onunload = function () {\n        _gap_time = new Date().getTime() - _beforeUnload_time\n        if (_gap_time <= 5) {\n          localStorage.removeItem('examDuration' + this.examInfo.examId)\n        } else {//谷歌浏览器刷新\n        }\n      }\n      window.onbeforeunload = function () {\n        _beforeUnload_time = new Date().getTime()\n        if (is_fireFox) {//火狐关闭执行\n\n        } else {//火狐浏览器刷新\n        }\n      }\n    }\n  },\n  methods: {\n    //查询当前考试的信息\n    getExamInfo () {\n      exam.getExamInfoById(this.$route.params).then((resp) => {\n        if (resp.code === 200) {\n          this.examInfo = resp.data\n          //设置定时(秒)\n          if (localStorage.getItem('examDuration' + this.examInfo.examId) === '0') localStorage.removeItem('examDuration' + this.examInfo.examId)\n          this.duration = localStorage.getItem('examDuration' + this.examInfo.examId) || resp.data.examDuration * 60\n          //考试剩余时间定时器\n          this.timer = window.setInterval(() => {\n            if (this.duration > 0) this.duration--\n          }, 1000)\n          this.getQuestionInfo(resp.data.questionIds.split(','))\n        }\n      })\n    },\n    //查询考试的题目信息\n    async getQuestionInfo (ids) {\n      await ids.forEach((item, index) => {\n        question.getQuestionById(item).then((resp) => {\n          if (index === 0) this.questionInfo = []\n          if (resp.code === 200) {\n            this.questionInfo.push(resp.data)\n            //重置问题的顺序 单选 多选 判断 简答\n            this.questionInfo = this.questionInfo.sort(function (a, b) {\n              return a.questionType - b.questionType\n            })\n          }\n        })\n      })\n      this.loading.close()\n      this.show = true\n    },\n    //点击展示高清大图\n    showBigImg (url) {\n      this.bigImgUrl = url\n      this.bigImgDialog = true\n    },\n    //检验单选题的用户选择的答案\n    checkSingleAnswer (index) {\n      this.$set(this.userAnswer, this.curIndex, index)\n    },\n    //多选题用户的答案选中\n    selectedMultipleAnswer (index) {\n      if (this.userAnswer[this.curIndex] === undefined) {//当前是多选的第一个答案\n        this.$set(this.userAnswer, this.curIndex, index)\n      } else if (String(this.userAnswer[this.curIndex]).split(',').includes(index + '')) {//取消选中\n        let newArr = []\n        String(this.userAnswer[this.curIndex]).split(',').forEach(item => {\n          if (item !== '' + index) newArr.push(item)\n        })\n        if (newArr.length === 0) {\n          this.$set(this.userAnswer, this.curIndex, undefined)\n        } else {\n          this.$set(this.userAnswer, this.curIndex, newArr.join(','))\n          //答案格式化顺序DBAC -> ABCD\n          this.userAnswer[this.curIndex] = String(this.userAnswer[this.curIndex]).split(',').sort(function (a, b) {\n            return a - b\n          }).join(',')\n        }\n      } else if (!((this.userAnswer[this.curIndex] + '').split(',').includes(index + ''))) {//第n个答案\n        this.$set(this.userAnswer, this.curIndex, this.userAnswer[this.curIndex] += ',' + index)\n        //答案格式化顺序DBAC -> ABCD\n        this.userAnswer[this.curIndex] = String(this.userAnswer[this.curIndex]).split(',').sort(function (a, b) {\n          return a - b\n        }).join(',')\n      }\n    },\n    //调用摄像头\n    getCamera () {\n      let constraints = {\n        video: {\n          width: 200,\n          height: 200\n        },\n        audio: false\n      }\n      //获得video摄像头\n      let video = document.getElementById('video')\n      let promise = navigator.mediaDevices.getUserMedia(constraints)\n      promise.then((mediaStream) => {\n        this.mediaStreamTrack = typeof mediaStream.stop === 'function' ? mediaStream : mediaStream.getTracks()[1]\n        video.srcObject = mediaStream\n        video.play()\n        this.cameraOn = true\n      }).catch((back) => {\n        this.$message({\n          duration: 1500,\n          message: '请开启摄像头权限o(╥﹏╥)o!',\n          type: 'error'\n        })\n      })\n    },\n    //拍照\n    takePhoto () {\n      if (this.cameraOn) {//摄像头是否开启 开启了才执行上传信用图片\n        //获得Canvas对象\n        let video = document.getElementById('video')\n        let canvas = document.getElementById('canvas')\n        let ctx = canvas.getContext('2d')\n        ctx.drawImage(video, 0, 0, 200, 200)\n        // toDataURL  ---  可传入'image/png'---默认, 'image/jpeg'\n        let img = document.getElementById('canvas').toDataURL()\n\n        //构造post的form表单\n        let formData = new FormData()\n        //convertBase64UrlToBlob函数是将base64编码转换为Blob\n        formData.append('file', this.base64ToFile(img, 'examTakePhoto.png'))\n        //上传阿里云OSS\n        this.$http.post(this.API.uploadQuestionImage, formData).then((resp) => {\n          if (resp.data.code === 200) this.takePhotoUrl.push(resp.data.data)\n        })\n      }\n    },\n    //关闭摄像头\n    closeCamera () {\n      let stream = document.getElementById('video').srcObject\n      let tracks = stream.getTracks()\n      tracks.forEach(function (track) {\n        track.stop()\n      })\n      document.getElementById('video').srcObject = null\n    },\n    //将摄像头截图的base64串转化为file提交后台\n    base64ToFile (urlData, fileName) {\n      let arr = urlData.split(',')\n      let mime = arr[0].match(/:(.*?);/)[1]\n      let bytes = atob(arr[1]) // 解码base64\n      let n = bytes.length\n      let ia = new Uint8Array(n)\n      while (n--) {\n        ia[n] = bytes.charCodeAt(n)\n      }\n      return new File([ia], fileName, { type: mime })\n    },\n    //上传用户考试信息进入后台\n    async uploadExamToAdmin () {\n      if (this.cameraOn) await this.takePhoto()//结束的时候拍照上传一张\n      // 正则\n      var reg = new RegExp('-', 'g')\n      // 去掉用户输入的非法分割符号(-),保证后端接受数据处理不报错\n      this.userAnswer.forEach((item, index) => {\n        if (this.questionInfo[index].questionType === 4) {//简答题答案处理\n          this.userAnswer[index] = item.replace(reg, ' ')\n        }\n      })\n\n      // 标记题目是否全部做完\n      let flag = true\n      for (let i = 0; i < this.userAnswer.length; i++) {// 检测用户是否题目全部做完\n        if (this.userAnswer[i] === undefined) {\n          flag = false\n        }\n      }\n      // 如果用户所有答案的数组长度小于题目长度,这个时候也要将标志位置为false\n      if (this.userAnswer.length < this.questionInfo.length) {\n        flag = false\n      }\n      //题目未做完\n      if (!flag) {\n        // if (this.userAnswer.some((item) => item === undefined)) {\n        this.$confirm('当前试题暂未做完, 是否继续提交o(╥﹏╥)o ?', 'Tips', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          let data = {}\n          data.questionIds = []\n          data.userAnswers = this.userAnswer.join('-')\n          this.questionInfo.forEach((item, index) => {\n            data.questionIds.push(item.questionId)\n            //当前数据不完整,用户回答不完整(我们自动补充空答案,防止业务出错)\n            if (index > (this.userAnswer.length - 1)) {\n              data.userAnswers += '- '\n            }\n          })\n          //如果所有题目全部未答\n          if (this.userAnswer.length === 0) {\n            this.questionInfo.forEach(item => {\n              data.userAnswers += ' -'\n            })\n            data.userAnswers.split(0, data.userAnswers.length - 1)\n          }\n          data.examId = parseInt(this.$route.params.examId)\n          data.questionIds = data.questionIds.join(',')\n          data.creditImgUrl = this.takePhotoUrl.join(',')\n          exam.addExamRecord(data).then((resp) => {\n            if (resp.code === 200) {\n              this.$notify({\n                title: 'Tips',\n                message: '考试结束 *^▽^*',\n                type: 'success',\n                duration: 2000\n              })\n              this.$router.push('/examResult/' + resp.data)\n            }\n          })\n        }).catch(() => {\n          this.$notify({\n            title: 'Tips',\n            message: '继续加油! *^▽^*',\n            type: 'success',\n            duration: 2000\n          })\n        })\n      } else {//当前题目做完了\n        if (this.cameraOn) {\n          //结束的时候拍照上传一张\n          this.takePhoto()\n          this.closeCamera()\n        }\n        let data = {}\n        data.questionIds = []\n        data.userAnswers = this.userAnswer.join('-')\n        data.examId = parseInt(this.$route.params.examId)\n        data.creditImgUrl = this.takePhotoUrl.join(',')\n        this.questionInfo.forEach((item, index) => {\n          data.questionIds.push(item.questionId)\n        })\n        data.questionIds = data.questionIds.join(',')\n        exam.addExamRecord(data).then((resp) => {\n          if (resp.code === 200) {\n            this.$notify({\n              title: 'Tips',\n              message: '考试结束 *^▽^*',\n              type: 'success',\n              duration: 2000\n            })\n            this.$router.push('/examResult/' + resp.data)\n          }\n        })\n      }\n    }\n  },\n  watch: {\n    //监控考试的剩余时间\n    duration (newVal) {\n      localStorage.setItem('examDuration' + this.examInfo.examId, newVal)\n      //摄像头数据\n      let constraints = {\n        video: {\n          width: 200,\n          height: 200\n        },\n        audio: false\n      }\n      //通过调用摄像头判断用户是否中途关闭摄像头\n      let promise = navigator.mediaDevices.getUserMedia(constraints)\n      promise.catch((back) => {\n        this.cameraOn = false\n      })\n      if (!this.cameraOn) {//如果摄像头未开启,就再次调用开启\n        this.getCamera()\n      }\n      //考试时间结束了提交试卷\n      if (newVal < 1) {\n        if (this.cameraOn) {\n          //结束的时候拍照上传一张\n          this.takePhoto()\n          this.closeCamera()\n        }\n        let data = {}\n        data.questionIds = []\n        data.userAnswers = this.userAnswer.join('-')\n        this.questionInfo.forEach((item, index) => {\n          data.questionIds.push(item.questionId)\n          //当前数据不完整,用户回答不完整(我们自动补充空答案,防止业务出错)\n          if (index > this.userAnswer.length) {\n            data.userAnswers += ' -'\n          }\n        })\n        //如果所有题目全部未答\n        if (data.userAnswers === '') {\n          this.questionInfo.forEach(item => {\n            data.userAnswers += ' -'\n          })\n          data.userAnswers.split(0, data.userAnswers.length - 1)\n        }\n        data.examId = parseInt(this.$route.params.examId)\n\n        data.questionIds = data.questionIds.join(',')\n        data.creditImgUrl = this.takePhotoUrl.join(',')\n        exam.addExamRecord(data).then((resp) => {\n          if (resp.code === 200) {\n            this.$notify({\n              title: 'Tips',\n              message: '考试时间结束,已为您自动提交 *^▽^*',\n              type: 'success',\n              duration: 2000\n            })\n            this.$router.push('/examResult/' + resp.data)\n          }\n        })\n      }\n    },\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../../assets/css/student/examPage\";\n</style>\n"]}]}