{"remainingRequest":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/babel-loader/lib/index.js!/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/src/views/teacher/StatisticOverview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/src/views/teacher/StatisticOverview.vue","mtime":1648737495000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/babel.config.js","mtime":1648737495000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAiBA;AAEA;AACAA,2BADA;AAEAC,MAFA,kBAEA;AACA;AACA;AACAC,mBAFA;AAGA;AACAC,kBAJA;AAKA;AACAC;AANA;AAQA,GAXA;AAYAC,SAZA,qBAYA;AACA;AACA;AACAC,gBADA;AAEAC,gBAFA;AAGAC,6BAHA;AAIAC;AAJA;AAMA;AACA;AACA,GAtBA;AAuBAC;AACAC,mBADA,6BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAC;AACA;AACA;AACA;;AACA;;AACA;;AACA;;AACA;AACA;AACA,iBATA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KAZA;AAaA;AACAC,YAdA,sBAcA;AACA;AACA,wEAFA,CAGA;;AACAC;AACAC;AACAP,uBADA;AAEAQ,8BAFA;AAGAC,qBAHA;AAIAC,kBAJA;AAKAC;AALA,SADA;AAQAC,mBARA;AASAC;AACApB;AADA,SATA;AAYAqB,iBAZA;AAaAC;AACAvB,qBADA;AAEAwB,qBAFA;AAGAvB;AAHA;AAbA;AAmBA,KArCA;AAsCA;AACAwB,kBAvCA,4BAuCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAb;AACAc;AACA;AACA;AACAxB;AACA;AACAF,gCADA;AAEA2B;AAFA;AAIA,mBALA;;AAMA;AACA,iBAXA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,KApDA;AAqDA;AACAC,WAtDA,qBAsDA;AACA;AACA;AACAd;AACAC;AACAP,wBADA;AAEAQ,8BAFA;AAGAC;AAHA,SADA;AAMAG;AACAS,yBADA;AAEAC;AAFA,SANA;AAUAC;AACAC,4BADA;AAEAC,sBAFA;AAGAhC;AAHA,SAVA;AAeAsB,iBACA;AACAvB,sBADA;AAEAwB,qBAFA;AAGAU,uBAHA;AAIAjC,4BAJA;AAKAkC,2BALA;AAMAC;AACAC;AACAC,6BADA;AAEAC;AAFA;AADA;AANA,SADA;AAfA;AA+BA,KAxFA;AAyFA;AACAC,kBA1FA,4BA0FA;AACA;AACA,wEAFA,CAGA;;AACA;AACA;AACAzB;AACAP,0BADA;AAEAS;AAFA,SAFA;AAMA;AACAI;AACApB;AADA,SAPA;AAUA;AACAqB,iBAXA;AAYA;AACAC;AACAvB,qBADA;AAEAwB,sBAFA;AAGAiB;AACAJ;AADA,WAHA;AAMApC;AANA;AAbA,QAJA,CA0BA;;AACAa;AACA,KAtHA;AAuHA4B,YAvHA,sBAuHA;AACA;AACA5B;AACA6B,0BADA;AAEAC;AACAD;AADA,SAFA;AAKAvB;AACAS,yBADA;AAEAgB;AACArB;AADA,WAFA;AAKAM;AALA,SALA;AAaAgB;AACAC;AADA,SAbA;AAgBA1B;AACAG,uBADA;AAEAwB,gCAFA;AAGAC;AACAC;AACAP;AADA;AADA,WAHA;AAQA;AACA,yBADA;AAEAQ,wBAFA;AAGArB;AAHA;AARA,SAhBA;AA8BAR;AACA2B;AACAC;AACAP;AADA;AADA,WADA;AAMA;AACA,yBADA;AAEAQ;AAFA,WANA;AAUA3B,0BAVA;AAWAvB;AAXA,SA9BA;AA2CAsB;AACAvB,sBADA;AAEAwB,qBAFA;AAGAvB;AAHA;AA3CA;AAiDA;AA1KA;AAvBA","names":["name","data","examNames","passRate","pieData","created","body","lock","text","spinner","methods","getExamPassRate","statistic","drawLine","myChart","title","subtext","x","y","textAlign","tooltip","xAxis","yAxis","series","type","getExamNumbers","console","value","drawPie","trigger","formatter","legend","orient","left","radius","roseType","itemStyle","normal","shadowBlur","shadowColor","drawBrokenLine","areaStyle","drawImg4","color","textStyle","axisPointer","grid","containLabel","boundaryGap","axisLine","lineStyle","fontSize"],"sourceRoot":"src/views/teacher","sources":["StatisticOverview.vue"],"sourcesContent":["<template>\n  <el-container>\n\n      <el-row>\n        <div id=\"img1\" style=\"width: 800px;height:400px;\"></div>\n        <div id=\"img2\" style=\"width: 800px;height:400px;\"></div>\n      </el-row>\n\n      <el-row>\n        <div id=\"img3\" style=\"width: 800px;height:400px;\"></div>\n        <div id=\"img4\" style=\"width: 800px;height:400px;\"></div>\n      </el-row>\n\n  </el-container>\n</template>\n\n<script>\nimport statistic from '@/api/statistic'\n\nexport default {\n  name: 'StatisticOverview',\n  data () {\n    return {\n      //考试名称\n      examNames: [],\n      //考试通过率\n      passRate: [],\n      //饼图的数据\n      pieData: [],\n    }\n  },\n  created () {\n    //页面数据加载的等待状态栏\n    this.loading = this.$Loading.service({\n      body: true,\n      lock: true,\n      text: '数据拼命加载中,(*╹▽╹*)',\n      spinner: 'el-icon-loading',\n    })\n    this.getExamPassRate()\n    this.getExamNumbers()\n  },\n  methods: {\n    async getExamPassRate () {\n      await statistic.getExamPassRate().then((resp) => {\n        if (resp.code === 200) {\n          this.examNames = resp.data[0].split(',')\n          this.passRate = resp.data[1].split(',')\n          this.drawLine()\n          this.drawBrokenLine()\n          this.drawImg4()\n          this.loading.close()\n        }\n      })\n    },\n    //考试通过率柱状图\n    drawLine () {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$echarts.init(document.getElementById('img1'))\n      // 绘制图表\n      myChart.setOption({\n        title: {\n          text: '考试通过率',\n          subtext: 'dashbord1',\n          x: 'center',\n          y: 'top',\n          textAlign: 'center'\n        },\n        tooltip: {},\n        xAxis: {\n          data: this.examNames\n        },\n        yAxis: {},\n        series: [{\n          name: '通过率',\n          type: 'bar',\n          data: this.passRate\n        }]\n      })\n    },\n    //获取考试次数数据\n    async getExamNumbers () {\n      await statistic.getExamNumbers().then((resp) => {\n        console.log(resp)\n        let examNames = resp.data[0].split(',')\n        let examNumbers = resp.data[1].split(',')\n        examNames.forEach((item, index) => {\n          this.pieData.push({\n            name: item,\n            value: parseInt(examNumbers[index])\n          })\n        })\n        this.drawPie()\n      })\n    },\n    //考试次数饼图\n    drawPie () {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$echarts.init(document.getElementById('img2'))\n      myChart.setOption({\n        title: {\n          text: '考试次数占比',\n          subtext: 'dashbord2',\n          x: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c}次 ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: this.pieData\n        },\n        series: [\n          {\n            name: '考试次数',\n            type: 'pie',\n            radius: '55%',\n            data: this.pieData,\n            roseType: 'angle',\n            itemStyle: {\n              normal: {\n                shadowBlur: 200,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      })\n    },\n    //通过率的折线图\n    drawBrokenLine () {\n      //初始化ehcharts实例\n      let myChart = this.$echarts.init(document.getElementById('img3'))\n      //指定图表的配置项和数据\n      var option = {\n        //标题\n        title: {\n          text: '考试通过率折线图',\n          x: 'center'\n        },\n        //x轴\n        xAxis: {\n          data: this.examNames\n        },\n        //y轴没有显式设置，根据值自动生成y轴\n        yAxis: {},\n        //数据-data是最终要显示的数据\n        series: [{\n          name: '通过率',\n          type: 'line',\n          areaStyle: {\n            normal: {}\n          },\n          data: this.passRate\n        }],\n      }\n      //使用刚刚指定的配置项和数据项显示图表\n      myChart.setOption(option)\n    },\n    drawImg4 () {\n      let myChart = this.$echarts.init(document.getElementById('img4'))\n      myChart.setOption({\n        color: ['#cd5c5c'],\n        textStyle: {\n          color: 'black'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          },\n          formatter: '{a} <br/>{b} : {c}'\n        },\n\n        grid: {\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          boundaryGap: [0, 0.01],\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            },\n          },\n          'axisLabel': {\n            'interval': 0,\n            fontSize: 18,\n            formatter: '{value}',\n          }\n        },\n        yAxis: {\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            },\n          },\n          'axisLabel': {\n            'interval': 0,\n            fontSize: 18,\n          },\n          type: 'category',\n          data: this.examNames\n        },\n        series: [{\n          name: '通过率：',\n          type: 'bar',\n          data: this.passRate,\n        }]\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n.el-container {\n  width: 100%;\n  height: 100%;\n}\n\n.el-container {\n  animation: leftMoveIn .7s ease-in;\n}\n\n@keyframes leftMoveIn {\n  0% {\n    transform: translateX(-100%);\n    opacity: 0;\n  }\n  100% {\n    transform: translateX(0%);\n    opacity: 1;\n  }\n}\n</style>\n"]}]}