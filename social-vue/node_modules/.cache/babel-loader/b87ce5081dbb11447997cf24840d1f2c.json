{"remainingRequest":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/babel-loader/lib/index.js!/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/src/views/student/ExamResult.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/src/views/student/ExamResult.vue","mtime":1648737495000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/babel.config.js","mtime":1648737495000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/a2022download/学习前端/exam_system-master/exam-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AAEA;AACAA,oBADA;AAEAC,MAFA,kBAEA;AACA;AACA;AACAC,oBAFA;AAGA;AACAC,kBAJA;AAKA;AACAC,sBANA;AAOA;AACAC,iBARA;AASA;AACAC,oJAVA;AAWA;AACAC,mBAZA;AAaA;AACAC,yBAdA;AAeA;AACAC,oBAhBA;AAiBA;AACAC;AAlBA;AAoBA,GAvBA;AAwBAC,oBAxBA;AAyBAC,SAzBA,qBAyBA;AACA;AACA;AACA;AACA,yBAJA,CAMA;;AACA;AACAC,gBADA;AAEAC,gBAFA;AAGAC,6BAHA;AAIAC;AAJA;AAMA,GAtCA;AAuCAC;AACA;AACAC,sBAFA,gCAEA;AAAA;;AACA;AACA;AACA;AACA;AACAC;AACA,SAFA,MAEA;AACA;;AACAA;AACA;AACA,OARA;AASA;AACA,KAdA;AAeA;AACAC,iBAhBA,2BAgBA;AAAA;;AACAC;AACA;AACA;;AACA;;AACA,+DAHA,CAIA;;AACA,oDALA,CAMA;;;AACAC;AACA;AACA,WAFA,EAPA,CAUA;;AACA;AACA;AACA,OAdA;AAeA,KAhCA;AAiCA;AACAC,mBAlCA,2BAkCAC,MAlCA,EAkCA;AAAA;;AACAH;AAAA;AAAA;AACA;AACA,OAFA;AAGA,KAtCA;AAuCA;AACAI,uBAxCA,+BAwCAC,UAxCA,EAwCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAC;AACA;AACA,wDADA,CAEA;;;AAAA;AACA;AACA;AACA,qBAFA;AAGA;AACA,iBARA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,KAlDA;AAmDA;AACAC,cApDA,sBAoDAC,GApDA,EAoDA;AACA;AACA;AACA,KAvDA;AAwDA;AACAC,oBAzDA,4BAyDAN,MAzDA,EAyDA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAH;AACA;AACA;AACA;AACAC;AACA;AACA;AACA,qBAHA;AAIA;AACA,iBATA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AApEA;AAvCA","names":["name","data","examRecord","examInfo","questionInfo","loading","optionName","bigImgUrl","bigImgDialog","userAnswer","questionScore","props","created","body","lock","text","spinner","methods","createTagsInParent","flag","getExamRecord","exam","resp","getExamInfoById","examId","getQuestionInfoById","questionId","question","showBigImg","url","getQuestionScore"],"sourceRoot":"src/views/student","sources":["ExamResult.vue"],"sourcesContent":["<template>\n  <el-container>\n    <el-header height=\"150\">\n      <el-card style=\"height: 150px\">\n        <span class=\"examName\">{{ examInfo.examName }}</span>\n        <span class=\"examTime\">{{ examRecord.examTime }}</span>\n\n        <el-row style=\"margin-top: 55px;\">\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"包括(单选,多选,判断题)\" placement=\"top-start\">\n             <span style=\"font-weight: 800;font-size: 17px\">\n          逻辑题得分: {{ examRecord.logicScore }}分</span>\n          </el-tooltip>\n\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"简答题与逻辑题\" placement=\"top-start\">\n          <span style=\"float: right;font-weight: 800;font-size: 17px\">\n          总分: {{ examInfo.totalScore }}分</span>\n          </el-tooltip>\n        </el-row>\n\n      </el-card>\n\n    </el-header>\n\n    <el-main>\n      <el-card>\n        <!--题目信息-->\n        <div v-for=\"(item,index) in questionInfo\" :key=\"index\" style=\"margin-top: 15px\">\n          <div>\n            <i class=\"num\">{{ index + 1 }}</i>\n            <span v-if=\"item.questionType === 1\">【单选题】</span>\n            <span v-else-if=\"item.questionType === 2\">【多选题】</span>\n            <span v-else-if=\"item.questionType === 3\">【判断题】</span>\n            <span v-else>【简答题】</span>\n            <span>{{ item.questionContent }}:</span>\n            <span style=\"color: red;font-style: italic;font-weight: 400;\">&nbsp;{{\n                questionScore.get(String(item.questionId))\n              }}分</span>\n          </div>\n          <!--题目中的配图-->\n          <img v-for=\"url in item.images\" :src=\"url\" title=\"点击查看大图\" alt=\"题目图片\"\n               style=\"width: 100px;height: 100px;cursor: pointer\" @click=\"showBigImg(url)\">\n\n          <!--单选 和 判断 的答案列表-->\n          <div style=\"margin-top: 25px\"\n               v-show=\"item.questionType === 1 || item.questionType === 3\">\n            <div class=\"el-radio-group\">\n              <label v-for=\"(i2,index2) in item.answer\"\n                     :class=\"String(index2) === userAnswer[index] && i2.isTrue === 'true' ?\n                      'activeAndTrue' : String(index2) === userAnswer[index] ? 'active' :\n                       i2.isTrue === 'true' ? 'true' : ''\">\n                <span>{{ optionName[index2] + '、' + i2.answer }}</span>\n                <img style=\"position: absolute;left:100%;top:50%;transform: translateY(-50%);\n                  width: 40px;height: 40px;float: right;cursor: pointer;\" title=\"点击查看大图\"\n                     v-if=\"i2.images !== null\"\n                     v-for=\"i3 in i2.images\" :src=\"i3\" alt=\"\" @mouseover=\"showBigImg(i3)\">\n              </label>\n            </div>\n          </div>\n\n          <!--多选的答案列表-->\n          <div style=\"margin-top: 25px\" v-show=\"item.questionType === 2\">\n            <div class=\"el-radio-group\">\n              <label v-for=\"(i2,index2) in item.answer\"\n                     :class=\"(userAnswer[index]+'').indexOf(index2+'') !== -1 && i2.isTrue === 'true'\n                     ? 'activeAndTrue' : (userAnswer[index]+'').indexOf(index2+'') !== -1 ? 'active' :\n                       i2.isTrue === 'true' ? 'true' : ''\">\n                <span>{{ optionName[index] + '、' + i2.answer }}</span>\n                <img style=\"position: absolute;left:100%;top:50%;transform: translateY(-50%);\n                  width: 40px;height: 40px;float: right;cursor: pointer;\" title=\"点击查看大图\"\n                     v-if=\"i2.images !== null\"\n                     v-for=\"i3 in i2.images\" :src=\"i3\" alt=\"\" @mouseover=\"showBigImg(i3)\">\n              </label>\n            </div>\n          </div>\n\n          <!--简答题的答案-->\n          <div style=\"margin-top: 25px\" v-show=\"item.questionType === 4\">\n            <div class=\"ques-analysis\">\n              <h3 style=\"font-weight: 400\">我的回答：</h3>\n              <p style=\"font-weight: 400;color: orange\"> {{ userAnswer[index] }} </p>\n            </div>\n          </div>\n\n        </div>\n\n\n      </el-card>\n    </el-main>\n\n    <!--图片回显-->\n    <el-dialog :visible.sync=\"bigImgDialog\" @close=\"bigImgDialog = false\">\n      <img style=\"width: 100%\" :src=\"bigImgUrl\">\n    </el-dialog>\n  </el-container>\n</template>\n\n<script>\nimport exam from '@/api/exam'\nimport question from '@/api/question'\n\nexport default {\n  name: 'ExamResult',\n  data () {\n    return {\n      //考试记录信息\n      examRecord: {},\n      //考试的信息\n      examInfo: {},\n      //当前考试的题目\n      questionInfo: [],\n      //页面加载\n      loading: {},\n      //答案的选项名abcd数据\n      optionName: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n      //图片回显的url\n      bigImgUrl: '',\n      //图片回显的对话框是否显示\n      bigImgDialog: false,\n      //用户回答的答案\n      userAnswer: [],\n      //单题的分值\n      questionScore: new Map()\n    }\n  },\n  props: ['tagInfo'],\n  created () {\n    //一创建就改变头部的面包屑\n    this.$emit('giveChildChangeBreakInfo', '考试结果', '考试结果')\n    this.createTagsInParent()\n    this.getExamRecord()\n\n    //页面数据加载的等待状态栏\n    this.loading = this.$Loading.service({\n      body: true,\n      lock: true,\n      text: '数据拼命加载中,(*╹▽╹*)',\n      spinner: 'el-icon-loading',\n    })\n  },\n  methods: {\n    //向父组件中添加头部的tags标签\n    createTagsInParent () {\n      let flag = false\n      this.tagInfo.map(item => {\n        //如果tags全部符合\n        if (item.name === '考试结果' && item.url === this.$route.path) {\n          flag = true\n        } else if (item.name === '考试结果' && item.url !== this.$route.path) {\n          this.$emit('updateTagInfo', '考试结果', this.$route.path)\n          flag = true\n        }\n      })\n      if (!flag) this.$emit('giveChildAddTag', '考试结果', this.$route.path)\n    },\n    //查询用户当时考试的信息\n    getExamRecord () {\n      exam.getExamRecordById(this.$route.params.recordId).then((resp) => {\n        if (resp.code === 200) {\n          this.examRecord = resp.data\n          this.getExamInfoById(resp.data.examId)\n          this.userAnswer = resp.data.userAnswers.split('-')\n          //获取单题的分值\n          this.getQuestionScore(resp.data.examId)\n          //获取所有题目信息\n          resp.data.questionIds.split(',').forEach(item => {\n            this.getQuestionInfoById(item)\n          })\n          //数据加载完毕\n          this.loading.close()\n        }\n      })\n    },\n    //根据考试id查询考试信息\n    getExamInfoById (examId) {\n      exam.getExamInfoById({ 'examId': examId }).then((resp) => {\n        if (resp.code === 200) this.examInfo = resp.data\n      })\n    },\n    //根据id查询题目信息\n    async getQuestionInfoById (questionId) {\n      await question.getQuestionById(questionId).then((resp) => {\n        if (resp.code === 200) {\n          this.questionInfo.push(resp.data)\n          //重置问题的顺序 单选 多选 判断 简答\n          this.questionInfo = this.questionInfo.sort(function (a, b) {\n            return a.questionType - b.questionType\n          })\n        }\n      })\n    },\n    //点击展示高清大图\n    showBigImg (url) {\n      this.bigImgUrl = url\n      this.bigImgDialog = true\n    },\n    //根据考试id查询考试中每一题的分数\n    async getQuestionScore (examId) {\n      await exam.getExamQuestionByExamId(examId).then((resp) => {\n        if (resp.code === 200) {\n          //设置单题分值给map\n          const scores = resp.data.scores.split(',')\n          resp.data.questionIds.split(',').forEach((item, index) => {\n            // this.$set(this.questionScore, item, scores[index])\n            this.questionScore.set(item, scores[index])\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../../assets/css/student/examResult\";\n</style>\n"]}]}