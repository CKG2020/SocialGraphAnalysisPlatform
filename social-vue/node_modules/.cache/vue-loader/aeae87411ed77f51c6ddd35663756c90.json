{"remainingRequest":"/home/ckg/A毕设/exam-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ckg/A毕设/exam-vue/src/components/user/Unkown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ckg/A毕设/exam-vue/src/components/user/Unkown.vue","mtime":1650681769831},{"path":"/home/ckg/A毕设/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Unkown.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA","file":"Unkown.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n  <div>\n    <div id=\"myEcharts\" ref=\"myEcharts\" style=\"width:1000px;height: 600px\"></div>\n\n  </div>\n\n</template>\n\n<script>\n    import echarts from \"echarts\";\n    import exam from \"../../api/exam\";\nconst friAccount={\n user_account:''\n}\n    export default {\n        name: \"Echart\",\n        data() {\n            return {\n                // dataArr: [\n                //     {\n                //         'name': 'per',\n                //         // 'category': 'name',\n                //         // 'draggable': true,\n                //     }, {\n                //         'name': 'loc',\n                //         // 'category': 'body',\n                //         // 'draggable': true\n                //     }, {\n                //         'name': 'name',\n                //         // 'category': 'per',\n                //         // 'draggable': true\n                //     }, {\n                //         'name': '角色',\n                //         // 'category': 'time',\n                //         // 'draggable': true\n                //     }],\n                // liArr: [\n                //     {\n                //         source: 'ckg',\n                //         target: 'brh',\n                //         relation: '朋友',\n                //\n                //     },\n                //     {\n                //         source: 'brh',\n                //         target: 'ckg',\n                //         relation: '朋友'\n                //     },\n                //     // {\n                //     //     source: 'per',\n                //     //     target: '角色'\n                //     // }, {\n                //     //     source: 'loc',\n                //     //     target: 'name'\n                //     // }, {\n                //     //     source: '角色',\n                //     //     target: 'name'\n                //     // },\n                //\n                //\n                // ],\n                dataArr:[],\n                liArr:[],\n                mydataArr:[],\n                myliArr:[],\n                myAnotherArr:[],\n                totalLength:0\n\n\n            }\n        },\n        created(){\n        },\n        mounted() {\n            exam.graphfindAll().then((resp) => {\n                if (resp.data.code === 666) {\n                    this.mydataArr = resp.data.obj\n                    //测试\n                    //定义一个对象\n                    //   var student = new Object();\n                    //   student.name = \"Lanny\";\n                    //   student.age = \"25\";\n                    //   student.location = \"China\";\n                    //   var json = JSON.stringify(student);\n                    var names = [];\n                    for(let i=0;i<this.mydataArr.length;i++) {\n                        names.push(this.mydataArr[i].user_account)\n                    }\n                    for(let i=0;i<names.length;i++){\n                        this.dataArr[i]={\n                            name:names[i],\n                        }\n                    }\n                    exam.findMyAllFriendRequest().then((resp)=>{\n                        if (resp.data.code === 666) {\n                            this.myliArr = resp.data.obj\n\n                            for(let i=0;i<this.myliArr.length;i++){\n                                if (this.myliArr[i].addStatus===0){\n                                    this.liArr[i]={\n                                        source:this.myliArr[i].account1,\n                                        target:this.myliArr[i].account2,\n                                        relation: '正在申请对方为朋友'\n                                    }\n                                }\n                                else {\n                                    this.liArr[i]={\n                                        source:this.myliArr[i].account1,\n                                        target:this.myliArr[i].account2,\n                                        relation: '朋友'\n                                    }\n                                }\n                            }\n\n                           this.totalLength=this.myliArr.length\n                            console.log(\"oooooooooooo\"+this.totalLength)\n\n\n                            this.drawChart(this.dataArr, this.liArr)\n                        }\n                    })\n                }\n                else {\n                    this.$notify({\n                        title: 'Tips',\n                        message: '获取用户数据失败',\n                        type: 'error',\n                        duration: 2000\n                    })\n                }\n            })\n\n        },\n        methods: {\n\n            drawChart(data, line) {\n                // 基于准备好的dom，初始化echarts实例\n                let myChart = echarts.init(document.getElementById(\"myEcharts\"));\n                // 指定图表的配置项和数据\n                let option = {\n                    title: {\n                        text: ''\n                    },\n                    tooltip: {},\n                    animationDurationUpdate: 1500,\n                    animationEasingUpdate: 'quinticInOut',\n                    series: [\n                        {\n                            type: 'graph',\n                            layout: 'force',   //因为节点的位置已经有了就不用在这里使用布局了\n                            focusNodeAdjacency: false,\n                            // legendHoverLink: true,\n                            roam: true,   //添加缩放和移动\n                            edgeSymbolSize: [4, 8],\n                            edgeSymbol: ['circle', 'none'], // 边两端的标记类型，可以是一个数组分别指定两端，也可以是单个统一指定。默认不显示标记，常见的可以设置为箭头\n                            cursor: 'pointer',\n                            force: {\n                                repulsion: [1000, 2000], //节点之间的斥力因子,支持设置成数组表达斥力的范围\n                                edgeLength: [600, 100],\n                                // edgeLength: [10, 20],\n                                layoutAnimation: true,\n                                friction: 0.1, //节点的移动速度。取值范围 0 到 1。\n                                // edgeLength: [70, 90], //两个节点之间的距离，这个距离也会受 repulsion影响\n                            },\n                            label: {\n                                show: true, // 图形上的文本标签， 可用于说明图形的一些数据信息， 比如值， 名称等\n                                fontSize: 12,\n                                color: '#000', //如果设置为 'inherit'，则为视觉映射得到的颜色，如系列色。\n                                width: 100,\n                                overflow: \"break\", //文字超出宽度是否截断或者换行。配置width时有效\n                            },\n                            labelLayout: {\n                                moveOverlap: 'shiftX', //在标签重叠的时候是否挪动标签位置以防止重叠。\n                                draggable: true, //标签是否可以允许用户通过拖拽二次调整位置。\n                            },\n                            emphasis: {\n                                scale: true, //是否开启高亮后节点的放大效果。\n                                focus: 'adjacency'\n                            },\n                            draggable: true,  //这里设置为false，不然拖拽鼠标和节点有偏移\n                            itemStyle: {\n                                normal: {\n                                    color: \"#4592FF\",\n                                }\n                            },\n                            categories: [\n                                {\n                                    name: 'per',\n                                    itemStyle: {\n                                        normal: {\n                                            color: \"#009800\",\n                                        }\n                                    }\n                                }, {\n                                    name: 'name',\n                                    itemStyle: {\n                                        normal: {\n                                            color: \"#4592FF\",\n                                        }\n                                    }\n                                }, {\n                                    name: '角色',\n                                    itemStyle: {\n                                        normal: {\n                                            color: \"#ff232b\",\n                                        }\n                                    }\n                                }, {\n                                    name: 'time',\n                                    itemStyle: {\n                                        normal: {\n                                            color: \"#e6dd1c\",\n                                        }\n                                    }\n                                }, {\n                                    name: 'body',\n                                    itemStyle: {\n                                        normal: {\n                                            color: \"#c489e6\",\n                                        }\n                                    }\n                                }, {\n                                    name: 'sigos',\n                                    itemStyle: {\n                                        normal: {\n                                            color: \"#a0e6a5\",\n                                        }\n                                    }\n                                }, {\n                                    name: 'check',\n                                    itemStyle: {\n                                        normal: {\n                                            color: \"#e6bfac\",\n                                        }\n                                    }\n                                }, {\n                                    name: 'disease',\n                                    itemStyle: {\n                                        normal: {\n                                            color: \"#859f89\",\n                                        }\n                                    }\n                                }, {\n                                    name: 'treatmeot',\n                                    itemStyle: {\n                                        normal: {\n                                            color: \"#686767\",\n                                        }\n                                    }\n                                }],\n                            symbolSize: 100,  //改变节点大小\n                            lineStyle: {\n                                color: \"#ccc\",\n                                width: 3,\n                                opacity: 0.9,\n                                curveness: 0.2, //关系线的曲度，支持从 0 到 1 的值，值越大曲度越大。\n                            },\n                            data: data,\n                            links: line,\n                            // nodes: [\n                            //     { name: '李四'},\n                            //     // {category: 1, name: '李四', value: 2},\n                            //     //\n                            //     // {\n                            //     //     category: 1, name: '张三', value: 4, onclick: function focus(param) {\n                            //     //         alert(param)\n                            //     //     }\n                            //     // },\n                            //\n                            //\n                            // ],\n\n                            autoCurveness: 0.01, //多条边的时候，自动计算曲率\n                            edgeLabel: {//边的设置\n                                show: true,\n                                position: \"middle\",\n                                fontSize: 12,\n                                formatter: (params) => {\n                                    return params.data.relation;\n                                },\n                            },\n                            edgeSymbol: [\"circle\", \"arrow\"], //边两边的类型\n                        }\n                    ]\n                };\n                // 使用刚指定的配置项和数据显示图表。\n                myChart.setOption(option);\n\n                // 点击node节点的事件\n                myChart.on('click', function (param) {\n                    console.log('node节点的数组---->', param.data);  // 打印出param, 可以看到里边有很多参数可以使用\n                    // let key = 'symbolSize'\n                    // let value = 80\n                    //\n                    // param.data[key] = value\n                    //获取节点点击的数组序号\n                    var arrayIndex = param.dataIndex;\n                    console.log('arrayIndex---->', arrayIndex);\n                    console.log('name---->', param.name);\n                    friAccount.user_account=param.name\n\n                    exam.findFriAllFriendRequest(friAccount).then((resp)=>{\n                        if (resp.data.code === 666) {\n                            this.myAnotherliArr = resp.data.obj\n                            for(let i=0;i<this.myAnotherliArr.length;i++){\n                                if (this.myAnotherliArr[i].addStatus===0){\n                                    this.liArr[i+1+this.totalLength]={\n                                        source:this.myAnotherliArr[i].account1,\n                                        target:this.myAnotherliArr[i].account2,\n                                        relation: '正在申请对方为朋友'\n                                    }\n                                }\n                                else {\n                                    this.liArr[i+1+this.totalLength]={\n                                        source:this.myAnotherliArr[i].account1,\n                                        target:this.myAnotherliArr[i].account2,\n                                        relation: '朋友'\n                                    }\n                                }\n                            }\n                            drawChart(this.dataArr, this.liArr)\n                        }\n                    })\n\n                    // if (param.dataType == 'node') {\n                    //     alert(\"点击了节点\" + param.name)\n                    // } else {\n                    //     alert(\"点击了边\" + param.value)\n                    // }\n                })\n\n\n\n            }\n        }\n    }\n</script>\n\n<style scoped>\n  .liStyle {\n    height: 40px;\n    line-height: 40px;\n  }\n</style>\n\n"]}]}