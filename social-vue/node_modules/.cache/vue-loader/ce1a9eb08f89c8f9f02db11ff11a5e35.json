{"remainingRequest":"/home/ckg/A毕设/exam-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ckg/A毕设/exam-vue/src/components/user/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ckg/A毕设/exam-vue/src/components/user/Chat.vue","mtime":1650336982034},{"path":"/home/ckg/A毕设/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBleGFtIGZyb20gIi4uLy4uL2FwaS9leGFtIjsKCiAgZXhwb3J0IGRlZmF1bHQgewogICAgICBuYW1lOiAiQ2hhdCIsCiAgICAgIGRhdGEoKSB7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgIG9ubGluZTogMCwKICAgICAgICAgICAgICB3ZWJzb2NrZXQ6IHVuZGVmaW5lZCwKICAgICAgICAgICAgICAgICAgbmFtZTogJycsCiAgICAgICAgICAgICAgc2hvd01lc3NhZ2U6JycsCiAgICAgICAgICAgICAgZm9ybToge21lc3NhZ2U6ICcnfSwKCiAgICAgICAgICAgICAgbWVzc2FnZUZvcm1hdDp7CiAgICAgICAgICAgICAgICAgIHVzZXJJZDonMTYyOTkwMzEzOTEyMicsCiAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOicnLAogICAgICAgICAgICAgICAgICBtc2c6JycKICAgICAgICAgICAgICB9LAoKCiAgICAgICAgICAgICBtZXNzYWdlTGlzdDpbXSwKICAgICAgICAgICAgICB3czoiIiwKCiAgICAgICAgICB9CiAgICAgIH0sCiAgICAgIHVwZGF0ZWQoKSB7CiAgICAgICAgICB0aGlzLnNjcm9sbCgpCiAgICAgIH0sCiAgICAgIG1vdW50ZWQoKSB7CgogICAgICAgICAgdGhpcy4kcmVmcy5sb2FkZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgfSwKICAgICAgY3JlYXRlZCgpIHsKICAgICAgICAgIHRoaXMuaW5pdCgpOwogICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZXVubG9hZCcsIGUgPT4gdGhpcy5jbG9zZVdlYnNvY2tldChlKSkKICAgICAgfSwKICAgICAgbWV0aG9kczogewogICAgICAgICAgX21lc3NhZ2UobWVzc2FnZSwgdHlwZSkgewogICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICBtZXNzYWdlOiBtZXNzYWdlLAogICAgICAgICAgICAgICAgICB0eXBlOiB0eXBlCiAgICAgICAgICAgICAgfSkKICAgICAgICAgIH0sCiAgICAgICAgICBfbm90aWZ5KHRpdGxlLCBtZXNzYWdlLCB0eXBlKSB7CiAgICAgICAgICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAgICAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgICAgICAgICAgICBtZXNzYWdlOiBtZXNzYWdlLAogICAgICAgICAgICAgICAgICB0eXBlOiB0eXBlCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICB9LAoKCiAgICAgICAgICBpbml0KCkgewoKCiAgICAgICAgICAgICAgdGhpcy5pbml0VXNlcigpOwoKCiAgICAgICAgICAgICAgdGhpcy5pbml0V2ViU29ja2V0KCk7CiAgICAgICAgICB9LAoKICAgICAgICAgIGluaXRVc2VyKCkgewoKICAgICAgICAgICAgICBleGFtLmdldFVzZXJBY2NvdW50KCkudGhlbigKICAgICAgICAgICAgICAgICAgcmVzcG9uc2U9PnsKICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmFtZT1yZXNwb25zZS5kYXRhLm9iagogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgKQoKICAgICAgICAgIH0sCgogICAgICAgICAgaW5pdFdlYlNvY2tldCgpIHsKICAgICAgICAgICAgICBsZXQgJHRoaXMgPSB0aGlzOwogICAgICAgICAgICAgIC8vIHRoaXMud2Vic29ja2V0ID0gbmV3IFdlYlNvY2tldChhcGkud2Vic29ja2V0KHRoaXMuZm9ybS5pZCkpCiAgICAgICAgICAgICAgdGhpcy53ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3czovL2xvY2FsaG9zdDo4ODg5L3dlYnNvY2tldCIpOwoKICAgICAgICAgICAgICAvL+mTvuaOpeWPkemAgemUmeivr+aXtuiwg+eUqAogICAgICAgICAgICAgIHRoaXMud2Vic29ja2V0Lm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICR0aGlzLl9ub3RpZnkoJ+aPkOmGkicsICdXZWJTb2NrZXTpk77mjqXplJnor68nLCAnZXJyb3InKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAvL+mTvuaOpeaIkOWKn+aXtuiwg+eUqAogICAgICAgICAgICAgIHRoaXMud2Vic29ja2V0Lm9ub3BlbiA9IGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgICAgICAgICAkdGhpcy5fbm90aWZ5KCfmj5DphpInLCAnV2ViU29ja2V06ZO+5o6l5oiQ5YqfJywgJ3N1Y2Nlc3MnKQogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgLy/mjqXmlLbliLDmtojmga/ml7blm57osIMKICAgICAgICAgICAgICAgdGhpcy53ZWJzb2NrZXQub25tZXNzYWdlID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgICAgICAgLy8gICAgIGxldCBlbnRpdHkgPSBKU09OLnBhcnNlKGV2ZW50LmRhdGEpOwogICAgICAgICAgICAgIC8vICAgICB2YXIgbXlEYXRlID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgICAvLyAgICAgY29uc29sZS5sb2coInh4eHh4eHh4eHh4IitteURhdGUudG9Mb2NhbGVTdHJpbmcoKSkKICAgICAgICAgICAgICAvLyAgICAgdGhpcy50aW1lPW15RGF0ZS50b0xvY2FsZVN0cmluZygpCiAgICAgICAgICAgICAgLy8gICAgIHRoaXMuZnJvbV9uYW1lPWVudGl0eS51c2VyTmFtZQogICAgICAgICAgICAgIC8vICAgICB0aGlzLm1lc3NhZ2U9ZW50aXR5Lm1zZwogICAgICAgICAgICAgIC8vICAgICBjb25zb2xlLmxvZygiPT09PT09PT09PT09PT09PT09IikKICAgICAgICAgICAgICAvLyAgICAgY29uc29sZS5sb2codGhpcy50aW1lKQogICAgICAgICAgICAgIC8vICAgICBjb25zb2xlLmxvZyh0aGlzLmZyb21fbmFtZSkKICAgICAgICAgICAgICAvLyAgICAgY29uc29sZS5sb2codGhpcy5tZXNzYWdlKQogICAgICAgICAgICAgICAgbGV0IGRhdGEgPSBKU09OLnBhcnNlKGV2ZW50LmRhdGEpCiAgICAgICAgICAgICAgICAgICBpZihkYXRhLnVzZXJOYW1lKXsKICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLm1lc3NhZ2VMaXN0LnB1c2goZGF0YSkKICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgIHRoaXMub25saW5lPWRhdGEKICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygieHh4eHh4eHh4eHh4eHh4eHh4enp6enp6eiIrZGF0YSkKICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy5fbm90aWZ5KCfmj5DphpInLCAn5b2T5YmN5Zyo57q/5Lq65pWwOicrZGF0YSwnaW5mbycgKQogICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgJHRoaXMuc2Nyb2xsKCkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgLy/pk77mjqXlhbPpl63ml7bosIPnlKgKICAgICAgICAgICAgICB0aGlzLndlYnNvY2tldC5vbmNsb3NlID0gZnVuY3Rpb24gKCkgewoKICAgICAgICAgICAgICAgICAgJHRoaXMuX25vdGlmeSgn5o+Q6YaSJywgJ1dlYlNvY2tldOmTvuaOpeWFs+mXrScsICdpbmZvJykKICAgICAgICAgICAgICB9CgogICAgICAgICAgfSwKCiAgICAgICAgICAvL+aOqOmAgea2iOaBrwogICAgICAgICAgc2VuZCgpIHsKICAgICAgICAgICAgICBpZiAodGhpcy5mb3JtLm1lc3NhZ2UgPT0gbnVsbCB8fCB0aGlzLmZvcm0ubWVzc2FnZS50cmltKCkgPT0gJycpIHsKICAgICAgICAgICAgICAgICAgdGhpcy5fbWVzc2FnZSgn6K+36L6T5YWl5raI5oGv5YaF5a65JywgJ3dhcm5pbmcnKQogICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICB2YXIgbXlEYXRlID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlRm9ybWF0LnVzZXJJZD1teURhdGUudG9Mb2NhbGVTdHJpbmcoKQogICAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2VGb3JtYXQudXNlck5hbWU9dGhpcy5uYW1lCiAgICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZUZvcm1hdC5tc2c9dGhpcy5mb3JtLm1lc3NhZ2UKCiAgICAgICAgICAgICAgICAgbGV0IHNlbmRNZXNzYWdlPSBKU09OLnN0cmluZ2lmeSh0aGlzLm1lc3NhZ2VGb3JtYXQpCiAgICAgICAgICAgICAgICAgIHRoaXMud2Vic29ja2V0LnNlbmQoc2VuZE1lc3NhZ2UpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHRoaXMuZm9ybS5tZXNzYWdlPScnCiAgICAgICAgICAgICAgdGhpcy5zY3JvbGwoKQogICAgICAgICAgfSwKCiAgICAgICAgICAvL+a4heepuua2iOaBrwogICAgICAgICAgY2xlYW4oKSB7CiAgICAgICAgICAgICAgdGhpcy5mb3JtLm1lc3NhZ2UgPSAnJwogICAgICAgICAgfSwKICAgICAgICAgIC8v5YiH5o2i6YCJ5oup56qX5Y+jCiAgICAgICAgICBzZWxlY3RXaW5kb3coaWQpIHsKICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRfd2luZG93X2lkID0gaWQ7CiAgICAgICAgICAgICAgaWYgKCF0aGlzLmN1cnJlbnRfd2luZG93X2lkKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuaW5pdENvbW1vbk1lc3NhZ2UoKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICB0aGlzLmluaXRTZWxmTWVzc2FnZSgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgIH0sCgogICAgICAgICAgLy/nqpflj6Pmu5rliqgKICAgICAgICAgIHNjcm9sbCgpIHsKICAgICAgICAgICAgICBsZXQgYm94ID0gdGhpcy4kcmVmcy5ib3gKICAgICAgICAgICAgICAvLyBib3guc2Nyb2xsVG9wID0gMTAwMDAwMDAKICAgICAgICAgIH0sCgogICAgICAgICAgY2xvc2VXZWJzb2NrZXQoKXsKICAgICAgICAgICAgICBpZih0aGlzLndzKXsKICAgICAgICAgICAgICAgICAgdGhpcy53cy5jbG9zZSgpOwogICAgICAgICAgICAgICAgICBsZXQgX3RoaXM9dGhpcwogICAgICAgICAgICAgICAgICB0aGlzLndzLm9uY2xvc2UgPSBmdW5jdGlvbihldnQpIHsKICAgICAgICAgICAgICAgICAgICAgICR0aGlzLl9ub3RpZnkoJ+aPkOmGkicsICdXZWJTb2NrZXTlhbPpl60nLCAnaW5mbycpCiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICB9LAogICAgICBiZWZvcmVEZXN0cm95KCkgewogICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZXVubG9hZCcsIGUgPT4gdGhpcy5jbG9zZVdlYnNvY2tldChlKSkKICAgICAgfQoKICB9Cg=="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Chat.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"page-loader\" ref=\"loader\">\n      <div class=\"page-loader__spinner\">\n        <svg viewBox=\"25 25 50 50\">\n          <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"/>\n        </svg>\n      </div>\n    </div>\n    <div class=\"sidebar\">\n      <div class=\"card\">\n        <header>\n          <p class=\"name\">{{name}}</p>\n        </header>\n      </div>\n      <div class=\"list\">\n        <ul>\n          <li>\n            <img class=\"avatar\" width=\"30\" height=\"30\" src=\"../../assets/imgs/group.png\">\n            <p class=\"name\">系统群聊</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"main\">\n      <div class=\"message\" ref=\"box\">\n        <ul>\n          <li v-for=\"(item,key) in messageList\" :id=\"key == (messageList.length - 1) ? 'end' : ''\">\n            <p class=\"time\">\n              <span>{{item.userId}}</span>\n            </p>\n             <div >\n              <span class=\"main-name\">来自:{{item.userName}}</span>\n              <div class=\"text\">{{item.msg}}</div>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"text\">\n        <el-input\n          v-model=\"form.message\" @keyup.native.enter=\"send\"\n          type=\"textarea\" :rows=\"5\" placeholder=\"请输入内容，按 Enter 键发送\">\n        </el-input>\n        <div class=\"btn\">\n          <el-button @click=\"clean\" size=\"mini\" type=\"danger\">清空</el-button>\n          <el-button @click=\"send\" size=\"mini\" icon=\"el-icon-position\" type=\"success\">发送</el-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import exam from \"../../api/exam\";\n\n    export default {\n        name: \"Chat\",\n        data() {\n            return {\n                online: 0,\n                websocket: undefined,\n                    name: '',\n                showMessage:'',\n                form: {message: ''},\n\n                messageFormat:{\n                    userId:'1629903139122',\n                    userName:'',\n                    msg:''\n                },\n\n\n               messageList:[],\n                ws:\"\",\n\n            }\n        },\n        updated() {\n            this.scroll()\n        },\n        mounted() {\n\n            this.$refs.loader.style.display = 'none';\n        },\n        created() {\n            this.init();\n            window.addEventListener('beforeunload', e => this.closeWebsocket(e))\n        },\n        methods: {\n            _message(message, type) {\n                this.$message({\n                    message: message,\n                    type: type\n                })\n            },\n            _notify(title, message, type) {\n                this.$notify({\n                    title: title,\n                    message: message,\n                    type: type\n                });\n            },\n\n\n            init() {\n\n\n                this.initUser();\n\n\n                this.initWebSocket();\n            },\n\n            initUser() {\n\n                exam.getUserAccount().then(\n                    response=>{\n                        this.name=response.data.obj\n                    }\n                )\n\n            },\n\n            initWebSocket() {\n                let $this = this;\n                // this.websocket = new WebSocket(api.websocket(this.form.id))\n                this.websocket = new WebSocket(\"ws://localhost:8889/websocket\");\n\n                //链接发送错误时调用\n                this.websocket.onerror = function () {\n                    $this._notify('提醒', 'WebSocket链接错误', 'error')\n                }\n                //链接成功时调用\n                this.websocket.onopen = function (event) {\n                    $this._notify('提醒', 'WebSocket链接成功', 'success')\n                }\n\n                //接收到消息时回调\n                 this.websocket.onmessage = function (event) {\n                //     let entity = JSON.parse(event.data);\n                //     var myDate = new Date();\n                //     console.log(\"xxxxxxxxxxx\"+myDate.toLocaleString())\n                //     this.time=myDate.toLocaleString()\n                //     this.from_name=entity.userName\n                //     this.message=entity.msg\n                //     console.log(\"==================\")\n                //     console.log(this.time)\n                //     console.log(this.from_name)\n                //     console.log(this.message)\n                  let data = JSON.parse(event.data)\n                     if(data.userName){\n                           $this.messageList.push(data)\n                     }\n                     else {\n                         this.online=data\n                         console.log(\"xxxxxxxxxxxxxxxxxxzzzzzzz\"+data)\n                         $this._notify('提醒', '当前在线人数:'+data,'info' )\n                     }\n                     $this.scroll()\n                }\n                //链接关闭时调用\n                this.websocket.onclose = function () {\n\n                    $this._notify('提醒', 'WebSocket链接关闭', 'info')\n                }\n\n            },\n\n            //推送消息\n            send() {\n                if (this.form.message == null || this.form.message.trim() == '') {\n                    this._message('请输入消息内容', 'warning')\n                    return;\n                      }\n                else {\n                    var myDate = new Date();\n                    this.messageFormat.userId=myDate.toLocaleString()\n                    this.messageFormat.userName=this.name\n                    this.messageFormat.msg=this.form.message\n\n                   let sendMessage= JSON.stringify(this.messageFormat)\n                    this.websocket.send(sendMessage)\n                }\n                this.form.message=''\n                this.scroll()\n            },\n\n            //清空消息\n            clean() {\n                this.form.message = ''\n            },\n            //切换选择窗口\n            selectWindow(id) {\n                this.current_window_id = id;\n                if (!this.current_window_id) {\n                    this.initCommonMessage();\n                } else {\n                    this.initSelfMessage();\n                }\n            },\n\n            //窗口滚动\n            scroll() {\n                let box = this.$refs.box\n                // box.scrollTop = 10000000\n            },\n\n            closeWebsocket(){\n                if(this.ws){\n                    this.ws.close();\n                    let _this=this\n                    this.ws.onclose = function(evt) {\n                        $this._notify('提醒', 'WebSocket关闭', 'info')\n                    };\n                }\n            }\n        },\n        beforeDestroy() {\n            window.addEventListener('beforeunload', e => this.closeWebsocket(e))\n        }\n\n    }\n</script>\n\n<style scoped lang=\"css\">\n  @import \"../../assets/css/chat/main.css\";\n</style>\n"]}]}