{"remainingRequest":"/home/ckg/A毕设/exam-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ckg/A毕设/exam-vue/src/components/user/Chat.vue?vue&type=style&index=0&id=3451dd5c&scoped=true&lang=css&","dependencies":[{"path":"/home/ckg/A毕设/exam-vue/src/components/user/Chat.vue","mtime":1649580872948},{"path":"/home/ckg/A毕设/exam-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubWVzc2FnZSB7CiAgaGVpZ2h0OiAzNTBweDsKfQouaXZ1LWNhcmQtYm9keSB7CiAgcGFkZGluZzo1cHg7Cn0KLml2dS1tb2RhbC1ib2R5ewogIHBhZGRpbmc6IDBweCAxNnB4IDE2cHggIDE2cHg7Cn0KLmNoYXQtbWVzc2FnZS1ib2R5IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiNGOEY4RjY7CiAgd2lkdGg6NTQ1cHg7CiAgaGVpZ2h0OiAzNTBweDsKICBvdmVyZmxvdzogYXV0bzsKfQoubWVzc2FnZS1jYXJkIHsKICBtYXJnaW46NXB4Owp9Ci5tZXNzYWdlLXJvdy1sZWZ0IHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOnJvdzsKfQoubWVzc2FnZS1yb3ctcmlnaHQgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246cm93LXJldmVyc2U7Cn0KLm1lc3NhZ2UtY29udGVudCB7CiAgbWFyZ2luOi01cHggNXB4IDVweCA1cHg7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjpjb2x1bW47Cn0KLm1lc3NhZ2UtYm9keSB7CiAgYm9yZGVyOjFweCBzb2xpZCAjRDlEQUQ5OwogIHBhZGRpbmc6NXB4OwogIGJvcmRlci1yYWRpdXM6M3B4OwogIGJhY2tncm91bmQtY29sb3I6I0ZGRjsKfQoubWVzc2FnZS10aW1lIHsKICBtYXJnaW46MCA1cHg7CiAgZm9udC1zaXplOjVweDsKICBjb2xvcjojRDlEQUQ5Owp9Ci5mb290ZXItYnRuIHsKICBmbG9hdDpyaWdodDsKICBtYXJnaW4tYm90dG9tOiA1cHg7Cn0KLnNwaW4taWNvbi1sb2FkIHsKICBhbmltYXRpb246YW5pLXNwaW4gMXMgbGluZWFyIGluZmluaXRlOwp9CkBrZXlmcmFtZXMgYW5pLXNwaW57CiAgZm9ybXt0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTt9CiAgNTAlIHt0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO30KICB0byAge3RyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7fQp9Cg=="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n    <div>\n        聊天室\n    </div>\n\n    <Modal title=\"在线沟通\" v-model=\"chatVisible\"\n           draggable\n           footer-hide\n           :width=\"580\" @on-cancel=\"cancel\">\n      <div class=\"chat\">\n        <div  class=\"chat-message-body\" id =\"chatform\" @scroll=\"scroll\"\n        >\n          <Spin v-if=\"loading\">\n            <Icon type=\"ios-loading\" size=18 class=\"spin-icon-load\"></Icon>\n          </Spin>\n          <div  dis-hover v-for=\"(item,index) in data\"\n                :key=\"index\" class=\"message-card\">\n            <div :class=\"item.isOneself == 1?'message-row-right': 'message-row-left'\">\n              <img :src=\"item.avatar?item.avatar:defualtAvatar\"\n                   height=\"35\" width=\"35\" >\n              <div class=\"message-content\">\n                <div :style=\"item.isOneself == 1?'text-align:right;display: flex;flex-direction:row-reverse':''\">\n                  {{item.nickName}}\n                  <span class=\"message-time\">\n                   {{item.createTime}}</span>\n                </div>\n                <div class=\"message-body\">\n                  {{item.content.msg}}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Input\n          v-model=\"form.msg\"\n          type=\"textarea\"\n          style=\"margin:10px 0;\"\n          placeholder=\"主动一点，世界会更大！\"\n          :rows=\"4\"\n        />\n      </div>\n      <div class=\"footer-btn\">\n        <Button @click=\"cancel\" type=\"text\">取消</Button>\n        <Button type=\"primary\" @click=\"sendMsg\">发送</Button>\n      </div>\n    </Modal>\n\n</template>\n<script>\n    // import {listMsg,sendMsg } from \"@/api/index\";\n    export default {\n        name: \"MesBoard\",\n        props: {\n            value: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data() {\n            return {\n                chatVisible:this.value,\n                loading:false,\n                defualtAvatar:require('../../assets/logo.png'), // 后端没有返回头像默认头像，注意：需要用require请求方式才能动态访问本地文件\n                data:[],\n                distincData:[], // 消息去重数组\n                offsetMax:0, // 最大偏移位，记录当前获取的最大id，往后的定时轮询数据时每次只获取比这个id大的数据\n                offsetMin:0,  // 最小偏移位，记录当前获取的最小id，往上滑动时每次只获取比这小id大的数据\n                searchForm:{ // 每次定时获取数据或首次加载数据提交的form表单数据\n                    pageNumber: 1,\n                    pageSize: 20\n                },\n                form:{ // 发送数据提交数据表单\n                    content:\"\",\n                    msg:\"\"\n                },\n                timerSwitch:0 // 定时器开关，默认关闭\n            };\n        },\n        methods: {\n            init(){\n\n            },\n            loadMsg(){ // 窗体打开默认加载一页数据，窗体什么周期中值运行一次\n                let that = this;\n                this.searchForm.offsetMax = this.offsetMax;\n                // listMsg(this.searchForm).then(res=>{\n                //     if (res.code == 200) {\n                //         res.data.forEach(e => {\n                //             // 标记最大偏移位\n                //             if(that.offsetMax < e.msgId){\n                //                 that.offsetMax = e.msgId;\n                //             }\n                //             e.content = JSON.parse(e.content);\n                //             that.data.unshift(e)\n                //             that.distincData.push(e.msgId);\n                //             // 标记最大偏移位，后端返回数据是逆序，所以最后一条id最新\n                //             that.offsetMin = e.msgId;\n                //         });\n                //         // 数据加载完成，滚动条滚动到窗体底部\n                //         this.scrollToBottom();\n                //     }\n                // });\n\n\n            },\n            show(){ // 打开窗体初始化数据\n                // 初始化数据\n                this.data =[];\n                this.distincData =[];\n                this.offsetMax = 0;\n                this.offsetMin = 0;\n                this.searchForm.pageNumber = 1;\n                this.searchForm.pageSize = 20;\n                this.form ={\n                    content:\"\",\n                    msg:\"\"\n                };\n                this.loadMsg();\n                this.chatVisible = true;\n                // 开启定时器\n                this.timerSwitch = 1;\n                this.reloadData();\n            },\n            sendMsg(){ // 发送消息\n                if(!this.form.msg){\n                    this.$Message.warning(\"不能发送空白信息\");\n                    return;\n                }\n                let content = { // 封装消息体\n                    type:\"txt\",\n                    msg:this.form.msg\n                };\n                this.form.content = JSON.stringify(content);\n                sendOrderMsg(this.form).then(res=>{\n                    if (res.code == 200) {\n                        res.data.content = JSON.parse(res.data.content);\n                        this.data.push(res.data)\n                        this.form.msg=\"\";\n                        this.distincData.push(res.data.msgId);\n                        this.scrollToBottom();\n                        // 发送信息只返回当前一条，此时可能对方已经发送信息，所以不修改偏移量\n                    }\n                });\n            },\n            scrollToBottom(){ // 滚动到窗体底部\n                this.$nextTick(()=>{\n                    let chatform = document.getElementById(\"chatform\");\n                    chatform.scrollTop = chatform.scrollHeight;\n                });\n            },\n            // 滚动到最上方，取历史数据，根据分页参数取。不用修改偏移标记位，但是需要判重\n            scroll(){\n                let chatform = document.getElementById(\"chatform\");\n                let scrollTop = chatform.scrollTop;\n                if(scrollTop == 0){\n                    this.loading =true;\n                    let that = this;\n                    this.searchForm.offsetMin = this.offsetMin;\n                    this.searchForm.offsetMax = \"\";\n                    listMsgByOrder(this.searchForm).then(res=>{\n                        this.loading =false;\n                        if (res.code == 200) {\n                            res.data.forEach(e => {\n                                if(that.distincData.indexOf(e.msgId) <0){\n                                    e.content = JSON.parse(e.content);\n                                    that.data.unshift(e);\n                                    that.distincData.push(e.msgId);\n                                    // 修改最小偏移位\n                                    if(that.offsetMin > e.msgId){\n                                        that.offsetMin = e.msgId;\n                                    }\n                                }\n                            });\n                        }\n                    });\n                }\n            },\n            reloadData(){\n                // 判断定时器开关是否开启，如果开启，则执行定时器\n                if(this.timerSwitch){\n                    setTimeout(() => {\n                        let params = {};\n                        params.pageNumber = 1;\n                        params.pageSize = 20;\n                        params.offsetMax = this.offsetMax;\n                        let that = this;\n                        listMsgByOrder(params).then(res=>{\n                            if (res.code == 200) {\n                                res.data.forEach(e => {\n                                    // 修改最大偏移位，放到校验重复之前，防止当前发送信息已经放入消息列表，但是偏移值没该的情况\n                                    if(that.offsetMax < e.msgId){\n                                        that.offsetMax = e.msgId;\n                                    }\n                                    if(that.distincData.indexOf(e.msgId) <0){\n                                        e.content = JSON.parse(e.content);\n                                        that.data.push(e)\n                                        that.distincData.push(e.msgId);\n                                        // 收到新消息，判断高度，如果当前滚动条高度距底部小于100，则动滑到底部\n                                        let chatform = document.getElementById(\"chatform\");\n                                        let gap = chatform.scrollHeight -chatform.scrollTop;\n                                        if(gap >0 && gap < 400){\n                                            this.scrollToBottom();\n                                        }\n                                    }\n                                });\n                                that.reloadData();\n                            }\n                        });\n                    },1000*2);\n                }\n\n            },\n            cancel(){ // 关闭窗体需要把提示任务开关一起关闭调\n                this.chatVisible = false;\n                this.timerSwitch = 0;\n            }\n        },\n        mounted() {\n        }\n    };\n</script>\n\n\n<style scoped>\n  .message {\n    height: 350px;\n  }\n  .ivu-card-body {\n    padding:5px;\n  }\n  .ivu-modal-body{\n    padding: 0px 16px 16px  16px;\n  }\n  .chat-message-body {\n    background-color:#F8F8F6;\n    width:545px;\n    height: 350px;\n    overflow: auto;\n  }\n  .message-card {\n    margin:5px;\n  }\n  .message-row-left {\n    display: flex;\n    flex-direction:row;\n  }\n  .message-row-right {\n    display: flex;\n    flex-direction:row-reverse;\n  }\n  .message-content {\n    margin:-5px 5px 5px 5px;\n    display: flex;\n    flex-direction:column;\n  }\n  .message-body {\n    border:1px solid #D9DAD9;\n    padding:5px;\n    border-radius:3px;\n    background-color:#FFF;\n  }\n  .message-time {\n    margin:0 5px;\n    font-size:5px;\n    color:#D9DAD9;\n  }\n  .footer-btn {\n    float:right;\n    margin-bottom: 5px;\n  }\n  .spin-icon-load {\n    animation:ani-spin 1s linear infinite;\n  }\n  @keyframes ani-spin{\n    form{transform: rotate(0deg);}\n    50% {transform: rotate(180deg);}\n    to  {transform: rotate(360deg);}\n  }\n</style>\n"]}]}