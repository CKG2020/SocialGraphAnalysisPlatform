{"remainingRequest":"/home/ckg/A毕设/exam-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ckg/A毕设/exam-vue/src/components/user/Chat.vue?vue&type=style&index=0&id=3451dd5c&lang=scss&scoped=true&","dependencies":[{"path":"/home/ckg/A毕设/exam-vue/src/components/user/Chat.vue","mtime":1649644886863},{"path":"/home/ckg/A毕设/exam-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/A毕设/exam-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNhcHAgewogIG1hcmdpbjogMjBweCBhdXRvOwogIHdpZHRoOiA5MDBweDsKICBoZWlnaHQ6IDY1MHB4OwogIG92ZXJmbG93OiBoaWRkZW47CiAgYm9yZGVyLXJhZGl1czogMTBweDsKICAuc2lkZWJhciwgLm1haW4gLC50b29sYmFyewogICAgaGVpZ2h0OiAxMDAlOwogIH0KICAudG9vbGJhcnsKICAgIGZsb2F0OiBsZWZ0OwogICAgY29sb3I6ICNmNGY0ZjQ7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmUzMjM4OwogICAgd2lkdGg6IDYwcHg7CiAgfQogIC5zaWRlYmFyIHsKICAgIGZsb2F0OiBsZWZ0OwogICAgY29sb3I6ICMwMDAwMDA7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUNFQUU4OwogICAgd2lkdGg6IDI0MHB4OwogIH0KICAubWFpbiB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTsKICB9Cn0K"},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n  <div id=\"app\">\n    <div role=\"alert\" class=\"el-notification right\" style=\"top: 16px; z-index: 2000;\">\n      <i class=\"el-notification__icon el-icon-success\"></i>\n      <div class=\"el-notification__group is-with-icon\">\n        <h2 class=\"el-notification__title\">系统信息</h2>\n        <div class=\"el-notification__content\">\n          <p>\n            在线用户： {{online}}\n            <br>\n            <el-button @click=\"logout\" style=\"float: right\" size=\"mini\" type=\"danger\" plain>注销</el-button>\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"toolbar\">\n      <toolbar></toolbar>\n    </div>\n\n    <div class=\"main\">\n      <chattitle></chattitle>\n      <message></message>\n      <usertext></usertext>\n    </div>\n  </div>\n</template>\n\n<script>\n    import card from '../../components/chat/card'\n    import list from '../../components/chat/list.vue'\n    import message from '../../components/chat/message.vue'\n    import usertext from '../../components/chat/usertext.vue'\n    // import toolbar from \"../../components/chat/toolbar\";\n    import chattitle from \"../../components/chat/chattitle\"\n\n    export default {\n        name: 'ChatRoom',\n        data () {\n            return {\n                online\n            }\n        },\n        mounted:function() {\n            // //初始化数据\n            // this.$store.dispatch('initData');\n            //连接WebSocket服务\n            this.$store.dispatch('connect');\n\n\n        },\n        created () {\n            // //在页面加载时读取sessionStorage里的状态信息\n            // if (sessionStorage.getItem(\"state\") ) {\n            //   this.$store.replaceState(Object.assign({}, this.$store.state,JSON.parse(sessionStorage.getItem(\"store\"))))\n            // }\n\n            //在页面刷新时将vuex里的最新信息保存到sessionStorage里\n            window.addEventListener(\"beforeunload\",()=>{\n                sessionStorage.setItem(\"state\",JSON.stringify(this.$store.state))\n            })\n        },\n        components:{\n            toolbar,\n            card,\n            list,\n            message,\n            usertext,\n            chattitle\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n  #app {\n    margin: 20px auto;\n    width: 900px;\n    height: 650px;\n    overflow: hidden;\n    border-radius: 10px;\n    .sidebar, .main ,.toolbar{\n      height: 100%;\n    }\n    .toolbar{\n      float: left;\n      color: #f4f4f4;\n      background-color: #2e3238;\n      width: 60px;\n    }\n    .sidebar {\n      float: left;\n      color: #000000;\n      background-color: #ECEAE8;\n      width: 240px;\n    }\n    .main {\n      position: relative;\n      overflow: hidden;\n      background-color: #eee;\n    }\n  }\n</style>\n\n<!--<template>-->\n<!--  <div >-->\n<!--    <div class=\"page-loader\" ref=\"loader\">-->\n<!--      <div class=\"page-loader__spinner\">-->\n<!--        <svg viewBox=\"25 25 50 50\">-->\n<!--          <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"/>-->\n<!--        </svg>-->\n<!--      </div>-->\n<!--    </div>-->\n<!--    <div role=\"alert\" class=\"el-notification right\" style=\"top: 16px; z-index: 2000;\">-->\n<!--      <i class=\"el-notification__icon el-icon-success\"></i>-->\n<!--      <div class=\"el-notification__group is-with-icon\">-->\n<!--        <h2 class=\"el-notification__title\">系统信息</h2>-->\n<!--        <div class=\"el-notification__content\">-->\n<!--          <p>-->\n<!--            在线用户： {{'3'}}-->\n<!--            <br>-->\n<!--            <el-button @click=\"logout\" style=\"float: right\" size=\"mini\" type=\"danger\" plain>注销</el-button>-->\n<!--          </p>-->\n<!--        </div>-->\n<!--      </div>-->\n<!--    </div>-->\n<!--    <div class=\"sidebar\">-->\n<!--      <div class=\"card\">-->\n<!--        <header>-->\n<!--&lt;!&ndash;          <img class=\"avatar\" width=\"40\" height=\"40\" :alt=\"user.name\" :src=\"user.avatar\">&ndash;&gt;-->\n<!--          <p class=\"name\">{{'ckg'}}</p>-->\n<!--        </header>-->\n<!--        &lt;!&ndash;            <footer>&ndash;&gt;-->\n<!--        &lt;!&ndash;                <input class=\"search\" type=\"text\" placeholder=\"search user...\">&ndash;&gt;-->\n<!--        &lt;!&ndash;            </footer>&ndash;&gt;-->\n<!--      </div>-->\n<!--      <div class=\"list\">-->\n\n<!--&lt;!&ndash;          <li :class=\"{ active: current_window_id === 0 }\" @click=\"selectWindow(0)\">&ndash;&gt;-->\n\n\n<!--          &lt;!&ndash;            <img class=\"avatar\" width=\"30\" height=\"30\" src=\"/avatar/group.png\">&ndash;&gt;-->\n<!--            <p class=\"name\">系统群聊</p>-->\n\n<!--&lt;!&ndash;          <li v-for=\"item in userList\" v-if=\"item.id != form.id\" :class=\"{ active: current_window_id === item.id }\"&ndash;&gt;-->\n<!--&lt;!&ndash;              @click=\"selectWindow(item.id)\">&ndash;&gt;-->\n<!--&lt;!&ndash;            <img class=\"avatar\" width=\"30\" height=\"30\" :alt=\"item.name\" :src=\"item.avatar\">&ndash;&gt;-->\n<!--&lt;!&ndash;            <p class=\"name\">{{item.name}}</p>&ndash;&gt;-->\n<!--&lt;!&ndash;          </li>&ndash;&gt;-->\n\n<!--      </div>-->\n<!--    </div>-->\n<!--    <div class=\"main\">-->\n<!--      <div class=\"message\" ref=\"box\">-->\n<!--        <ul>-->\n<!--          <li v-for=\"(item,key) in messageList\" :id=\"key == (messageList.length - 1) ? 'end' : ''\">-->\n<!--            <p class=\"time\">-->\n<!--              <span>{{item.time}}</span>-->\n<!--            </p>-->\n<!--            <div :class=\"'main ' +  (item.from.id == form.id ? 'self': '')\">-->\n<!--&lt;!&ndash;              <img class=\"avatar\" width=\"30\" height=\"30\" :src=\"item.from.avatar\"/>&ndash;&gt;-->\n<!--              <span class=\"main-name\">{{'item.from.name'}}</span>-->\n<!--              <div class=\"text\">{{'item.message'}}</div>-->\n<!--            </div>-->\n<!--          </li>-->\n<!--        </ul>-->\n<!--      </div>-->\n<!--      <div class=\"text\">-->\n<!--        <el-input-->\n<!--          v-model=\"form.message\" @keyup.native.enter=\"send\"-->\n<!--          type=\"textarea\" :rows=\"5\" placeholder=\"请输入内容，按 Enter 键发送\">-->\n<!--        </el-input>-->\n<!--        <div class=\"btn\">-->\n<!--          <el-button @click=\"clean\" size=\"mini\" type=\"danger\">清空</el-button>-->\n<!--          <el-button @click=\"send\" size=\"mini\" icon=\"el-icon-position\" type=\"success\">发送</el-button>-->\n<!--        </div>-->\n<!--      </div>-->\n<!--    </div>-->\n<!--  </div>-->\n<!--</template>-->\n<!--<script>-->\n<!--export default {-->\n<!--name: 'Chat',-->\n<!--data() {-->\n<!--return {-->\n<!--online: 0,-->\n<!--websocket: undefined,-->\n<!--user: {-->\n<!--id: '1',-->\n<!--// avatar: '',-->\n<!--name: ''-->\n<!--},-->\n<!--form: {message: ''},-->\n\n<!--//当前激活窗口ID-->\n<!--current_window_id: 0,-->\n\n<!--//在线用户列表-->\n<!--userList: [],-->\n<!--//推送消息列表-->\n<!--messageList  : [],-->\n\n<!--}-->\n<!--},-->\n<!--updated() {-->\n<!--this.scroll()-->\n<!--},-->\n<!--mounted() {-->\n<!--this.init();-->\n<!--this.$refs.loader.style.display = 'none';-->\n<!--},-->\n<!--created() {-->\n<!--this.form.id = this.subURL();-->\n<!--},-->\n<!--methods: {-->\n<!--_message(message, type) {-->\n<!--this.$message({-->\n<!--message: message,-->\n<!--type: type-->\n<!--})-->\n<!--},-->\n<!--_notify(title, message, type) {-->\n<!--this.$notify({-->\n<!--title: title,-->\n<!--message: message,-->\n<!--type: type-->\n<!--});-->\n<!--},-->\n\n<!--/**-->\n<!--* Get Rest URL params-->\n<!--* for example: http://localhost:8080/1560490905528/chat-->\n<!--*-->\n<!--* return 1560490905528-->\n<!--*/-->\n<!--subURL() {-->\n<!--return window.location.pathname.substring(window.location.pathname.indexOf('/') + 1, window.location.pathname.lastIndexOf('/'))-->\n<!--},-->\n\n<!--init() {-->\n<!--console.log(this.messageList)-->\n<!--/**-->\n<!--* 加载用户信息-->\n<!--*/-->\n<!--// this.initUser();-->\n\n<!--/**-->\n<!--* 加载公共消息列表 &#45;&#45; 群组-->\n<!--*/-->\n<!--this.initCommonMessage();-->\n\n<!--/**-->\n<!--* 每次刷新页面，主动链接WebSocket-->\n<!--*/-->\n<!--this.initWebSocket();-->\n<!--},-->\n\n<!--// initUser() {-->\n<!--// //加载当前用户信息-->\n<!--// this.$http.get(api.getUser(this.form.id)).then(response => {-->\n<!--// this.user = response.body.data-->\n<!--// })-->\n<!--//-->\n<!--// //加载在线用户列表-->\n<!--// this.$http.get(api.getOnline()).then(response => {-->\n<!--// let data = response.body.data;-->\n<!--// if (data.length > 0) {-->\n<!--// this.userList = data;-->\n<!--// this.online = this.userList.length-->\n<!--// }-->\n<!--// })-->\n<!--// },-->\n\n<!--initWebSocket() {-->\n<!--let $this = this;-->\n<!--this.websocket = new WebSocket(api.websocket(this.form.id))-->\n<!--//链接发送错误时调用-->\n<!--this.websocket.onerror = function () {-->\n<!--$this._notify('提醒', 'WebSocket链接错误', 'error')-->\n<!--}-->\n<!--//链接成功时调用-->\n<!--this.websocket.onopen = function () {-->\n<!--$this._notify('提醒', 'WebSocket链接成功', 'success')-->\n<!--}-->\n<!--//接收到消息时回调-->\n<!--this.websocket.onmessage = function (event) {-->\n<!--$this.clean()-->\n<!--let entity = JSON.parse(event.data);-->\n\n<!--//上线提醒-->\n<!--if (entity.data == undefined) {-->\n<!--$this.initUser()-->\n<!--$this._notify('消息', entity.msg, 'info')-->\n<!--$this.scroll()-->\n<!--return;-->\n<!--}-->\n\n<!--//消息接收-->\n<!--let data = JSON.parse(event.data).data-->\n<!--if (data.to != undefined) {-->\n<!--//单个窗口发送，仅推送到指定的窗口-->\n<!--if (data.from.id == $this.current_window_id) {-->\n<!--$this.messageList.push(data)-->\n<!--}-->\n<!--} else {-->\n<!--//群发，推送到官方群组窗口-->\n<!--$this.messageList.push(data)-->\n<!--}-->\n<!--$this.scroll()-->\n<!--}-->\n<!--//链接关闭时调用-->\n<!--this.websocket.onclose = function () {-->\n<!--$this._notify('提醒', 'WebSocket链接关闭', 'info')-->\n<!--}-->\n<!--},-->\n\n<!--initCommonMessage() {-->\n<!--// this.$http.get(api.getCommon()).then(response => {-->\n<!--// let data = response.body.data-->\n<!--// if (data.length > 0) {-->\n<!--// this.messageList = data-->\n<!--// }-->\n<!--// })-->\n<!--},-->\n\n<!--initSelfMessage() {-->\n<!--// this.$http.get(api.getSelf(this.form.id, this.current_window_id)).then(response => {-->\n<!--// let data = response.body.data-->\n<!--// this.messageList = data-->\n<!--// })-->\n<!--},-->\n\n<!--//推送消息-->\n<!--send() {-->\n<!--// if (this.form.message == null || this.form.message.trim() == '') {-->\n<!--// this._message('请输入消息内容', 'warning')-->\n<!--// return;-->\n<!--// }-->\n<!--// if (!this.current_window_id) {-->\n<!--// this.websocket.send(this.form.message.replace(/[\\r\\n]/g,\"\"))-->\n<!--// this.initCommonMessage()-->\n<!--// } else {-->\n<!--// let data = {-->\n<!--// message: this.form.message,-->\n<!--// from: this.user-->\n<!--// }-->\n<!--// this.$http.post(api.pushId(this.current_window_id), JSON.stringify(data)).then(response => {-->\n<!--// if (response.body.code == 200) {-->\n<!--// this.initSelfMessage()-->\n<!--// this.clean()-->\n<!--// this._notify('提醒', '消息推送成功', 'success')-->\n<!--// } else {-->\n<!--// this._notify('提醒', response.body.msg, 'error')-->\n<!--// }-->\n<!--// })-->\n<!--// }-->\n<!--this.scroll()-->\n<!--},-->\n\n<!--//清空消息-->\n<!--clean() {-->\n<!--this.form.message = ''-->\n<!--},-->\n\n<!--//注销-->\n<!--logout() {-->\n<!--// this.$http.delete(api.logout(this.form.id)).then(response => {-->\n<!--// this.websocket.close()-->\n<!--// window.location.href = \"/\"-->\n<!--// })-->\n<!--},-->\n\n<!--//切换选择窗口-->\n<!--selectWindow(id) {-->\n<!--// this.current_window_id = id;-->\n<!--// if (!this.current_window_id) {-->\n<!--// this.initCommonMessage();-->\n<!--// } else {-->\n<!--// this.initSelfMessage();-->\n<!--// }-->\n<!--},-->\n\n<!--//窗口滚动-->\n<!--scroll() {-->\n<!--let box = this.$refs.box-->\n<!--box.scrollTop = 10000000-->\n<!--},-->\n<!--}-->\n\n<!--}-->\n<!--</script>-->\n"]}]}